{"ast":null,"code":"import { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nexport const SignUpUser = (username, email, password) => {\n  const data = {\n    username: username,\n    email: email,\n    password: password\n  };\n  fetch(`http://localhost:8080/api/auth/signup`, {\n    method: \"POST\",\n    // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    // 注册成功返回200，失败返回原因\n    if (!response.ok) {\n      return response.text().then(text => {\n        alert(text); //   throw new Error(text);\n      });\n    } else {\n      // alert(\"User was registered sucessfully!\");\n      // window.location.href = \"/login\";\n      return response.json();\n    }\n  }) // .then((response) => response.json())\n  .then(data => {\n    const profile = {\n      id: data.id,\n      displayName: data.username\n    };\n    console.log(\"profile: \" + JSON.stringify(profile));\n    fetch(`http://localhost:8080/api/profiles`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(profile)\n    }).then(response => {\n      // 注册成功返回200，失败返回原因\n      if (!response.ok) {\n        return response.text().then(text => {\n          var json = eval(text); // alert(text);\n\n          alert(json.message); //   throw new Error(text);\n        });\n      } else {\n        alert(\"User was registered sucessfully!\");\n        window.location.href = \"/login\";\n        return response.json();\n      }\n    });\n    console.log(\"Success:\", data);\n    console.log(\"Status code: \" + data.status);\n  }).catch(error => {\n    console.error(\"Error:\", error);\n  });\n};\n_c = SignUpUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpUser\");","map":{"version":3,"names":["useNavigate","React","SignUpUser","username","email","password","data","fetch","method","headers","body","JSON","stringify","then","response","ok","text","alert","json","profile","id","displayName","console","log","eval","message","window","location","href","status","catch","error"],"sources":["/Users/celia/Projects/Merakey/client/src/components/utilities/signUpUser.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\n\nexport const SignUpUser = (username, email, password) => {\n  const data = {\n    username: username,\n    email: email,\n    password: password,\n  };\n  fetch(`http://localhost:8080/api/auth/signup`, {\n    method: \"POST\", // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => {\n      // 注册成功返回200，失败返回原因\n      if (!response.ok) {\n        return response.text().then((text) => {\n          alert(text);\n          //   throw new Error(text);\n        });\n      } else {\n        // alert(\"User was registered sucessfully!\");\n        // window.location.href = \"/login\";\n        return response.json();\n      }\n    })\n    // .then((response) => response.json())\n    .then((data) => {\n      const profile = {\n        id: data.id,\n        displayName: data.username,\n      };\n      console.log(\"profile: \" + JSON.stringify(profile));\n      fetch(`http://localhost:8080/api/profiles`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(profile),\n      }).then((response) => {\n        // 注册成功返回200，失败返回原因\n        if (!response.ok) {\n          return response.text().then((text) => {\n            var json = eval(text);\n            // alert(text);\n            alert(json.message);\n            //   throw new Error(text);\n          });\n        } else {\n          alert(\"User was registered sucessfully!\");\n          window.location.href = \"/login\";\n          return response.json();\n        }\n      });\n      console.log(\"Success:\", data);\n      console.log(\"Status code: \" + data.status);\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n    });\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+B;EACvD,MAAMC,IAAI,GAAG;IACXH,QAAQ,EAAEA,QADC;IAEXC,KAAK,EAAEA,KAFI;IAGXC,QAAQ,EAAEA;EAHC,CAAb;EAKAE,KAAK,CAAE,uCAAF,EAA0C;IAC7CC,MAAM,EAAE,MADqC;IAC7B;IAChBC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFoC;IAK7CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;EALuC,CAA1C,CAAL,CAOGO,IAPH,CAOSC,QAAD,IAAc;IAClB;IACA,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;MAChB,OAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBG,IAAD,IAAU;QACpCC,KAAK,CAACD,IAAD,CAAL,CADoC,CAEpC;MACD,CAHM,CAAP;IAID,CALD,MAKO;MACL;MACA;MACA,OAAOF,QAAQ,CAACI,IAAT,EAAP;IACD;EACF,CAnBH,EAoBE;EApBF,CAqBGL,IArBH,CAqBSP,IAAD,IAAU;IACd,MAAMa,OAAO,GAAG;MACdC,EAAE,EAAEd,IAAI,CAACc,EADK;MAEdC,WAAW,EAAEf,IAAI,CAACH;IAFJ,CAAhB;IAIAmB,OAAO,CAACC,GAAR,CAAY,cAAcZ,IAAI,CAACC,SAAL,CAAeO,OAAf,CAA1B;IACAZ,KAAK,CAAE,oCAAF,EAAuC;MAC1CC,MAAM,EAAE,MADkC;MAE1CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFiC;MAK1CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,OAAf;IALoC,CAAvC,CAAL,CAMGN,IANH,CAMSC,QAAD,IAAc;MACpB;MACA,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;QAChB,OAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBG,IAAD,IAAU;UACpC,IAAIE,IAAI,GAAGM,IAAI,CAACR,IAAD,CAAf,CADoC,CAEpC;;UACAC,KAAK,CAACC,IAAI,CAACO,OAAN,CAAL,CAHoC,CAIpC;QACD,CALM,CAAP;MAMD,CAPD,MAOO;QACLR,KAAK,CAAC,kCAAD,CAAL;QACAS,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;QACA,OAAOd,QAAQ,CAACI,IAAT,EAAP;MACD;IACF,CApBD;IAqBAI,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBjB,IAAxB;IACAgB,OAAO,CAACC,GAAR,CAAY,kBAAkBjB,IAAI,CAACuB,MAAnC;EACD,CAlDH,EAmDGC,KAnDH,CAmDUC,KAAD,IAAW;IAChBT,OAAO,CAACS,KAAR,CAAc,QAAd,EAAwBA,KAAxB;EACD,CArDH;AAsDD,CA5DM;KAAM7B,U"},"metadata":{},"sourceType":"module"}