{"ast":null,"code":"var _jsxFileName = \"/Users/celia/Projects/Merakey/client/src/components/user/gameHistory.js\",\n    _s = $RefreshSig$();\n\nimport SecondSide from \"./secondSide\";\nimport h2Clock from \"./icons/h2-clock.svg\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GameHistory() {\n  _s();\n\n  const navigate = useNavigate();\n  const [records, setRecords] = React.useState([]);\n\n  function GetGame(id, field) {\n    const response = fetch(`http://localhost:8080/api/games/meta/${id}`).then(res => res.json()).then(data => {\n      // console.log(\"data of user \" + uid + \": \" + JSON.stringify(data.avatar));\n      switch (field) {\n        case \"cover\":\n          return JSON.stringify(data.coverR);\n\n        case \"name\":\n          return data.name;\n\n        case \"desc\":\n          return data.description;\n      }\n    });\n    return response;\n  }\n\n  const getDate = d => {\n    // sqlDate = Date.parse(sqlDate);\n    let jsDate = new Date(d);\n    var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var month = months[jsDate.getMonth()];\n    var hr = d.getHours();\n    var min = d.getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    var ampm = \"am\";\n\n    if (hr > 12) {\n      hr -= 12;\n      ampm = \"pm\";\n    }\n\n    var date = jsDate.getDate();\n    var year = jsDate.getFullYear();\n    return `${date} ${month} ${year}`;\n  };\n\n  const getRecords = async userId => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(async data => {\n      var records = data.records;\n\n      for (let index = 0; index < records.length; index++) {\n        var game = records[index].gameId;\n        records[index].cover = await GetGame(game, \"cover\");\n        records[index].gameName = await GetGame(game, \"name\");\n        records[index].gameDesc = await GetGame(game, \"desc\");\n      }\n\n      setRecords(data.records.reverse());\n    });\n  };\n\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) => roles.push(x.slice(5).toLowerCase()));\n    console.log(roles);\n  }\n\n  React.useEffect(() => {\n    getRecords(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SecondSide, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"user-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: h2Clock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Game History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subject-block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-wrapper\",\n          children: records.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"his-cover-container\",\n              onClick: () => navigate(`/games/${record.gameId}`),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: JSON.parse(record.cover)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"story-meta\",\n              onClick: () => navigate(`/games/${record.gameId}`),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: record.gameName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"desc\",\n                children: record.gameDesc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time\",\n                children: \"11:30 AM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date\",\n                children: getDate(Date.parse(record.createdAt))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"perf-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"points\",\n                children: \"373 pts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"end\",\n                children: \"True End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"replay-btn\",\n              onClick: () => navigate(`/games/${record.gameId}/play`),\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GameHistory, \"VGuMnGy/tEXSq8Oi8lEhwvu45pg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GameHistory;\nexport default GameHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameHistory\");","map":{"version":3,"names":["SecondSide","h2Clock","IsLoggedIn","logout","getCurrentUser","React","useEffect","useRef","useNavigate","GameHistory","navigate","records","setRecords","useState","GetGame","id","field","response","fetch","then","res","json","data","JSON","stringify","coverR","name","description","getDate","d","jsDate","Date","months","month","getMonth","hr","getHours","min","getMinutes","ampm","date","year","getFullYear","getRecords","userId","method","headers","index","length","game","gameId","cover","gameName","gameDesc","reverse","console","log","username","email","roles","forEach","x","i","push","slice","toLowerCase","window","scrollTo","map","record","parse","createdAt"],"sources":["/Users/celia/Projects/Merakey/client/src/components/user/gameHistory.js"],"sourcesContent":["import SecondSide from \"./secondSide\";\nimport h2Clock from \"./icons/h2-clock.svg\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction GameHistory() {\n  const navigate = useNavigate();\n  const [records, setRecords] = React.useState([]);\n  function GetGame(id, field) {\n    const response = fetch(`http://localhost:8080/api/games/meta/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(\"data of user \" + uid + \": \" + JSON.stringify(data.avatar));\n        switch (field) {\n          case \"cover\":\n            return JSON.stringify(data.coverR);\n          case \"name\":\n            return data.name;\n          case \"desc\":\n            return data.description;\n        }\n      });\n    return response;\n  }\n  const getDate = (d) => {\n    // sqlDate = Date.parse(sqlDate);\n    let jsDate = new Date(d);\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var month = months[jsDate.getMonth()];\n    var hr = d.getHours();\n    var min = d.getMinutes();\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n    var ampm = \"am\";\n    if (hr > 12) {\n      hr -= 12;\n      ampm = \"pm\";\n    }\n    var date = jsDate.getDate();\n    var year = jsDate.getFullYear();\n    return `${date} ${month} ${year}`;\n  };\n\n  const getRecords = async (userId) => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(async (data) => {\n        var records = data.records;\n        for (let index = 0; index < records.length; index++) {\n          var game = records[index].gameId;\n          records[index].cover = await GetGame(game, \"cover\");\n          records[index].gameName = await GetGame(game, \"name\");\n          records[index].gameDesc = await GetGame(game, \"desc\");\n        }\n        setRecords(data.records.reverse());\n      });\n  };\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  React.useEffect(() => {\n    getRecords(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <>\n      <SecondSide />\n      <section class=\"user-main\">\n        <h2>\n          <img src={h2Clock} />\n          <span>Game History</span>\n        </h2>\n        <div className=\"subject-block\">\n          <div className=\"history-wrapper\">\n            {records.map((record) => (\n              <div className=\"game-history\">\n                <div\n                  className=\"his-cover-container\"\n                  onClick={() => navigate(`/games/${record.gameId}`)}\n                >\n                  <img src={JSON.parse(record.cover)} />\n                </div>\n                <div\n                  className=\"story-meta\"\n                  onClick={() => navigate(`/games/${record.gameId}`)}\n                >\n                  <div className=\"name\">{record.gameName}</div>\n                  <div className=\"desc\">{record.gameDesc}</div>\n                </div>\n                <div className=\"time-meta\">\n                  <div className=\"time\">11:30 AM</div>\n                  {/* <div className=\"date\">12 Dec 2022</div> */}\n                  <div className=\"date\">\n                    {getDate(Date.parse(record.createdAt))}\n                  </div>\n                </div>\n                <div className=\"perf-meta\">\n                  <div className=\"points\">373 pts</div>\n                  <div className=\"end\">True End</div>\n                </div>\n                <div\n                  className=\"replay-btn\"\n                  onClick={() => navigate(`/games/${record.gameId}/play`)}\n                >\n                  Play Again\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"bg-overlay\" />\n      </section>\n    </>\n  );\n}\nexport default GameHistory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}