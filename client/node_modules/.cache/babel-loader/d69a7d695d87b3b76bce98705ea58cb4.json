{"ast":null,"code":"import { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport const SignUpUser = (username, email, password) => {\n  const data = {\n    username: username,\n    email: email,\n    password: password\n  };\n  fetch(`http://localhost:8080/api/auth/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    // 注册成功返回200，失败返回原因\n    if (!response.ok) {\n      return response.text().then(text => {\n        toast.error(JSON.parse(text).message, {\n          position: toast.POSITION.BOTTOM_RIGHT\n        }); // alert(JSON.parse(text).message);\n      });\n    } else {\n      return response.json();\n    }\n  }).then(data => {\n    const profile = {\n      id: data.id,\n      displayName: data.username\n    };\n    console.log(\"profile: \" + JSON.stringify(profile));\n    fetch(`http://localhost:8080/api/profiles`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(profile)\n    }).then(response => {\n      toast.success(\"User was registered sucessfully!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        className: \"foo-bar\",\n        onClose: () => {\n          window.location.href = \"/login\";\n          return response.json();\n        }\n      });\n    });\n    console.log(\"Success:\", data);\n    console.log(\"Status code: \" + data.status);\n  }).catch(error => {\n    console.error(\"Error:\", error);\n  });\n};\n_c = SignUpUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpUser\");","map":{"version":3,"names":["useNavigate","React","SignUpUser","username","email","password","data","fetch","method","headers","body","JSON","stringify","then","response","ok","text","toast","error","parse","message","position","POSITION","BOTTOM_RIGHT","json","profile","id","displayName","console","log","success","className","onClose","window","location","href","status","catch"],"sources":["/Users/celia/Projects/Merakey/client/src/components/utilities/signUpUser.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const SignUpUser = (username, email, password) => {\n  const data = {\n    username: username,\n    email: email,\n    password: password,\n  };\n  fetch(`http://localhost:8080/api/auth/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => {\n      // 注册成功返回200，失败返回原因\n      if (!response.ok) {\n        return response.text().then((text) => {\n          toast.error(JSON.parse(text).message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          // alert(JSON.parse(text).message);\n        });\n      } else {\n        return response.json();\n      }\n    })\n    .then((data) => {\n      const profile = {\n        id: data.id,\n        displayName: data.username,\n      };\n      console.log(\"profile: \" + JSON.stringify(profile));\n      fetch(`http://localhost:8080/api/profiles`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(profile),\n      }).then((response) => {\n        toast.success(\"User was registered sucessfully!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          className: \"foo-bar\",\n          onClose: () => {\n            window.location.href = \"/login\";\n            return response.json();\n          },\n        });\n      });\n      console.log(\"Success:\", data);\n      console.log(\"Status code: \" + data.status);\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n    });\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uCAAP;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+B;EACvD,MAAMC,IAAI,GAAG;IACXH,QAAQ,EAAEA,QADC;IAEXC,KAAK,EAAEA,KAFI;IAGXC,QAAQ,EAAEA;EAHC,CAAb;EAKAE,KAAK,CAAE,uCAAF,EAA0C;IAC7CC,MAAM,EAAE,MADqC;IAE7CC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFoC;IAK7CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;EALuC,CAA1C,CAAL,CAOGO,IAPH,CAOSC,QAAD,IAAc;IAClB;IACA,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;MAChB,OAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBG,IAAD,IAAU;QACpCC,KAAK,CAACC,KAAN,CAAYP,IAAI,CAACQ,KAAL,CAAWH,IAAX,EAAiBI,OAA7B,EAAsC;UACpCC,QAAQ,EAAEJ,KAAK,CAACK,QAAN,CAAeC;QADW,CAAtC,EADoC,CAIpC;MACD,CALM,CAAP;IAMD,CAPD,MAOO;MACL,OAAOT,QAAQ,CAACU,IAAT,EAAP;IACD;EACF,CAnBH,EAoBGX,IApBH,CAoBSP,IAAD,IAAU;IACd,MAAMmB,OAAO,GAAG;MACdC,EAAE,EAAEpB,IAAI,CAACoB,EADK;MAEdC,WAAW,EAAErB,IAAI,CAACH;IAFJ,CAAhB;IAIAyB,OAAO,CAACC,GAAR,CAAY,cAAclB,IAAI,CAACC,SAAL,CAAea,OAAf,CAA1B;IACAlB,KAAK,CAAE,oCAAF,EAAuC;MAC1CC,MAAM,EAAE,MADkC;MAE1CC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFiC;MAK1CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAea,OAAf;IALoC,CAAvC,CAAL,CAMGZ,IANH,CAMSC,QAAD,IAAc;MACpBG,KAAK,CAACa,OAAN,CAAc,kCAAd,EAAkD;QAChDT,QAAQ,EAAEJ,KAAK,CAACK,QAAN,CAAeC,YADuB;QAEhDQ,SAAS,EAAE,SAFqC;QAGhDC,OAAO,EAAE,MAAM;UACbC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;UACA,OAAOrB,QAAQ,CAACU,IAAT,EAAP;QACD;MAN+C,CAAlD;IAQD,CAfD;IAgBAI,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBvB,IAAxB;IACAsB,OAAO,CAACC,GAAR,CAAY,kBAAkBvB,IAAI,CAAC8B,MAAnC;EACD,CA5CH,EA6CGC,KA7CH,CA6CUnB,KAAD,IAAW;IAChBU,OAAO,CAACV,KAAR,CAAc,QAAd,EAAwBA,KAAxB;EACD,CA/CH;AAgDD,CAtDM;KAAMhB,U"},"metadata":{},"sourceType":"module"}