{"ast":null,"code":"import React from \"react\";\n\nfunction downloadPDF(Qs) {\n  const downloadTxtFile = text => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([text], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"Wrong Questions.txt\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n\n    element.click();\n  };\n\n  var wrongQs = [];\n  Qs.map(questionText => {\n    if (questionText[1] == \"wrong\") {\n      wrongQs = wrongQs.concat([questionText]);\n    }\n  });\n  var textFile = \"List of wrong questions \\n\\n\";\n\n  if (wrongQs.length == 0) {\n    alert(\"You don't have wrong answers!\");\n    toast(\"You don't have wrong answers!\");\n  } else {\n    var index = 1;\n    wrongQs.map(questionText => {\n      if (questionText[1] == \"wrong\") {\n        textFile += `${index}. ${questionText[0]}\\n\\n`;\n        index += 1;\n      }\n    });\n    console.log(textFile);\n    downloadTxtFile(textFile);\n  }\n}\n\nexport default downloadPDF;","map":{"version":3,"names":["React","downloadPDF","Qs","downloadTxtFile","text","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","wrongQs","map","questionText","concat","textFile","length","alert","toast","index","console","log"],"sources":["/Users/celia/Projects/Merakey/client/src/components/downloadWrong.js"],"sourcesContent":["import React from \"react\";\n\nfunction downloadPDF(Qs) {\n  const downloadTxtFile = (text) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([text], {\n      type: \"text/plain\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"Wrong Questions.txt\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  var wrongQs = [];\n  Qs.map((questionText) => {\n    if (questionText[1] == \"wrong\") {\n      wrongQs = wrongQs.concat([questionText]);\n    }\n  });\n  var textFile = \"List of wrong questions \\n\\n\";\n  if (wrongQs.length == 0) {\n    alert(\"You don't have wrong answers!\");\n    toast(\"You don't have wrong answers!\");\n  } else {\n    var index = 1;\n    wrongQs.map((questionText) => {\n      if (questionText[1] == \"wrong\") {\n        textFile += `${index}. ${questionText[0]}\\n\\n`;\n        index += 1;\n      }\n    });\n    console.log(textFile);\n    downloadTxtFile(textFile);\n  }\n}\nexport default downloadPDF;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,EAArB,EAAyB;EACvB,MAAMC,eAAe,GAAIC,IAAD,IAAU;IAChC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAhB;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACL,IAAD,CAAT,EAAiB;MAC5BM,IAAI,EAAE;IADsB,CAAjB,CAAb;IAGAL,OAAO,CAACM,IAAR,GAAeC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAf;IACAH,OAAO,CAACS,QAAR,GAAmB,qBAAnB;IACAR,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BX,OAA1B,EAPgC,CAOI;;IACpCA,OAAO,CAACY,KAAR;EACD,CATD;;EAWA,IAAIC,OAAO,GAAG,EAAd;EACAhB,EAAE,CAACiB,GAAH,CAAQC,YAAD,IAAkB;IACvB,IAAIA,YAAY,CAAC,CAAD,CAAZ,IAAmB,OAAvB,EAAgC;MAC9BF,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAe,CAACD,YAAD,CAAf,CAAV;IACD;EACF,CAJD;EAKA,IAAIE,QAAQ,GAAG,8BAAf;;EACA,IAAIJ,OAAO,CAACK,MAAR,IAAkB,CAAtB,EAAyB;IACvBC,KAAK,CAAC,+BAAD,CAAL;IACAC,KAAK,CAAC,+BAAD,CAAL;EACD,CAHD,MAGO;IACL,IAAIC,KAAK,GAAG,CAAZ;IACAR,OAAO,CAACC,GAAR,CAAaC,YAAD,IAAkB;MAC5B,IAAIA,YAAY,CAAC,CAAD,CAAZ,IAAmB,OAAvB,EAAgC;QAC9BE,QAAQ,IAAK,GAAEI,KAAM,KAAIN,YAAY,CAAC,CAAD,CAAI,MAAzC;QACAM,KAAK,IAAI,CAAT;MACD;IACF,CALD;IAMAC,OAAO,CAACC,GAAR,CAAYN,QAAZ;IACAnB,eAAe,CAACmB,QAAD,CAAf;EACD;AACF;;AACD,eAAerB,WAAf"},"metadata":{},"sourceType":"module"}