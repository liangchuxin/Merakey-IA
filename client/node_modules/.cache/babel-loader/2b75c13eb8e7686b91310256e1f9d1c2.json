{"ast":null,"code":"function stringify(obj, options) {\n  options = options || {};\n  var indent = JSON.stringify([1], null, get(options, 'indent', 2)).slice(2, -3);\n  var addMargin = get(options, 'margins', false);\n  var maxLength = indent === '' ? Infinity : get(options, 'maxLength', 80);\n  return function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === 'function') {\n      obj = obj.toJSON();\n    }\n\n    var string = JSON.stringify(obj);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    var length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      var prettified = prettify(string, addMargin);\n\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (typeof obj === 'object' && obj !== null) {\n      var nextIndent = currentIndent + indent;\n      var items = [];\n      var delimiters;\n\n      var comma = function (array, index) {\n        return index === array.length - 1 ? 0 : 1;\n      };\n\n      if (Array.isArray(obj)) {\n        for (var index = 0; index < obj.length; index++) {\n          items.push(_stringify(obj[index], nextIndent, comma(obj, index)) || 'null');\n        }\n\n        delimiters = '[]';\n      } else {\n        Object.keys(obj).forEach(function (key, index, array) {\n          var keyPart = JSON.stringify(key) + ': ';\n\n          var value = _stringify(obj[key], nextIndent, keyPart.length + comma(array, index));\n\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        });\n        delimiters = '{}';\n      }\n\n      if (items.length > 0) {\n        return [delimiters[0], indent + items.join(',\\n' + nextIndent), delimiters[1]].join('\\n' + currentIndent);\n      }\n    }\n\n    return string;\n  }(obj, '', 0);\n} // Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\n\n\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,\\][}{]/g;\n\nfunction prettify(string, addMargin) {\n  var m = addMargin ? ' ' : '';\n  var tokens = {\n    '{': '{' + m,\n    '[': '[' + m,\n    '}': m + '}',\n    ']': m + ']',\n    ',': ', ',\n    ':': ': '\n  };\n  return string.replace(stringOrChar, function (match, string) {\n    return string ? match : tokens[match];\n  });\n}\n\nfunction get(options, name, defaultValue) {\n  return name in options ? options[name] : defaultValue;\n}\n\nmodule.exports = stringify;","map":{"version":3,"names":["stringify","obj","options","indent","JSON","get","slice","addMargin","maxLength","Infinity","_stringify","currentIndent","reserved","toJSON","string","undefined","length","prettified","prettify","nextIndent","items","delimiters","comma","array","index","Array","isArray","push","Object","keys","forEach","key","keyPart","value","join","stringOrChar","m","tokens","replace","match","name","defaultValue","module","exports"],"sources":["/Users/celia/Projects/Merakey/client/node_modules/json-stringify-pretty-compact/index.js"],"sourcesContent":["function stringify (obj, options) {\n  options = options || {}\n  var indent = JSON.stringify([1], null, get(options, 'indent', 2)).slice(2, -3)\n  var addMargin = get(options, 'margins', false)\n  var maxLength = (indent === '' ? Infinity : get(options, 'maxLength', 80))\n\n  return (function _stringify (obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === 'function') {\n      obj = obj.toJSON()\n    }\n\n    var string = JSON.stringify(obj)\n\n    if (string === undefined) {\n      return string\n    }\n\n    var length = maxLength - currentIndent.length - reserved\n\n    if (string.length <= length) {\n      var prettified = prettify(string, addMargin)\n      if (prettified.length <= length) {\n        return prettified\n      }\n    }\n\n    if (typeof obj === 'object' && obj !== null) {\n      var nextIndent = currentIndent + indent\n      var items = []\n      var delimiters\n      var comma = function (array, index) {\n        return (index === array.length - 1 ? 0 : 1)\n      }\n\n      if (Array.isArray(obj)) {\n        for (var index = 0; index < obj.length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, comma(obj, index)) || 'null'\n          )\n        }\n        delimiters = '[]'\n      } else {\n        Object.keys(obj).forEach(function (key, index, array) {\n          var keyPart = JSON.stringify(key) + ': '\n          var value = _stringify(obj[key], nextIndent,\n                                 keyPart.length + comma(array, index))\n          if (value !== undefined) {\n            items.push(keyPart + value)\n          }\n        })\n        delimiters = '{}'\n      }\n\n      if (items.length > 0) {\n        return [\n          delimiters[0],\n          indent + items.join(',\\n' + nextIndent),\n          delimiters[1]\n        ].join('\\n' + currentIndent)\n      }\n    }\n\n    return string\n  }(obj, '', 0))\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,\\][}{]/g\n\nfunction prettify (string, addMargin) {\n  var m = addMargin ? ' ' : ''\n  var tokens = {\n    '{': '{' + m,\n    '[': '[' + m,\n    '}': m + '}',\n    ']': m + ']',\n    ',': ', ',\n    ':': ': '\n  }\n  return string.replace(stringOrChar, function (match, string) {\n    return string ? match : tokens[match]\n  })\n}\n\nfunction get (options, name, defaultValue) {\n  return (name in options ? options[name] : defaultValue)\n}\n\nmodule.exports = stringify\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}