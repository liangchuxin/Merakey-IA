{"ast":null,"code":"var _jsxFileName = \"/Users/celia/Projects/Merakey/client/src/components/user/yourGames.js\",\n    _s = $RefreshSig$();\n\nimport SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport clockIco from \"../../images/clock.svg\";\nimport playIco from \"../../images/play-circle.svg\";\nimport \"./styles/yourGames.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction YourGames() {\n  _s();\n\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n    getGames(id);\n  }, []);\n\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) => roles.push(x.slice(5).toLowerCase()));\n    console.log(roles);\n  }\n\n  const [games, setGames] = React.useState([]);\n  const [tabState, setTabState] = React.useState(\"all\");\n\n  const getGames = userId => {\n    fetch(`http://localhost:8080/api/profiles/games/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      setGames(data.games);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SecondSide, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"user-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Games (\", games.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: `tab ${tabState == \"all\" && \"active\"}`,\n              onClick: () => setTabState(\"all\"),\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `tab ${tabState == \"published\" && \"active\"}`,\n              onClick: () => setTabState(\"published\"),\n              children: \"Published\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `tab ${tabState == \"drafts\" && \"active\"}`,\n              onClick: () => setTabState(\"drafts\"),\n              children: \"Drafts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"games-container\",\n        children: games.map(game => tabState === \"drafts\" && game.published == false || tabState === \"published\" && game.published == true || tabState === \"all\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-card\",\n          onClick: () => navigate(`/games/${game.id}`),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cover\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: game.coverR\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-descriptions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: game.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"views\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: playIco\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this), game.views]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"time\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: clockIco\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 25\n                }, this), game.createdAt.split(\"T\")[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this)]\n        }, game.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(YourGames, \"TZMWfFlVim7lieFQWOyOHco05ZM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = YourGames;\nexport default YourGames;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourGames\");","map":{"version":3,"names":["SecondSide","React","useEffect","useRef","IsLoggedIn","logout","getCurrentUser","useNavigate","useParams","clockIco","playIco","YourGames","navigate","window","scrollTo","getGames","id","console","log","username","email","roles","forEach","x","i","push","slice","toLowerCase","games","setGames","useState","tabState","setTabState","userId","fetch","method","headers","then","res","json","data","length","map","game","published","coverR","name","views","createdAt","split"],"sources":["/Users/celia/Projects/Merakey/client/src/components/user/yourGames.js"],"sourcesContent":["import SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport clockIco from \"../../images/clock.svg\";\nimport playIco from \"../../images/play-circle.svg\";\nimport \"./styles/yourGames.scss\";\n\nfunction YourGames() {\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n    getGames(id);\n  }, []);\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  const [games, setGames] = React.useState([]);\n  const [tabState, setTabState] = React.useState(\"all\");\n  const getGames = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/games/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setGames(data.games);\n      });\n  };\n  return (\n    <>\n      <SecondSide />\n      <section className=\"user-main\">\n        <div className=\"title-container\">\n          <h2>Your Games ({games.length})</h2>\n          <div className=\"menu\">\n            <ul>\n              <li\n                className={`tab ${tabState == \"all\" && \"active\"}`}\n                onClick={() => setTabState(\"all\")}\n              >\n                All\n              </li>\n              <li\n                className={`tab ${tabState == \"published\" && \"active\"}`}\n                onClick={() => setTabState(\"published\")}\n              >\n                Published\n              </li>\n              <li\n                className={`tab ${tabState == \"drafts\" && \"active\"}`}\n                onClick={() => setTabState(\"drafts\")}\n              >\n                Drafts\n              </li>\n            </ul>\n          </div>\n        </div>\n        {/* <div className=\"games-container\">\n          {games.map((game) =>\n            tabState == \"published\" ? (\n              game.published == true && (\n                <div\n                  className=\"game-card\"\n                  key={game.id}\n                  onClick={() => navigate(`/games/${game.id}`)}\n                >\n                  <div className=\"cover\">\n                    <img src={game.coverR}></img>\n                  </div>\n                  <div className=\"card-descriptions\">\n                    <span>{game.name}</span>\n                    <div className=\"meta-data\">\n                      <p className=\"views\">\n                        <img src={playIco} />\n                        {game.views}\n                      </p>\n                      <p className=\"time\">\n                        <img src={clockIco} />\n                        {game.createdAt.split(\"T\")[0]}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )\n            ) : tabState == \"drafts\" ? (\n              game.published == false && (\n                <div\n                  className=\"game-card\"\n                  key={game.id}\n                  onClick={() => navigate(`/games/${game.id}`)}\n                >\n                  <div className=\"cover\">\n                    <img src={game.coverR}></img>\n                  </div>\n                  <div className=\"card-descriptions\">\n                    <span>{game.name}</span>\n                    <div className=\"meta-data\">\n                      <p className=\"views\">\n                        <img src={playIco} />\n                        {game.views}\n                      </p>\n                      <p className=\"time\">\n                        <img src={clockIco} />\n                        {game.createdAt.split(\"T\")[0]}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )\n            ) : (\n              <div\n                className=\"game-card\"\n                key={game.id}\n                onClick={() => navigate(`/games/${game.id}`)}\n              >\n                <div className=\"cover\">\n                  <img src={game.coverR}></img>\n                </div>\n                <div className=\"card-descriptions\">\n                  <span>{game.name}</span>\n                  <div className=\"meta-data\">\n                    <p className=\"views\">\n                      <img src={playIco} />\n                      {game.views}\n                    </p>\n                    <p className=\"time\">\n                      <img src={clockIco} />\n                      {game.createdAt.split(\"T\")[0]}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )\n          )}\n        </div> */}\n        <div className=\"games-container\">\n          {games.map(\n            (game) =>\n              (tabState === \"drafts\" && game.published == false) ||\n              (tabState === \"published\" && game.published == true) ||\n              (tabState === \"all\" && (\n                <div\n                  className=\"game-card\"\n                  key={game.id}\n                  onClick={() => navigate(`/games/${game.id}`)}\n                >\n                  <div className=\"cover\">\n                    <img src={game.coverR}></img>\n                  </div>\n                  <div className=\"card-descriptions\">\n                    <span>{game.name}</span>\n                    <div className=\"meta-data\">\n                      <p className=\"views\">\n                        <img src={playIco} />\n                        {game.views}\n                      </p>\n                      <p className=\"time\">\n                        <img src={clockIco} />\n                        {game.createdAt.split(\"T\")[0]}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))\n          )}\n        </div>\n      </section>\n    </>\n  );\n}\nexport default YourGames;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}