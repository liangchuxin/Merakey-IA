[{"/Users/celia/Projects/Merakey/client/src/index.js":"1","/Users/celia/Projects/Merakey/client/src/reportWebVitals.js":"2","/Users/celia/Projects/Merakey/client/src/App.js":"3","/Users/celia/Projects/Merakey/client/src/components/playGame.js":"4","/Users/celia/Projects/Merakey/client/src/components/homePage.js":"5","/Users/celia/Projects/Merakey/client/src/components/gameDetails.js":"6","/Users/celia/Projects/Merakey/client/src/components/subjectsPage.js":"7","/Users/celia/Projects/Merakey/client/src/components/aboutPage.js":"8","/Users/celia/Projects/Merakey/client/src/components/navBar.js":"9","/Users/celia/Projects/Merakey/client/src/components/downloadWrong.js":"10","/Users/celia/Projects/Merakey/client/src/components/search.js":"11","/Users/celia/Projects/Merakey/client/src/components/searchPage.js":"12","/Users/celia/Projects/Merakey/client/src/components/login.js":"13","/Users/celia/Projects/Merakey/client/src/components/signup.js":"14","/Users/celia/Projects/Merakey/client/src/components/utilities/signUpUser.js":"15","/Users/celia/Projects/Merakey/client/src/components/user/userHome.js":"16","/Users/celia/Projects/Merakey/client/src/components/utilities/logInUser.js":"17","/Users/celia/Projects/Merakey/client/src/components/utilities/loginStatus.js":"18","/Users/celia/Projects/Merakey/client/src/components/user/secondSide.js":"19","/Users/celia/Projects/Merakey/client/src/components/user/pastProblems.js":"20","/Users/celia/Projects/Merakey/client/src/components/user/userComments.js":"21","/Users/celia/Projects/Merakey/client/src/components/user/addStory.js":"22","/Users/celia/Projects/Merakey/client/src/components/user/gameHistory.js":"23","/Users/celia/Projects/Merakey/client/src/components/user/sideMenu.js":"24","/Users/celia/Projects/Merakey/client/src/components/user/userSettings.js":"25","/Users/celia/Projects/Merakey/client/src/components/utilities/addGame.js":"26","/Users/celia/Projects/Merakey/client/src/components/topicsPage.js":"27","/Users/celia/Projects/Merakey/client/src/components/zzz/donaldDuck.js":"28","/Users/celia/Projects/Merakey/client/src/components/user/yourGames.js":"29","/Users/celia/Projects/Merakey/client/src/components/zzz/plot.js":"30","/Users/celia/Projects/Merakey/client/src/components/user/editStory.js":"31"},{"size":500,"mtime":1664245998286,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1645924654328,"results":"34","hashOfConfig":"33"},{"size":3770,"mtime":1678342796393,"results":"35","hashOfConfig":"33"},{"size":17366,"mtime":1677054032905,"results":"36","hashOfConfig":"33"},{"size":7867,"mtime":1676777901856,"results":"37","hashOfConfig":"33"},{"size":17737,"mtime":1670518046597,"results":"38","hashOfConfig":"33"},{"size":2297,"mtime":1664051532542,"results":"39","hashOfConfig":"33"},{"size":3145,"mtime":1662255072341,"results":"40","hashOfConfig":"33"},{"size":3827,"mtime":1676714140131,"results":"41","hashOfConfig":"33"},{"size":1202,"mtime":1670543840362,"results":"42","hashOfConfig":"33"},{"size":3176,"mtime":1665033164804,"results":"43","hashOfConfig":"33"},{"size":9721,"mtime":1670486140433,"results":"44","hashOfConfig":"33"},{"size":3376,"mtime":1670571627883,"results":"45","hashOfConfig":"33"},{"size":3720,"mtime":1670571498336,"results":"46","hashOfConfig":"33"},{"size":1687,"mtime":1677069244901,"results":"47","hashOfConfig":"33"},{"size":12835,"mtime":1676721810099,"results":"48","hashOfConfig":"33"},{"size":1411,"mtime":1663566888650,"results":"49","hashOfConfig":"33"},{"size":328,"mtime":1666775405593,"results":"50","hashOfConfig":"33"},{"size":3676,"mtime":1676714101596,"results":"51","hashOfConfig":"33"},{"size":9896,"mtime":1677063133936,"results":"52","hashOfConfig":"33"},{"size":3116,"mtime":1677055178467,"results":"53","hashOfConfig":"33"},{"size":10486,"mtime":1676690296919,"results":"54","hashOfConfig":"33"},{"size":7231,"mtime":1676721723306,"results":"55","hashOfConfig":"33"},{"size":2777,"mtime":1670433280205,"results":"56","hashOfConfig":"33"},{"size":5546,"mtime":1670543467549,"results":"57","hashOfConfig":"33"},{"size":655,"mtime":1670444100134,"results":"58","hashOfConfig":"33"},{"size":918,"mtime":1670545816945,"results":"59","hashOfConfig":"33"},{"size":2259,"mtime":1667264189539,"results":"60","hashOfConfig":"33"},{"size":8363,"mtime":1676772122319,"results":"61","hashOfConfig":"33"},{"size":32543,"mtime":1670443937754,"results":"62","hashOfConfig":"33"},{"size":13806,"mtime":1676873582057,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"wq88b7",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"67"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"67"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"67"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"67"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"67"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"67"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"67"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"67"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"67"},"/Users/celia/Projects/Merakey/client/src/index.js",[],[],[],"/Users/celia/Projects/Merakey/client/src/reportWebVitals.js",[],[],"/Users/celia/Projects/Merakey/client/src/App.js",["181","182","183","184","185","186"],[],"/Users/celia/Projects/Merakey/client/src/components/playGame.js",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],[],"import \"../styles/playGame.scss\";\nimport { useParams } from \"react-router-dom\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport React, { useState } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"./utilities/loginStatus\";\nimport Confetti from \"react-confetti\";\nimport progress from \"../images/progress.png\";\nimport download from \"../images/download.svg\";\nimport downloadPDF from \"./downloadWrong\";\n// import { plott } from \"./zzz/plot\";\n// import { addGame } from \"./utilities/addGame\";\n// import { duck } from \"./zzz/donaldDuck\";\n\nfunction PlayGame() {\n  const [players, setPlayers] = React.useState(null);\n  const [plot, setPlot] = React.useState(null);\n  const [title, setTitle] = React.useState(null);\n  const [cover, setCover] = React.useState(null);\n  const [played, setPlayed] = React.useState(false);\n  const [recordId, setRecordId] = React.useState(null);\n  const [progress, setProgress] = React.useState(0);\n  const [score, setScore] = React.useState(0);\n  const [qsNum, setQsNum] = React.useState(0);\n  const [oldScore, setOldScore] = React.useState(0);\n  const [oldNum, setOldNum] = React.useState(0);\n  const [subject, setSubject] = React.useState(null);\n  const [questions, setQuestions] = React.useState([null]);\n  const [topicName, setTopicName] = React.useState([null]);\n  const { id, topic } = useParams();\n  const mountedRef = React.useRef(true); // ← the \"flag\"\n\n  React.useEffect(() => {\n    fetch(`http://localhost:8080/api/games/${id}`)\n      .then((res) => res.json())\n      .then(async (data) => {\n        var plot = JSON.parse(data.plot);\n        setPlot(plot);\n        setPlayers(data.players);\n        setTitle(data.name);\n        setCover(data.coverR);\n        getQuestions(topic);\n        getTopicName(topic);\n      });\n  }, []);\n  // console.log(\"questions: \" + JSON.stringify(questions));\n\n  const getQuestions = async () => {\n    fetch(`http://localhost:8080/api/questions/topic/${topic}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setQuestions(data);\n        setSubject(data[0].subject);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  const getTopicName = () => {\n    fetch(`http://localhost:8080/api/topics/id/${topic}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setTopicName(data.code + \" \" + data.name);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  // console.log(plot);\n  // console.log(\"Plot\", plot);\n\n  React.useEffect(() => {\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      console.log(\"Plot\", plot);\n      // console.log(\"first block: \" + plot[1]);\n      var count = 0;\n      // for (var i = 1; i < Object.keys(plot).length; i += 1) {\n      //   console.log(plot[i].type);\n      // }\n      console.log(\"questions: \", questions);\n      for (let i in plot) {\n        if (plot[i].type == \"question\") {\n          console.log(plot[i]);\n          // qNum 是问题的数量\n          var qNum = questions.length;\n          var rdQsId = Math.floor(Math.random() * qNum);\n          var qs = questions[rdQsId];\n          console.log(questions);\n          console.log(\"rdQsId: \", rdQsId);\n          questions.splice(rdQsId, 1);\n          // console.log(\"qs: \" + JSON.stringify(qs));\n          // console.log(questions);\n          plot[i].text = qs.question;\n          plot[i].correct = qs.correctAns;\n          plot[i].explanation = qs.explanation;\n          console.log(plot[i]);\n        }\n      }\n    }\n  }, [questions]);\n\n  console.log(\"players: \" + players);\n  // React.useEffect(() => {\n  //   addPlay(players + 1);\n  // }, []);\n\n  const addPlay = (playerNum) => {\n    const data = { players: playerNum };\n    fetch(`http://localhost:8080/api/games/${id}`, {\n      method: \"PUT\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  const createRecord = (score, end, profile, topic, game) => {\n    const data = {\n      score: score,\n      end: end,\n      profileId: profile,\n      topicId: topic,\n      gameId: game,\n    };\n    fetch(`http://localhost:8080/api/records/`, {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success, record is created\", data);\n        // 到时候如果游戏玩完了要改 end 和分数，可以根据 id 来改（不然找不着记录了）\n        setRecordId(data.id);\n        console.log(\"record is set at \", data.id);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const modifyRecord = (end) => {\n    const data = { id: recordId, score: score, end: end };\n    fetch(`http://localhost:8080/api/records/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success, record is modified\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  const getUsrInfo = () => {\n    fetch(`http://localhost:8080/api/profiles/${uid}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setOldScore(data.scores);\n        setOldNum(data.questions);\n      });\n  };\n  const upUsrInfo = () => {\n    var newScore = oldScore + score;\n    var newNum = oldNum + qsNum;\n    const data = { id: uid, scores: newScore, questions: newNum };\n    fetch(`http://localhost:8080/api/profiles`, {\n      method: \"PUT\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  // React.useEffect(() => {\n  //   addGame(plott);\n  //   console.log(\"Game added\");\n  // }, []);\n\n  const inputRef = React.useRef(null);\n  const contentScroll = React.useRef(null);\n  React.useEffect(() => {\n    inputRef.current.focus();\n    var contentBox = document.getElementsByClassName(\"summary\")[0];\n    contentBox.scrollTop = contentBox.scrollHeight - contentBox.offsetHeight;\n  }, []);\n  const scrollToBottom = () => {\n    var endPointer = document.getElementById(\"contentEnd\");\n    endPointer.scrollIntoView({ behavior: \"smooth\" });\n  };\n  // state hooks\n  // var pointer = 1;\n  const [pointer, setPointer] = useState(1);\n  const [content, setContent] = useState(\"Press Enter to Start.\");\n  const [placeholder, setPlaceholder] = useState(\"Enter to continue…\");\n  const [confetti, setConfetti] = useState(false);\n\n  // get user\n  if (getCurrentUser) {\n    // console.log(getCurrentUser);\n    const username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var uid = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    // console.log(roles);\n  }\n\n  const calculateProgress = () => {\n    if (plot !== null) {\n      setProgress((pointer / Object.keys(plot).length) * 100);\n    }\n  };\n  React.useEffect(() => {\n    calculateProgress();\n  });\n\n  // operations\n  const handleKeyDown = (event) => {\n    if (played === false) {\n      addPlay(players + 1);\n      setPlayed(true);\n      if (IsLoggedIn()) {\n        getUsrInfo();\n        createRecord(0, \"not done\", uid, topic, id);\n      }\n    }\n    console.log(\"key: \" + event.key);\n    console.log(\"pointer: \" + pointer);\n    console.log(\"type: \" + identifyType(pointer));\n    console.log(\"last plot pointer: \" + pointer);\n    if (identifyType(pointer) == \"story\") {\n      // 如果是剧情，那么框里啥也不能有\n      if (event.key) {\n        event.preventDefault();\n      }\n      // 如果是投票，那么只能是 ABCD\n    } else if (identifyType(pointer) == \"vote\") {\n      console.log(\"Length: \" + event.target.value.length);\n      if (\n        [\"A\", \"B\", \"C\", \"D\"].indexOf(event.key.toUpperCase()) == -1 ||\n        event.target.value.length + 1 > 1\n      ) {\n        event.preventDefault();\n      }\n      // 如果是 option，那只能是指定的字母\n    } else if (identifyType(pointer) == \"option\") {\n      var options = plot[pointer].options.map((x) => x[0]).flat(2);\n      if (\n        options.indexOf(event.key.toUpperCase()) == -1 ||\n        event.target.value.length + 1 > 1\n      ) {\n        event.preventDefault();\n      }\n    }\n    // 如果回车，那么执行提交函数\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      handleSubmit(event);\n    } else {\n      return false;\n    }\n  };\n  // 输入 Enter 提交后\n  const handleSubmit = (e) => {\n    setConfetti(false);\n    console.log(\"Submit!\");\n    console.log(\"Submitted content is: \" + e.target.value);\n    console.log(\"pointer is at: \" + pointer, plot[pointer].text);\n    if (identifyType(pointer) == \"story\") {\n      setPlaceholder(\"Enter to continue…\");\n      console.log(\"is end?\" + plot[pointer].end);\n      if (plot[pointer].end === undefined) {\n        story(plot[pointer].text, plot[pointer].goto, e);\n      } else {\n        story(plot[pointer].text, plot[pointer].goto, e, plot[pointer].end);\n      }\n      // pointer = newAddress(pointer);\n    } else if (identifyType(pointer) == \"question\") {\n      setPlaceholder(\"Input your answer…\");\n      question(\n        plot[pointer].text,\n        plot[pointer].correct,\n        plot[pointer].explanation,\n        plot[pointer].goto,\n        e\n      );\n      e.preventDefault();\n    } else if (identifyType(pointer) == \"vote\") {\n      setPlaceholder(\"Vote someone…\");\n      vote(\n        plot[pointer].text,\n        plot[pointer].choices,\n        plot[pointer].goto,\n        e.target.value\n      );\n    } else if (identifyType(pointer) == \"option\") {\n      setPlaceholder(\"Make an option…\");\n      option(\n        plot[pointer].text,\n        plot[pointer].options,\n        plot[pointer].goto,\n        e.target.value\n      );\n    }\n    e.target.value = null;\n    scrollToBottom();\n  };\n  //弄一个读取 key down 的，一个 submit form 的。key down\n  //的用于控制用户可以输入什么不可以输入什么；譬如剧情不能打字只能输入\"enter\"。\n\n  // identify type first\n  const identifyType = (pointer) => {\n    return plot[pointer].type;\n  };\n\n  // self-defined functions\n  const story = (text, goto, e, end) => {\n    output(text);\n    setPointer(goto);\n    e.preventDefault();\n    // if (pointer == \"end\") {\n    //   setConfetti(true);\n    // }\n    console.log(\"end: \" + end);\n    if (end == \"true\") {\n      setConfetti(true);\n    }\n    if (IsLoggedIn()) {\n      if (end !== null && end !== undefined) {\n        modifyRecord(end);\n        upUsrInfo();\n      }\n    }\n  };\n  const question = (text, correct, explanation, goto, e) => {\n    if (e.target.value === \"\") {\n      // console.log(\"no input yet!\");\n      output(text);\n    } else {\n      // output(userinput);\n      // console.log(\"user answer: \" + userinput + \"correct answer: \" + correct);\n\n      var input = e.target.value;\n      var correctAnswer = correct;\n      // 判断用户回答是否正确\n      if (checkAnswer(input, correctAnswer)) {\n        addCorrect(text);\n        output(input + \"\\n\\nCorrect! Great job! The plot now continues…\");\n        setConfetti(true);\n        setPointer(goto[0]);\n        setScore(score + 100);\n        toast.warning(\"SCORES x 100 (temporary)\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          icon: \"💰\",\n        });\n      } else {\n        addWrong(text);\n        output(\n          input +\n            \"\\n\\nYour answer is wrong! The correct answer is: \" +\n            correct +\n            \"\\n\\n\" +\n            explanation\n        );\n        setPointer(goto[1]);\n      }\n      setQsNum(qsNum + 1);\n      setPlaceholder(\"Enter to continue…\");\n      e.preventDefault();\n    }\n  };\n  const vote = (text, choices, goto, userinput) => {\n    if (userinput === \"\") {\n      output(text);\n    } else {\n      var input = userinput;\n      input = input.toUpperCase();\n      var choiceIndex;\n      switch (input) {\n        case \"A\":\n          choiceIndex = 0;\n          break;\n        case \"B\":\n          choiceIndex = 1;\n          break;\n        case \"C\":\n          choiceIndex = 2;\n          break;\n        case \"D\":\n          choiceIndex = 3;\n          break;\n      }\n      output(\"You voted [\" + input + \"]\" + choices[choiceIndex]);\n      setPointer(goto[choiceIndex]);\n    }\n    setPlaceholder(\"Enter to continue…\");\n  };\n  const option = (text, optionGroups, goto, userinput) => {\n    if (userinput === \"\") {\n      output(text);\n    } else {\n      var input = userinput;\n      input = input.toUpperCase();\n      var options = plot[pointer].options.map((x) => x[0]).flat(2);\n      var optionIndex = options.indexOf(input);\n      console.log(\"optionIndex: \" + optionIndex);\n      console.log(\"optionGroups: \" + optionGroups);\n      output(\"Your option is [\" + input + \"]\" + optionGroups[optionIndex][1]);\n      setPointer(goto[optionIndex]);\n      console.log(\"setPointer: \" + goto[optionIndex]);\n    }\n    setPlaceholder(\"Enter to continue…\");\n  };\n  const newAddress = (pointer) => {\n    var newAddress = plot[pointer].goto;\n    return newAddress;\n  };\n  const checkAnswer = (userInput, correctAnswer) => {\n    if (userInput === correctAnswer) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  function ShowConfetti(props) {\n    const confetti = props.confetti;\n    if (confetti) {\n      return (\n        <Confetti\n          recycle={false}\n          initialVelocityY={-20}\n          numberOfPieces={100}\n          colors={[\"#F7CF56\", \"#D0D0D0\", \"#282828\"]}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n\n  const addCorrect = (question) => {\n    setQHistory(qHistory.concat([[question, \"correct\"]]));\n  };\n\n  const addWrong = (question) => {\n    setQHistory(qHistory.concat([[question, \"wrong\"]]));\n  };\n\n  const [qHistory, setQHistory] = useState([]);\n\n  // detail ones\n  const output = (text) => {\n    setContent(content + \"\\n\\n\" + text);\n  };\n\n  return (\n    <div className=\"playGame\">\n      <ShowConfetti confetti={confetti} />\n      <ToastContainer autoClose={2000} theme=\"dark\" transition={Slide} />\n      <div className=\"chapters\">\n        {cover != null && <img className=\"cover\" src={cover} />}\n\n        <h3 className=\"game-title\">{title}</h3>\n        <div className=\"game-info\">\n          <p>\n            <span>Subject</span>\n            &nbsp;{subject}\n          </p>\n          <p>\n            <span>&nbsp;&nbsp;Topic&nbsp;&nbsp;</span>\n            &nbsp;{topicName}\n          </p>\n        </div>\n        <div className=\"current-info\">\n          <p title=\"You will receive your scores once the game reaches an end.\">\n            Temporary score: {score}\n          </p>\n          <p title=\"Right or wrong…\">Question answered: {qsNum}</p>\n        </div>\n      </div>\n      <div className=\"story\">\n        <div className=\"progress-container\">\n          <div className=\"progress\" style={{ width: `${progress}%` }} />\n        </div>\n        <p className=\"summary\">\n          <br />\n          <br />\n          <br />\n\n          <br />\n          {content + \"\\n\\n\\n\\n\\n\\n\\n\"}\n          <span id=\"contentEnd\"></span>\n        </p>\n        <form>\n          <input\n            className=\"input\"\n            placeholder={placeholder}\n            onKeyPress={handleKeyDown}\n            ref={inputRef}\n          />\n        </form>\n      </div>\n      <div className=\"questions\">\n        <div className=\"history\">\n          <h3>History</h3>\n          {qHistory.map((questionText) => {\n            if (questionText[1] == \"correct\") {\n              return (\n                <div\n                  className=\"question-container correct\"\n                  key={questionText[0]}\n                >\n                  {questionText[0]}\n                </div>\n              );\n            } else {\n              console.log(\"Question text: \" + questionText);\n              return (\n                <div className=\"question-container wrong\" key={questionText[0]}>\n                  {questionText[0]}\n                </div>\n              );\n            }\n          })}\n        </div>\n        <div className=\"wrong-questions\">\n          <h3>Wrong answers</h3>\n          <div className=\"download-box\" onClick={() => downloadPDF(qHistory)}>\n            <img src={download} />\n            Download Questions\n          </div>\n          {qHistory.map((questionText) => {\n            if (questionText[1] == \"wrong\") {\n              return (\n                <div className=\"question-container wrong\" key={questionText[0]}>\n                  {questionText[0]}\n                </div>\n              );\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default PlayGame;\n","/Users/celia/Projects/Merakey/client/src/components/homePage.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226"],[],"import \"../styles/homePage.scss\";\nimport leaderboard from \"../images/leaderboard.png\";\nimport reload from \"../images/refresh-cw.svg\";\nimport storyList from \"../images/free-and-premium.png\";\nimport React, { useEffect, useCallback, useMemo } from \"react\";\nimport gold from \"../images/gold.png\";\nimport silver from \"../images/silver.png\";\nimport bronze from \"../images/bronze.png\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction HomePage() {\n  const defaultCover =\n    \"https://cdn.jsdelivr.net/gh/liangchuxin/blog-files/img/20210607224729.png\";\n  const mountedRef = React.useRef(true); // ← the \"flag\"\n  const [recent, setRecent] = React.useState(undefined);\n  const [recentRandom, setRecentRandom] = React.useState([]);\n  const [covers, setCovers] = React.useState(Array(6).fill(defaultCover));\n  const [leaderboard, setLeaderboard] = React.useState([]);\n  const Grid = ({ num }) => {\n    return (\n      <div\n        className=\"card story-card\"\n        style={{ backgroundImage: `url(\"${covers[num]}\")` }}\n        onClick={() => navigate(`/games/${recentRandom[num][0]}`)}\n      ></div>\n    );\n  };\n\n  const getRecent = () => {\n    fetch(`http://localhost:8080/api/games/recent/10`)\n      .then((res) => res.json())\n      .then((data) => {\n        const recents = [];\n        for (var i = 0; i < data.length; i++) {\n          recents.push([data[i].id, data[i].coverR]);\n        }\n        setRecent(recents);\n        return;\n      });\n  };\n  function GetGame(id) {\n    const response = fetch(`http://localhost:8080/api/games/meta/${id}`)\n      .then((res) => {\n        if (res.status === 404) {\n          return {\n            name: \"Unavailable\",\n            description: \"N/A\",\n            coverR:\n              \"https://m.media-amazon.com/images/I/11f6LubgRmL._SY498_BO1,204,203,200_.jpg\",\n            createdAt: \"0000-00-00T03:05:06.000Z\",\n            playTime: 180,\n          };\n        }\n        return res.json();\n      })\n      .then((data) => {\n        return data.name;\n      });\n    return response;\n  }\n  const getLeaderboard = async () => {\n    fetch(`http://localhost:8080/api/profiles/board/top`)\n      .then((res) => res.json())\n      .then(async (data) => {\n        for (let index = 0; index < data.length; index++) {\n          if (data[index].records.length > 0) {\n            data[index].gameName = await GetGame(data[index].records[0].gameId);\n          } else {\n            data[index].gameName = \"Unavailable\";\n          }\n        }\n        setLeaderboard(data);\n        return;\n      });\n  };\n  React.useEffect(() => {\n    getRecent();\n    getLeaderboard();\n  }, []);\n  const shuffleGames = (arr, num) => {\n    const shuffled = [...arr].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, num);\n  };\n  React.useEffect(() => {\n    if (mountedRef.current === false) {\n      var array = shuffleGames(recent, 6);\n      setRecentRandom(array);\n    }\n  }, [recent]);\n\n  React.useEffect(() => {\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      if (recentRandom) {\n        var covers = new Array(6);\n        for (let i = 0; i < covers.length; i += 1) {\n          covers[i] = recentRandom[i][1];\n        }\n        setCovers(covers);\n      }\n    }\n  }, [recentRandom]);\n\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getDate = (date) => {\n    const recordDate = new Date(date);\n    const seconds = Math.floor((new Date() - recordDate) / 1000);\n    let interval = Math.floor(seconds / 31536000);\n    if (interval >= 1) {\n      return interval + \" yr\" + (interval === 1 ? \"\" : \"s\");\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      return interval + \" mo\" + (interval === 1 ? \"\" : \"s\");\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      return interval + \" d\" + (interval === 1 ? \"\" : \"s\");\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      return interval + \" hr\" + (interval === 1 ? \"\" : \"s\");\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      return interval + \" min\" + (interval === 1 ? \"\" : \"s\");\n    }\n    return Math.floor(seconds) + \" second\" + (seconds === 1 ? \"\" : \"s\");\n  };\n\n  const navigate = useNavigate();\n  var topId = 12;\n  var cardIds = [1, 3, 4, 5, 6, 7];\n  return (\n    <div className=\"homePage\">\n      <div className=\"main-home\">\n        <div className=\"leaderboard-container\">\n          <h3>\n            <span>Leader</span>board\n          </h3>\n          <div className=\"leaderboard\">\n            {/* <img src={leaderboard} /> */}\n            <table>\n              <tr\n                style={{\n                  backgroundColor: `rgba(20, 20, 20, 0.78)`,\n                  fontWeight: 600,\n                  fontSize: `13px`,\n                }}\n              >\n                <td>#</td>\n                <td>Nickname</td>\n                <td>Score</td>\n                <td style={{ paddingLeft: `7px` }}>Questions</td>\n                <td>Last Game</td>\n                <td style={{ color: `white` }}>Time Ago</td>\n              </tr>\n              <tr>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n              </tr>\n              {leaderboard[0] !== null &&\n                leaderboard.map((profile, key) => {\n                  return (\n                    <tr>\n                      <td>{key + 1}</td>\n                      <td>\n                        {key == 0 && (\n                          <img src={gold} height=\"auto\" width=\"5px\"></img>\n                        )}\n                        {key == 1 && (\n                          <img src={silver} height=\"auto\" width=\"5px\"></img>\n                        )}\n                        {key == 2 && (\n                          <img src={bronze} height=\"auto\" width=\"5px\"></img>\n                        )}\n                        {profile.displayName}\n                      </td>\n                      <td>{profile.scores.toLocaleString()}</td>\n                      <td>{profile.questions}</td>\n                      <td>{profile.gameName}</td>\n                      <td>\n                        {profile.records.length > 0\n                          ? getDate(profile.records[0].createdAt)\n                          : \"N/A\"}\n                      </td>\n                      {/* <td>{profile.records[0].createdAt}something</td> */}\n                    </tr>\n                  );\n                })}\n              <tr>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n                <td> </td>\n              </tr>\n            </table>\n          </div>\n        </div>\n        <div className=\"new-feed\">\n          <div>\n            <div>\n              <div\n                className=\"story-wide story-card\"\n                style={{\n                  backgroundImage: `url(\n                    \"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/202209022318918.png\"\n                  )`,\n                }}\n                onClick={() => navigate(`/games/${topId}`)}\n              ></div>\n              <div className=\"story-grid\">\n                <Grid num={0} />\n                <Grid num={1} />\n                <Grid num={2} />\n              </div>\n              <div className=\"story-grid\">\n                <Grid num={3} />\n                <Grid num={4} />\n                <Grid num={5} />\n              </div>\n              <button className=\"story-card\" onClick={() => getRecent()}>\n                <img src={reload} /> Refresh\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"free-and-premium\">\n        <img src={storyList} />\n      </div>\n    </div>\n  );\n}\nexport default HomePage;\n","/Users/celia/Projects/Merakey/client/src/components/gameDetails.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],[],"import \"../styles/gameDetails.scss\";\nimport rating from \"../images/rating.png\";\nimport leaderboard from \"../images/game-leaderboard.png\";\n// import cover from \"../images/whodidit.png\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"./utilities/loginStatus\";\n\n//icons\nimport promptIco from \"../images/login-prompt.svg\";\nimport closeIco from \"../images/close.svg\";\n\n// import { comments } from \"../../../api/app/models\";\n\nfunction nestComments(commentList) {\n  const commentMap = {};\n\n  // 先把 commentList 转为名为 commentMap 的 array（本来是个 list）\n  commentList.forEach((comment) => (commentMap[comment.id] = comment));\n\n  // iterate over the comments again and correctly nest the children\n  commentList.forEach((comment) => {\n    if (comment.parentId !== null) {\n      const parent = commentMap[comment.parentId];\n      // parent 就是这个数组里 id 评论 parentId 的那条评论\n      (parent.children = parent.children || []).push(comment);\n      // 上面这个等于 parent.children = parent.children ? parent.children : []\n      // 如果 parent 有 children 的 attribute，那就把这条 comment 整条 push 进去，如果没有，就创建这个 attribute 然后 push 进去\n    }\n  });\n\n  // 这个时候，所有子评论都被放到母评论里了，所有有 parentId 的都是母评论，子评论都被装在母评论里面了，漏在外面的子评论不用理会\n  // filter the list to return a list of correctly nested comments\n  return commentList.filter((comment) => {\n    return comment.parentId === null;\n  });\n}\n\nfunction GameDetails() {\n  const [name, setName] = React.useState(null);\n  const [desc, setDesc] = React.useState(null);\n  const [author, setAuthor] = React.useState(null);\n  const [players, setPlayers] = React.useState(null);\n  const [views, setViews] = React.useState(null);\n  const [cover, setCover] = React.useState(null);\n  const [comments, setComments] = React.useState([]);\n  const [commentNum, setCommentNum] = React.useState(0);\n  const [tabState, setTabState] = React.useState(\"summary\");\n  const [content, setContent] = React.useState(\"\");\n  const [replyto, setReplyto] = React.useState(0);\n  const [popupState, setPopupState] = React.useState(true);\n  const [subject, setSubject] = React.useState(\"null\");\n  const [topics, setTopics] = React.useState([\"null\"]);\n  const [topic, setTopic] = React.useState(\"null\");\n  const mountedRef = React.useRef(true); // ← the \"flag\"\n  const { id } = useParams();\n  // console.log(\"id: \" + id);\n  function GetUser(uid, field) {\n    const response = fetch(`http://localhost:8080/api/profiles/${uid}`)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(\"data of user \" + uid + \": \" + JSON.stringify(data.avatar));\n        switch (field) {\n          case \"avatar\":\n            // console.log(\"#222 avatar\" + JSON.stringify(data.avatar));\n            return JSON.stringify(data.avatar);\n          case \"username\":\n            return data.displayName;\n          case \"status\":\n            return data.status;\n        }\n        return JSON.stringify(data.avatar);\n      });\n\n    // console.log(\"#333 response: \" + response);\n    return response;\n  }\n  const refreshPage = async () => {\n    fetch(`http://localhost:8080/api/games/${id}`)\n      .then((res) => res.json())\n      .then(async (data) => {\n        setName(data.name);\n        setDesc(data.description);\n        setPlayers(data.players);\n        setViews(data.views);\n        setCover(data.coverW);\n        setCommentNum(data.comments.length);\n        var author = await GetUser(data.authorId, \"username\");\n        setAuthor(author);\n        // console.log(\"comments: \" + JSON.stringify(nestComments(data.comments)));\n        var comments = data.comments;\n        for (let index = 0; index < comments.length; index++) {\n          var user = comments[index].profileId;\n          comments[index].avatar = await GetUser(user, \"avatar\");\n          comments[index].username = await GetUser(user, \"username\");\n          comments[index].status = await GetUser(user, \"status\");\n        }\n        setComments(nestComments(data.comments).reverse());\n      });\n  };\n\n  // const refreshPage = () => {\n  //   fetch(`http://localhost:8080/api/games/${id}`)\n  //     .then((res) => res.json())\n  //     .then(async (data) => {\n  //       var comments = data.comments;\n  //       for (let index = 0; index < comments.length; index++) {\n  //         var user = comments[index].profileId;\n  //         comments[index].avatar = await GetUser(user, \"avatar\");\n  //         comments[index].username = await GetUser(user, \"username\");\n  //         comments[index].status = await GetUser(user, \"status\");\n  //       }\n  //       setComments(comments);\n  //     });\n  // };\n\n  if (getCurrentUser) {\n    // console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var userId = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    // console.log(roles);\n  }\n\n  function Comment({ comment, level }) {\n    // console.log(comment);\n    if (!level) {\n      var level = 0;\n    }\n    var user = comment.userId;\n    var date = comment.createdAt.split(\"T\")[0];\n    var time = comment.createdAt.split(\"T\")[1].split(\".\")[0];\n    var content = comment.text;\n    var author = parseInt(comment.profileId);\n    var avatar = GetUser(author, \"avatar\");\n    // console.log(\n    //   \"#444 author is: \" + author + \" avatar is: \" + avatar + typeof avatar\n    // );\n    var children = comment.children;\n    if (level == 0) {\n      // console.log(level);\n      return (\n        <div className=\"comment-block\" key={comment.id}>\n          <div className=\"comment-info\">\n            <div className=\"profile-container\">\n              {/* <img src=\"https://cdn.jsdelivr.net/gh/liangchuxin/blog-files/img/20210315225826.jpg\"></img> */}\n              <img src={JSON.parse(comment.avatar)}></img>\n\n              <span\n                className={`user-status ${comment.status}`}\n                title={`${comment.status}…`}\n              ></span>\n            </div>\n            <div className=\"username\">\n              <p>{comment.username}</p>\n            </div>\n            <div className=\"separator\"></div>\n            <div className=\"date\" title={time}>\n              {date}\n            </div>\n          </div>\n          <div className=\"comment-content\">\n            <p>{content}</p>\n          </div>\n          <div\n            className=\"reply-comment\"\n            style={replyto !== comment.id ? { paddingBottom: `40px` } : {}}\n          >\n            <div onClick={() => setReplyto(comment.id)}>Reply</div>\n            <div\n              onClick={() => setReplyto(0)}\n              style={replyto !== comment.id ? { display: `none` } : {}}\n            >\n              Cancel Reply\n            </div>\n          </div>\n          <CommentBox replyNum={replyto} commentId={comment.id} />\n          {children?.map((subChildren) => (\n            <Comment comment={subChildren} level={level + 1} />\n          ))}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"comment-block\" key={comment.id}>\n          <div className=\"comment-info\">\n            <div className=\"profile-container\">\n              {/* <img src=\"https://cdn.jsdelivr.net/gh/liangchuxin/blog-files/img/20210315225826.jpg\"></img> */}\n              <img src={JSON.parse(comment.avatar)}></img>\n              <span\n                className={`user-status ${comment.status}`}\n                title={`${comment.status}…`}\n              ></span>{\" \"}\n            </div>\n            <div className=\"username\">\n              <p>{comment.username}</p>\n            </div>\n            <div className=\"separator\"></div>\n            <div className=\"date\" title={time}>\n              {date}\n            </div>\n          </div>\n          <div className=\"comment-content\">\n            <p>{content}</p>\n          </div>\n          <div\n            className=\"reply-comment\"\n            style={replyto !== comment.id ? { paddingBottom: `40px` } : {}}\n          >\n            <div onClick={() => setReplyto(comment.id)}>Reply</div>\n            <div\n              onClick={() => setReplyto(0)}\n              style={replyto !== comment.id ? { display: `none` } : {}}\n            >\n              Cancel Reply\n            </div>\n          </div>\n          <CommentBox replyNum={replyto} commentId={comment.id} />\n          {children?.map((subChildren) => (\n            <Comment comment={subChildren} level={level + 1} />\n          ))}\n        </div>\n      );\n    }\n  }\n\n  function SampleCmt({ commentContent }) {\n    const addToBox = (commentContent) => {\n      var commentBox = document.getElementById(\"comment-box\");\n      commentBox.value += commentContent + \" \";\n      // setContent(commentBox.value);\n      // console.log(\"Content in the box: \" + content);\n      commentBox.focus();\n    };\n    return (\n      <span onClick={() => addToBox(commentContent)}>{commentContent}</span>\n    );\n  }\n  React.useEffect(() => {\n    refreshPage();\n  }, []);\n  function CommentBox({ replyNum, commentId }) {\n    // console.log(\"content: \" + document.getElementById(\"comment-box\").value);\n    // var originalValue = document.getElementById(\"comment-box\").value;\n\n    if (replyNum == commentId) {\n      if (!IsLoggedIn()) {\n        return (\n          <>\n            <div className=\"comment-box\">\n              <p>\n                Please <span onClick={() => navigate(\"/signup\")}>sign up</span>{\" \"}\n                or <span onClick={() => navigate(\"/login\")}>login</span> to\n                comment!\n              </p>\n            </div>\n          </>\n        );\n      } else {\n        return (\n          <>\n            <div className=\"comment-box\">\n              <textarea\n                placeholder={\n                  commentId === 0\n                    ? `Please input a friendly comment…`\n                    : `Reply to…`\n                }\n                id=\"comment-box\"\n                // onChange={(event) => setContent(event.target.value)}\n                // defaultValue={document.getElementById(\"comment-box\").value}\n              ></textarea>\n              <div className=\"submit-btn\" onClick={() => handleSubmit()}>\n                Submit\n              </div>\n            </div>\n            <div\n              className=\"sample-comments\"\n              style={\n                commentId === 0\n                  ? { paddingBottom: \"55px\" }\n                  : { paddingBottom: \"40px\" }\n              }\n            >\n              <SampleCmt commentContent=\"Nice game!\" />\n              <SampleCmt commentContent=\"Wonderful experience!\" />\n            </div>\n          </>\n        );\n      }\n    } else {\n      return null;\n    }\n  }\n  React.useEffect(() => {\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      addView(views + 1);\n      console.log(\"there are \" + views + \" views\");\n    }\n  }, [views]);\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  // console.log(name, desc);\n\n  const navigate = useNavigate();\n\n  const addView = (viewNum) => {\n    const data = { views: viewNum };\n    fetch(`http://localhost:8080/api/games/${id}`, {\n      method: \"PUT\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  const submitComment = (comment, parent, user) => {\n    const data = { text: comment, parentId: parent, userId: user };\n    fetch(`http://localhost:8080/api/comments/${id}`, {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  const handleSubmit = () => {\n    var content = document.getElementById(\"comment-box\").value;\n    console.log(\"Submit comment: \" + content);\n    if (replyto == 0) {\n      submitComment(content, null, userId);\n    } else {\n      submitComment(content, replyto, userId);\n    }\n    toast.success(\"Your comment is submitted!\", {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      className: \"foo-bar\",\n      onClose: () => {\n        content = \"\";\n        document.getElementById(\"comment-box\").defaultValue = \"\";\n        refreshPage();\n      },\n    });\n  };\n  const getTopics = (subject) => {\n    fetch(`http://localhost:8080/api/topics/subject/${subject}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setTopics(data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  const submitSubject = (e) => {\n    setSubject(e);\n    setTopic(\"null\");\n    getTopics(e);\n  };\n  const submitTopic = (e) => {\n    setTopic(e);\n  };\n  console.log(\"topic: \" + topic);\n\n  return (\n    <>\n      {!IsLoggedIn() && popupState && (\n        <div className=\"login-popup\">\n          <img src={promptIco} />\n\n          <div className=\"title\">Login to see your progress!</div>\n          <div className=\"content\">\n            Login or sign up to comment, view all your practice / game\n            histories, and to track the wrong questions!\n          </div>\n          <div className=\"btn-container\">\n            <div className=\"signup\" onClick={() => navigate(\"/signup\")}>\n              Sign up\n            </div>\n            <div className=\"next\" onClick={() => setPopupState(false)}>\n              Next time\n            </div>\n          </div>\n          <div className=\"close\" onClick={() => setPopupState(false)}>\n            <img src={closeIco} />\n          </div>\n        </div>\n      )}\n      <div className=\"details-page\">\n        <div className=\"details\">\n          <ToastContainer autoClose={1000} theme=\"dark\" transition={Slide} />\n          <div className=\"cover-container\">\n            <img src={cover} style={{ width: \"772px\" }} />\n          </div>\n          <div className=\"game-details\">\n            <h3>{name}</h3>\n            <div className=\"info\">\n              <p className=\"author\">By @{author}</p>\n              <div className=\"rating\">\n                <img src={rating} />\n              </div>\n            </div>\n            <p className=\"played\">Played by: {players} players</p>\n          </div>\n          <div className=\"start-options\">\n            <button\n              className={`start-btn${topic == \"null\" ? \" disabled\" : \"\"}`}\n              onClick={() => navigate(`play/${topic}`)}\n              disabled={topic == \"null\" ? true : false}\n            >\n              Start Game\n            </button>\n            <select\n              id=\"subject\"\n              name=\"subject\"\n              className=\"subject-dropdown\"\n              onChange={(e) => submitSubject(e.target.value)}\n            >\n              <option value=\"null\" selected={subject === \"null\"}>\n                Choose Subject\n              </option>\n              <option value=\"maths\" selected={subject == \"maths\"}>\n                Maths\n              </option>\n              <option value=\"physics\" selected={subject == \"physics\"}>\n                Physics\n              </option>\n            </select>\n            {JSON.stringify(topics) !== '[\"null\"]' && (\n              <>\n                <select\n                  id=\"topic\"\n                  name=\"topic\"\n                  className=\"topic-dropdown\"\n                  onChange={(e) => submitTopic(e.target.value)}\n                >\n                  <option value=\"none\">Choose Topic</option>\n                  <option value=\"all\">All Topics</option>\n                  {topics.map((topicOption, index) => (\n                    <option value={topicOption.id}>\n                      {index + 1}. {topicOption.code} {topicOption.name}\n                    </option>\n                  ))}\n                </select>\n              </>\n            )}\n          </div>\n\n          <br />\n          <div className=\"tabs\">\n            <ul>\n              <li\n                className={tabState === \"summary\" ? \"active\" : \"\"}\n                onClick={() => setTabState(\"summary\")}\n              >\n                Summary\n              </li>\n              <li\n                className={tabState === \"comments\" ? \"active\" : \"\"}\n                onClick={() => setTabState(\"comments\")}\n              >\n                Comments ({commentNum})\n              </li>\n              <li\n                className={tabState === \"related\" ? \"active\" : \"\"}\n                onClick={() => setTabState(\"related\")}\n              >\n                Related (3)\n              </li>\n            </ul>\n          </div>\n          <div\n            className={`tab-content ${tabState === \"summary\" ? \"show\" : \"\"}`}\n          >\n            <p>{desc}</p>\n          </div>\n          <div\n            className={`tab-content ${tabState === \"comments\" ? \"show\" : \"\"}`}\n          >\n            <CommentBox replyNum={replyto} commentId={0} />\n\n            {comments.map((comment) => (\n              <>\n                <Comment comment={comment} level={0} />\n              </>\n            ))}\n          </div>\n        </div>\n        <div className=\"leaderboard\">\n          <img src={leaderboard} />\n        </div>\n      </div>\n    </>\n  );\n}\nexport default GameDetails;\n","/Users/celia/Projects/Merakey/client/src/components/subjectsPage.js",["254","255","256","257"],[],"import \"../styles/subjectsPage.scss\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//icons\nimport mathIco from \"../images/math-ico.svg\";\nimport physicsIco from \"../images/physics-ico.svg\";\nimport menuIco from \"../images/menu.svg\";\n\nfunction SubjectsPage() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const navigate = useNavigate();\n  return (\n    <div className=\"page-container\">\n      <div className=\"main-subjects\">\n        <div>\n          <h1>Subjects</h1>\n          <h2>There must be a subject that suits your needs.</h2>\n        </div>\n        <div className=\"separator\" />\n        <div className=\"subject-card-container\">\n          <div\n            className=\"subject-card\"\n            onClick={() => navigate(\"/subjects/maths\")}\n            style={{\n              backgroundImage: `url(\"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/202209250404078.png\")`,\n            }}\n          >\n            <div className=\"subject-icon\">\n              <img src={mathIco} />\n            </div>\n            <div className=\"subject-meta\">\n              <div className=\"subject-name\">Maths (0580)</div>\n              <div className=\"topics\">\n                <img src={menuIco} />\n                topics\n              </div>\n            </div>\n            <div className=\"bg-overlay\" />\n            <div className=\"displaced-bg\" />\n          </div>\n          <div\n            className=\"subject-card\"\n            onClick={() => navigate(\"/subjects/physics\")}\n            style={{\n              backgroundImage: `url(\"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/202209250406678.png\")`,\n            }}\n          >\n            <div className=\"subject-icon\">\n              <img src={physicsIco} />\n            </div>\n            <div className=\"subject-meta\">\n              <div className=\"subject-name\">Physics (0625)</div>\n              <div className=\"topics\">\n                <img src={menuIco} />\n                topics\n              </div>\n            </div>\n            <div className=\"bg-overlay\" />\n            <div className=\"displaced-bg\" />\n          </div>\n          <div className=\"main-bg-overlay\" />\n        </div>\n      </div>\n      <div className=\"bg-title\">MERAKEY</div>\n    </div>\n  );\n}\nexport default SubjectsPage;\n","/Users/celia/Projects/Merakey/client/src/components/aboutPage.js",["258","259"],[],"import \"../styles/aboutPage.scss\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nfunction AboutPage() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const navigate = useNavigate();\n  return (\n    <>\n      <div className=\"page-container\">\n        <div className=\"main-about\">\n          <h1>ABOUT MERAKEY</h1>\n          <h2>\n            A <em>revolutionary</em> platform for students\n          </h2>\n          <p>\n            <b>What is Merakey?</b>\n          </p>\n          <p>\n            A learning platform, a gaming website, a young community… It can be\n            a combination of all of these, and, to be honest, its definition is\n            totally depending on <b>you</b>.\n          </p>\n          <p>\n            Merakey is a learning platform for middle school and high school\n            students enrolling in curriculums of IGCSE and O'level. By providing\n            a rich resource of practice questions and past exam questions\n            together with intrigueing interactive text games of a variety of\n            genres, Merakey provides the best way for you to focus on doing\n            practicing questions without procrastination, to relax in the\n            process.\n          </p>\n          <blockquote>\n            <p>You define how you learn.</p>\n          </blockquote>\n          <p>\n            Merakey offers great flexibility. different types of games, it is up\n            to your preference. Step 1: choose the area you would like to revise\n            for from our database. Step 2: inject the questions from the\n            database into any of the text games on the site.\n          </p>\n          <p>\n            You can always replay a game that you love, and inject questions of\n            different topics, even different subjects into it.\n          </p>\n        </div>\n      </div>\n      <div className=\"image\">\n        <img src=\"https://images.unsplash.com/photo-1639322537228-f710d846310a\" />\n      </div>\n\n      <div className=\"page-container\">\n        <div className=\"main-about\">\n          <p className=\"image-text\">\n            Merakey connects everything together, Image from{\" \"}\n            <a href=\"https://unsplash.com/photos/T9rKvI3N0NM\">Unsplash</a>\n          </p>\n          <blockquote>\n            <p>For students, by students.</p>\n          </blockquote>\n          <p>\n            As a user of the website, your role is not limited to a \"player\". In\n            fact, we highly encourage you to become a \"contributor\". We believe\n            that students know students better, and therefore can provide more\n            quality contents to the platform.\n          </p>\n          <p>\n            If you are interested in story-writing, you can become a \"content\n            contributor\" -- You can design you own story, email it to us and\n            earn points. You can also be a \"problem contributor\" -- If you have\n            great sources of practice questions for any topic in any subject,\n            you are highly welcome to email it to us.\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default AboutPage;\n","/Users/celia/Projects/Merakey/client/src/components/navBar.js",["260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],[],"import \"../styles/navBar.scss\";\nimport logo from \"../images/logo.png\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { Search } from \"./search\";\nimport searchIco from \"../images/search-white.svg\";\nimport IsLoggedIn, { logOut, getCurrentUser } from \"./utilities/loginStatus\";\n\nfunction NavBar(props) {\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const [searchState, setSearchState] = React.useState(false);\n  const closeParentSearch = () => {\n    setSearchState(false);\n  };\n  const openParentSearch = () => {\n    setSearchState(true);\n  };\n\n  function ShowSearch(props) {\n    return <Search show={props.show} closeParent={closeParentSearch} />;\n  }\n  const path = window.location.pathname.split(\"/\")[1];\n  const navigate = useNavigate();\n\n  // console.log(\"search state: \" + searchState);\n  if (getCurrentUser) {\n    // console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    // console.log(roles);\n  }\n  const [avatar, setAvatar] = React.useState(\n    \"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/202209210118002.png\"\n  );\n  const getUser = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setAvatar(data.avatar);\n      });\n  };\n  React.useEffect(() => {\n    getUser(id);\n  }, []);\n  if (path === \"login\" || path === \"signup\") {\n    return (\n      <div className=\"navSimple\">\n        <div className=\"logo-container\" onClick={() => navigate(\"/\")}>\n          <img className=\"logo\" src={logo} />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <ShowSearch show={searchState} />\n        <div className=\"navBar\">\n          <div className=\"container\">\n            <div className=\"logo-container\" onClick={() => navigate(\"/\")}>\n              <img className=\"logo\" src={logo} />\n            </div>\n            <div className=\"navigation\">\n              <ul>\n                <li className={path === \"\" ? \"active\" : \"\"}>\n                  <a onClick={() => navigate(\"/\")}>Home</a>\n                </li>\n                <li className={path === \"about\" ? \"active\" : \"\"}>\n                  <a onClick={() => navigate(\"/about\")}>About</a>\n                </li>\n                <li className={path === \"subjects\" ? \"active\" : \"\"}>\n                  <a onClick={() => navigate(\"/subjects\")}>Subjects</a>\n                </li>\n                <li>\n                  <a\n                    href=\"#\"\n                    onClick={() => {\n                      alert(\"未满十八不得充钱（\");\n                    }}\n                  >\n                    Upgrade\n                  </a>\n                </li>\n                <li>\n                  <a onClick={() => openParentSearch()}>\n                    <img src={searchIco} />\n                  </a>\n                </li>\n                {!IsLoggedIn() && (\n                  <li>\n                    <a onClick={() => navigate(\"/signup\")} className=\"li-btn\">\n                      Sign up\n                    </a>\n                  </li>\n                )}\n              </ul>\n              {IsLoggedIn() && (\n                <li>\n                  <a onClick={() => navigate(\"/user\")}>\n                    <div className=\"avatar\">\n                      <img src={avatar} />\n                    </div>\n                  </a>\n                </li>\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default NavBar;\n","/Users/celia/Projects/Merakey/client/src/components/downloadWrong.js",["278","279","280","281","282","283","284","285"],[],"import React from \"react\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction downloadPDF(Qs) {\n  const downloadTxtFile = (text) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([text], {\n      type: \"text/plain\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"Wrong Questions.txt\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  var wrongQs = [];\n  Qs.map((questionText) => {\n    if (questionText[1] == \"wrong\") {\n      wrongQs = wrongQs.concat([questionText]);\n    }\n  });\n  var textFile = \"List of wrong questions \\n\\n\";\n  if (wrongQs.length == 0) {\n    // alert(\"You don't have wrong answers!\");\n    toast(\"You don't have wrong answers!\", {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      icon: \"🦄\",\n    });\n  } else {\n    var index = 1;\n    wrongQs.map((questionText) => {\n      if (questionText[1] == \"wrong\") {\n        textFile += `${index}. ${questionText[0]}\\n\\n`;\n        index += 1;\n      }\n    });\n    console.log(textFile);\n    downloadTxtFile(textFile);\n  }\n}\nexport default downloadPDF;\n","/Users/celia/Projects/Merakey/client/src/components/search.js",["286","287"],[],"import \"../styles/search.scss\";\nimport searchIco from \"../images/search.svg\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nexport function Search(props) {\n  const [searchState, setSearchState] = React.useState(false);\n  const [query, setQuery] = useState(\"\");\n  const navigate = useNavigate();\n  const mountedRef = React.useRef(true); // ← the \"flag\"\n\n  function useOutsideAlerter(ref) {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          closeSearch();\n        }\n      }\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  React.useEffect(() => {\n    if (props.show) {\n      openSearch();\n    } else {\n      closeSearch();\n    }\n  });\n  React.useEffect(() => {\n    // 我也搞不懂 ref，所以此处用了个不用 ref 自动选择的笨方法\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      if (searchState) {\n        document.getElementById(\"searchfield\").focus();\n      }\n    }\n  });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setQuery(query);\n    navigate(`/search/${query}`);\n    closeSearch();\n    props.closeParent(false);\n    return false;\n  };\n  const closeSearch = (e) => {\n    setSearchState(false);\n    props.closeParent(false);\n  };\n  const openSearch = () => {\n    setSearchState(true);\n  };\n  const handleClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    return false;\n  };\n  // React.useEffect(() => {\n  if (searchState === true) {\n    return (\n      <>\n        <div className=\"search-box-backdrop\">\n          <div className=\"search\">\n            <form\n              class=\"search-form\"\n              name=\"search\"\n              ref={wrapperRef}\n              onSubmit={(e) => handleSubmit(e)}\n            >\n              <input\n                class=\"search-field\"\n                id=\"searchfield\"\n                type=\"text\"\n                name=\"q\"\n                placeholder=\"Search games and subject topics…\"\n                onChange={(event) => setQuery(event.target.value)}\n              />\n              <button\n                class=\"appear-button always-appear\"\n                type=\"button\"\n                id=\"searchsubmit\"\n                onClick={(e) => handleSubmit(e)}\n              >\n                <img className=\"search-icon\" src={searchIco} />\n                <i class=\"icon icon-search\" aria-hidden=\"true\"></i>\n              </button>\n              <button class=\"search-button\" onClick={(e) => handleSubmit(e)}>\n                <i class=\"icon icon-search\" aria-hidden=\"true\"></i>\n              </button>\n            </form>\n          </div>\n          <button\n            onClick={() => closeSearch()}\n            class=\"search-wrapper-close\"\n            aria-label=\"Close\"\n          ></button>\n        </div>\n      </>\n    );\n  } else if (searchState === false) {\n    return null;\n  }\n}\n","/Users/celia/Projects/Merakey/client/src/components/searchPage.js",["288","289","290","291","292","293","294","295","296","297","298"],[],"import \"../styles/searchPage.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport searchIco from \"../images/search.svg\";\nimport arrowUpIco from \"../images/chevron-up.svg\";\nimport arrowDownIco from \"../images/chevron-down.svg\";\nimport userIco from \"../images/user.svg\";\nimport clockIco from \"../images/clock.svg\";\nimport playIco from \"../images/play-circle.svg\";\nimport noStories from \"../images/no-stories.png\";\n\nfunction SearchPage() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const { query } = useParams();\n  const [queryMain, setQueryMain] = useState(query);\n  //query:地址栏\n  //queryMain: 自己框\n  const mountedRef = React.useRef(true); // ← the \"flag\"\n  // 在传进来的 parameter（即链接变量）改变的时候更新 state\n  const [mainTab, setMainTab] = React.useState(\"games\");\n  const [tabState, setTabState] = React.useState(true);\n  const [rank, setRank] = React.useState(\"general\");\n  const [filter, setFilter] = React.useState(\"100000\");\n  const [games, setGames] = React.useState([]);\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    setQueryMain(query);\n    if (query === undefined || query === null || query === \"\") {\n      console.log(\"undefined!\");\n      setQueryMain(\"\");\n      getAllGames();\n    } else {\n      setQueryMain(query);\n      searchGames(query);\n    }\n  }, [query]);\n  React.useEffect(() => {\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      if (queryMain !== \"\" && query !== undefined) {\n        searchGames(query);\n      } else {\n        getAllGames();\n      }\n    }\n  }, [rank]);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    navigate(`/search/${queryMain}`);\n    if (queryMain === undefined || queryMain === null || queryMain === \"\") {\n      // 搜索的时候只用看框里是什么就好了，不能判断 query：如果query 是空的，还没来得及换，那么搜什么都会全部显示\n      // 加载看地址栏的，搜索看自己框的\n      setQueryMain(\"\");\n      console.log(\"undefined!\");\n      getAllGames();\n    } else {\n      setQueryMain(queryMain);\n      searchGames(queryMain);\n    }\n  };\n  const searchGames = (query) => {\n    fetch(`http://localhost:8080/api/games/search/${query}/${rank}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setGames(data);\n      });\n  };\n  const getAllGames = () => {\n    fetch(`http://localhost:8080/api/games/all/${rank}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setGames(data);\n      });\n  };\n\n  React.useEffect(() => {\n    if (mountedRef.current) {\n      mountedRef.current = false;\n    } else {\n      console.log(\"game: \" + games);\n    }\n  }, [games]);\n  console.log();\n  function NoStoryFound(props) {\n    if (mainTab === \"games\") {\n      var data = props.data;\n      console.log(\"Data: \" + data);\n      if (!data.length) {\n        return (\n          <div className=\"no-stories\">\n            <img src={noStories} />\n          </div>\n        );\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n  return (\n    <div className=\"search-container\">\n      <div className=\"results-wrapper\">\n        <h1>\n          <span className=\"search-title\">\n            Sea<span className=\"search-gold\">r</span>ch\n          </span>\n          &nbsp;&nbsp;|&nbsp;&nbsp;Merakey\n        </h1>\n        <form className=\"main-search\" onSubmit={(e) => handleSubmit(e)}>\n          <input\n            className=\"main-search-box\"\n            onSubmit={(e) => handleSubmit(e)}\n            value={queryMain}\n            onChange={(event) => setQueryMain(event.target.value)}\n            placeholder=\"Search games and subject topics…\"\n          ></input>\n          <button\n            className=\"main-submit\"\n            type=\"button\"\n            onClick={(e) => handleSubmit(e)}\n          >\n            <img src={searchIco} />\n            Search\n          </button>\n        </form>\n        <div className=\"filters\">\n          <div className=\"filterTabs\">\n            <ul>\n              <li\n                className={mainTab === \"games\" ? \"active\" : \"\"}\n                onClick={() => setMainTab(\"games\")}\n              >\n                GAMES 99+<div className=\"border-bottom\"></div>\n              </li>\n              <li\n                className={mainTab === \"questions\" ? \"active\" : \"\"}\n                onClick={() => setMainTab(\"questions\")}\n              >\n                QUESTIONS 99+\n              </li>\n              <li\n                className={mainTab === \"genres\" ? \"active\" : \"\"}\n                onClick={() => setMainTab(\"genres\")}\n              >\n                GENRES\n              </li>\n              <li\n                className={mainTab === \"users\" ? \"active\" : \"\"}\n                onClick={() => setMainTab(\"users\")}\n              >\n                USERS\n              </li>\n            </ul>\n          </div>\n          <div\n            className={`ranking-btns ${\n              mainTab === \"games\" && tabState ? \"show\" : \"\"\n            }`}\n          >\n            <div className=\"rank-groups\">\n              <ul className=\"rank-one\">\n                <li\n                  className={rank === \"general\" ? \"active\" : \"\"}\n                  onClick={() => setRank(\"general\")}\n                >\n                  General\n                </li>\n                <li\n                  className={rank === \"views\" ? \"active\" : \"\"}\n                  onClick={() => setRank(\"views\")}\n                >\n                  most viewed\n                </li>\n                <li\n                  className={rank === \"recents\" ? \"active\" : \"\"}\n                  onClick={() => setRank(\"recents\")}\n                >\n                  most recent\n                </li>\n                <li\n                  className={rank === \"plays\" ? \"active\" : \"\"}\n                  onClick={() => setRank(\"plays\")}\n                >\n                  most played\n                </li>\n                <li\n                  className={rank === \"comments\" ? \"active\" : \"\"}\n                  onClick={() => setRank(\"comments\")}\n                >\n                  most commented\n                </li>\n              </ul>\n              <ul className=\"rank-two\">\n                <li\n                  className={filter === \"100000\" ? \"active\" : \"\"}\n                  onClick={() => setFilter(\"100000\")}\n                >\n                  General\n                </li>\n                <li\n                  className={filter === \"2\" ? \"active\" : \"\"}\n                  onClick={() => setFilter(\"2\")}\n                >\n                  2 mins\n                </li>\n                <li\n                  className={filter === \"5\" ? \"active\" : \"\"}\n                  onClick={() => setFilter(\"5\")}\n                >\n                  5 mins\n                </li>\n                <li\n                  className={filter === \"10\" ? \"active\" : \"\"}\n                  onClick={() => setFilter(\"10\")}\n                >\n                  10 mins\n                </li>\n                <li\n                  className={filter === \"30\" ? \"active\" : \"\"}\n                  onClick={() => setFilter(\"30\")}\n                >\n                  30 mins\n                </li>\n                <li\n                  className={filter === \"60\" ? \"active\" : \"\"}\n                  onClick={() => setFilter(\"60\")}\n                >\n                  60 mins +\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div\n            className={`hide-filter ${\n              mainTab === \"games\" && tabState ? \"show\" : \"\"\n            }`}\n            onClick={() => setTabState(false)}\n          >\n            Close filter\n            <img src={arrowUpIco} />\n          </div>\n          <div\n            className={`hide-filter ${\n              mainTab === \"games\" && !tabState ? \"show\" : \"\"\n            }`}\n            onClick={() => setTabState(true)}\n          >\n            Open filter\n            <img src={arrowDownIco} />\n          </div>\n        </div>\n        <div\n          className={`result-cards-container ${\n            mainTab === \"games\" ? \"show\" : \"\"\n          }`}\n        >\n          {games.map((game) => {\n            console.log(game.playTime, parseInt(filter) * 60);\n            if (game.playTime < parseInt(filter) * 60) {\n              return (\n                <div\n                  className=\"result-card\"\n                  key={game.id}\n                  onClick={() => navigate(`/games/${game.id}`)}\n                >\n                  <div className=\"cover\">\n                    <img src={game.coverR}></img>\n                  </div>\n                  <div className=\"card-descriptions\">\n                    <span>{game.name}</span>\n                    <div className=\"meta-data\">\n                      <p className=\"views\">\n                        <img src={playIco} />\n                        {game.views}\n                      </p>\n                      <p className=\"time\">\n                        <img src={clockIco} />\n                        {game.createdAt.split(\"T\")[0]}\n                      </p>\n                    </div>\n                    <div className=\"meta-data\">\n                      <p className=\"author\">\n                        <img src={userIco} />\n                        {/* {game.authorId} */}\n                        Cecelia Liang\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          })}\n        </div>\n      </div>\n      <NoStoryFound data={games} tab={mainTab} />\n    </div>\n  );\n}\nexport default SearchPage;\n","/Users/celia/Projects/Merakey/client/src/components/login.js",["299","300","301","302","303","304","305","306","307"],[],"import \"../styles/login.scss\";\nimport React from \"react\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport arrowIco from \"../images/arrow-right.svg\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// import LogInUser from \"./utilities/logInUser\";\nimport IsLoggedIn, { logOut, getCurrentUser } from \"./utilities/loginStatus\";\n\nfunction Login(props) {\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    document.getElementById(\"user\").focus();\n  }, []);\n  const [pMode, setPMode] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  // async function LogIn(user, pass) {\n  //   var userStatus = await LogInUser(user, pass);\n  //   return userStatus;\n  // }\n  async function LogInUser(username, password) {\n    const data = {\n      username: username,\n      password: password,\n    };\n    fetch(`http://localhost:8080/api/auth/signin`, {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        // 用户名或密码错误显示错误\n        if (!response.ok) {\n          toast.error(\"Username or password is not found\", {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          return false;\n          // 登录成功\n        } else {\n          // alert(\"User was logged in sucessfully!\");\n          console.log(response);\n\n          // navigate(\"/user\");\n          window.location.href = \"/user\";\n          return response.json();\n        }\n      })\n      .then((data) => {\n        console.log(\"Success:\", data);\n        if (data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(data));\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  const handleSubmit = () => {\n    var user = document.getElementById(\"user\").value;\n    var pass = document.getElementById(\"pass\").value;\n    if (user == \"\" || pass == \"\") {\n      toast.error(\"Field cannot be empty!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    } else {\n      LogInUser(user, pass);\n      // var userStatus = LogIn(user, pass);\n      // console.log(\"User Status: \" + JSON.stringify(userStatus));\n      // console.log(LogInUser(user, pass));\n    }\n  };\n  return (\n    <div className=\"login-container background\">\n      <ToastContainer autoClose={2000} theme=\"dark\" transition={Slide} />\n      <h1>\n        Login to your account<span>.</span>\n      </h1>\n      <h2>\n        {!pMode\n          ? `Welcome back to Merakey 🔑 !`\n          : `Welcome back to Merakey 🙈 !`}\n      </h2>\n      <div className=\"form-group\">\n        <input id=\"user\" placeholder=\"Username *\"></input>\n        <input\n          id=\"pass\"\n          type=\"password\"\n          onFocus={() => setPMode(true)}\n          onBlur={() => setPMode(false)}\n          placeholder=\"Password *\"\n        ></input>\n        <div className=\"submit-btn\" onClick={() => handleSubmit()}>\n          Start Your Journey\n          <span>\n            <img src={arrowIco} />\n          </span>\n        </div>\n      </div>\n      <div className=\"switch-notice\">\n        Not a member yet?&nbsp;&nbsp;\n        <span onClick={() => navigate(\"/signup\")}>Sign up now</span>\n      </div>\n    </div>\n  );\n}\nexport default Login;\n","/Users/celia/Projects/Merakey/client/src/components/signup.js",["308","309","310","311","312","313"],[],"import \"../styles/login.scss\";\nimport \"../styles/signup.scss\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport arrowIco from \"../images/arrow-right.svg\";\nimport { SignUpUser } from \"./utilities/signUpUser\";\n\nfunction SignUp(props) {\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    document.getElementById(\"user\").focus();\n  }, []);\n  const [pMode, setPMode] = React.useState(false);\n\n  // handle submit\n  const handleSubmit = () => {\n    var email = document.getElementById(\"email\").value;\n    var user = document.getElementById(\"user\").value;\n    var pass = document.getElementById(\"pass\").value;\n    var vpass = document.getElementById(\"vpass\").value;\n    if (\n      emptyCheck(email, user, pass, vpass) &&\n      emailCheck(email) &&\n      nameLengthCheck(user) &&\n      matchCheck(pass, vpass)\n    ) {\n      SignUpUser(user, email, pass);\n    }\n  };\n  // validation checks\n  const emptyCheck = (email, user, pass, vpass) => {\n    if (email == \"\" || user == \"\" || pass == \"\" || vpass == \"\") {\n      toast.error(\"Field(s) cannot be empty!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return false;\n    }\n    return true;\n  };\n  const matchCheck = (pass, vpass) => {\n    if (pass != vpass) {\n      toast.error(\"The two passwords do not match!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return false;\n    }\n    return true;\n  };\n  const emailCheck = (email) => {\n    var re = /\\S+@\\S+\\.\\S+/;\n    if (!re.test(email)) {\n      toast.error(\"Email is invalid. Please try again.\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const nameLengthCheck = (user) => {\n    var length = user.length;\n    if (length >= 20) {\n      toast.error(\"Username is too long!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div className=\"signup-container background\">\n      <ToastContainer autoClose={2000} theme=\"dark\" transition={Slide} />\n      <div className=\"split-container\">\n        <div className=\"titles\">\n          <div className=\"tip\">Sign up</div>\n          <h1>\n            <span>Welcome to</span>\n            <br />\n            Merakey {!pMode ? `🔑` : `🙈`}\n          </h1>\n          <div className=\"description\">\n            Join Merakey, Practice with online question databases in unlimited\n            interactive games, for free\n          </div>\n        </div>\n        <div style={{ marginTop: `-35px` }}>\n          <div className=\"form-group\">\n            <input id=\"user\" placeholder=\"Username *\" />\n            <input id=\"email\" placeholder=\"Email *\" />\n            <input\n              type=\"password\"\n              id=\"pass\"\n              onFocus={() => setPMode(true)}\n              onBlur={() => setPMode(false)}\n              placeholder=\"Password *\"\n            />\n            <input\n              type=\"password\"\n              id=\"vpass\"\n              onFocus={() => setPMode(true)}\n              onBlur={() => setPMode(false)}\n              placeholder=\"Verify password *\"\n            />\n            <div className=\"submit-btn\" onClick={() => handleSubmit()}>\n              Create Your Account\n              <span>\n                <img src={arrowIco} />\n              </span>\n            </div>\n          </div>\n          <div className=\"switch-notice\">\n            Already have an account?&nbsp;&nbsp;\n            <span onClick={() => navigate(\"/login\")}>Login here</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default SignUp;\n","/Users/celia/Projects/Merakey/client/src/components/utilities/signUpUser.js",["314","315","316","317"],[],"import { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\n\nexport const SignUpUser = (username, email, password) => {\n  const data = {\n    username: username,\n    email: email,\n    password: password,\n  };\n  fetch(`http://localhost:8080/api/auth/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => {\n      // 注册成功返回200，失败返回原因\n      if (!response.ok) {\n        return response.text().then((text) => {\n          toast.error(JSON.parse(text).message, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          // alert(JSON.parse(text).message);\n        });\n      } else {\n        return response.json();\n      }\n    })\n    .then((data) => {\n      const profile = {\n        id: data.id,\n        displayName: data.username,\n      };\n      console.log(\"profile: \" + JSON.stringify(profile));\n      fetch(`http://localhost:8080/api/profiles`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(profile),\n      }).then((response) => {\n        toast.success(\"User was registered sucessfully!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          className: \"foo-bar\",\n          onClose: () => {\n            window.location.href = \"/login\";\n            return response.json();\n          },\n        });\n      });\n      console.log(\"Success:\", data);\n      console.log(\"Status code: \" + data.status);\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n    });\n};\n","/Users/celia/Projects/Merakey/client/src/components/user/userHome.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340"],[],"import IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport \"./styles/userHome.scss\";\nimport SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// icons\nimport h2Clock from \"./icons/h2-clock.svg\";\nimport panelStatS from \"./icons/panel-stat-s.svg\";\nimport panelStatL from \"./icons/panel-stat-l.svg\";\nimport panelEditS from \"./icons/panel-edit-s.svg\";\nimport panelEditL from \"./icons/panel-edit-l.svg\";\nimport panelAwardS from \"./icons/panel-award-s.svg\";\nimport panelAwardL from \"./icons/panel-award-l.svg\";\nimport arrowIco from \"./icons/arrow-right.svg\";\n\nfunction UserHome() {\n  const navigate = useNavigate();\n  const [name, setName] = React.useState(\"\");\n  const [records, setRecords] = React.useState([]);\n  const [avatar, setAvatar] = React.useState(\n    \"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/202209210118002.png\"\n  );\n  const [scores, setScores] = React.useState(0);\n  const [qsNum, setQsNum] = React.useState(0);\n  const getUser = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setAvatar(data.avatar);\n        setName(data.displayName);\n        setScores(data.scores);\n        setQsNum(data.questions);\n      });\n  };\n  const getCurrentDate = () => {\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var d = new Date();\n    var month = months[d.getMonth()];\n    var date = d.getDate();\n    var year = d.getFullYear();\n    return `${month.toUpperCase()} ${date}, ${year}`;\n  };\n\n  function GetGame(id, field) {\n    const response = fetch(`http://localhost:8080/api/games/meta/${id}`)\n      .then((res) => {\n        if (res.status === 404) {\n          return {\n            name: \"Unavailable\",\n            description: \"N/A\",\n            coverR:\n              \"https://m.media-amazon.com/images/I/11f6LubgRmL._SY498_BO1,204,203,200_.jpg\",\n            createdAt: \"0000-00-00T03:05:06.000Z\",\n            playTime: 180,\n          };\n        }\n        return res.json();\n      })\n      .then((data) => {\n        switch (field) {\n          case \"cover\":\n            return JSON.stringify(data.coverR);\n          case \"name\":\n            return data.name;\n          case \"desc\":\n            return data.description;\n        }\n      });\n    return response;\n  }\n  const convertEnd = (end) => {\n    switch (end) {\n      case \"not done\":\n        return end.charAt(0).toUpperCase() + end.slice(1);\n      case \"happy\":\n        return \"Happy End\";\n      case \"bad\":\n        return \"Bad End\";\n      case \"true\":\n        return \"True End\";\n      default:\n        return \"undentified\";\n    }\n  };\n\n  function GetTopic(topicId) {\n    const response = fetch(`http://localhost:8080/api/topics/id/${topicId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        return data.code + \" \" + data.name;\n      });\n    return response;\n  }\n  function GetSubject(topicId) {\n    const response = fetch(`http://localhost:8080/api/topics/id/${topicId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        return data.subject;\n      });\n    return response;\n  }\n\n  const getDate = (d, type) => {\n    // sqlDate = Date.parse(sqlDate);\n    let jsDate = new Date(d);\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var month = months[jsDate.getMonth()];\n    var hr = jsDate.getHours();\n    var min = jsDate.getMinutes();\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n    var ampm = \"AM\";\n    if (hr > 12) {\n      hr -= 12;\n      ampm = \"PM\";\n    }\n    var date = jsDate.getDate();\n    var year = jsDate.getFullYear();\n    if (type == \"date\") {\n      return `${date} ${month} ${year}`;\n    } else if (type == \"time\") {\n      return `${hr}:${min} ${ampm}`;\n    } else {\n      return \"Wrong type.\";\n    }\n  };\n  const getRecords = async (userId) => {\n    fetch(`http://localhost:8080/api/records/${userId}/5`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(async (data) => {\n        var records = data;\n        for (let index = 0; index < records.length; index++) {\n          var game = records[index].gameId;\n          records[index].cover = await GetGame(game, \"cover\");\n          records[index].gameName = await GetGame(game, \"name\");\n          records[index].gameDesc = await GetGame(game, \"desc\");\n          records[index].topicName = await GetTopic(data[index].topicId);\n          records[index].subject = await GetSubject(data[index].topicId);\n        }\n        setRecords(records);\n      });\n  };\n\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  React.useEffect(() => {\n    getUser(id);\n    getRecords(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  var date = new Date();\n  const month = date.toLocaleString(\"default\", { month: \"long\" });\n  const year = console.log(\"avatar: \" + avatar);\n\n  return (\n    <>\n      <SecondSide />\n      <section className=\"user-main\">\n        <div className=\"main-container\">\n          <div className=\"date\">{getCurrentDate()}</div>\n          <div className=\"greeting\">\n            Hello<span>,</span> {name}!\n          </div>\n          <div className=\"data-panels\">\n            <div className=\"panel purple\">\n              <img className=\"ico\" src={panelStatS} />\n              <span className=\"title\">Total Score</span>\n              <span className=\"num\">{scores.toLocaleString()}</span>\n              <img className=\"bg\" src={panelStatL} />\n            </div>\n            <div className=\"panel green\">\n              <img className=\"ico\" src={panelEditS} />\n              <span className=\"title\">Questions Answered</span>\n              <span className=\"num\">{qsNum.toLocaleString()}</span>\n              <img className=\"bg\" src={panelEditL} />\n            </div>\n            <div className=\"panel red\">\n              <img className=\"ico\" src={panelAwardS} />\n              <span className=\"title\">Global Rank</span>\n              <span className=\"num\">10</span>\n              <img className=\"bg\" src={panelAwardL} />\n            </div>\n          </div>\n          <h2>\n            <img src={h2Clock} />\n            <span>Game History</span>\n          </h2>\n          <div className=\"subject-block\">\n            {records.length != 0 ? (\n              records.map((record) => (\n                <div className=\"game-history\">\n                  <div\n                    className=\"his-cover-container\"\n                    onClick={() => navigate(`/games/${record.gameId}`)}\n                  >\n                    <img src={JSON.parse(record.cover)} />\n                  </div>\n                  <div\n                    className=\"story-meta\"\n                    onClick={() => navigate(`/games/${record.gameId}`)}\n                  >\n                    <div className=\"name\">{record.gameName}</div>\n                    <div className=\"desc\">{record.gameDesc}</div>\n                  </div>\n                  <div className=\"qs-meta\">\n                    <div className=\"time\">{record.subject.toUpperCase()}</div>\n                    {/* <div className=\"date\">12 Dec 2022</div> */}\n                    <div className=\"date\">{record.topicName}</div>\n                  </div>\n                  <div className=\"time-meta\">\n                    <div className=\"time\">\n                      {getDate(Date.parse(record.createdAt), \"time\")}\n                    </div>\n                    {/* <div className=\"date\">12 Dec 2022</div> */}\n                    <div className=\"date\">\n                      {getDate(Date.parse(record.createdAt), \"date\")}\n                    </div>\n                  </div>\n                  <div className=\"perf-meta\">\n                    <div className=\"points\">{record.score} pts</div>\n                    {/* <div className=\"end\">True End</div> */}\n                    <div className=\"end\">{convertEnd(record.end)}</div>\n                  </div>\n                  <div\n                    className=\"replay-btn\"\n                    onClick={() => navigate(`/games/${record.gameId}`)}\n                  >\n                    Play Again\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div\n                style={{\n                  color: `#626262`,\n                  marginBottom: `29px`,\n                  fontFamily: `poppins`,\n                }}\n              >\n                Σ( ° △ °|||)︴ You don't have gaming records!\n              </div>\n            )}\n          </div>\n          {/* <div className=\"subject-block\">\n            <h3>Maths</h3>\n            <div className=\"game-history\">\n              <div className=\"his-cover-container\"></div>\n              <div className=\"story-meta\">\n                <div className=\"name\">The Child</div>\n                <div className=\"desc\">\n                  Children in your village do not go to school, for most of…\n                </div>\n              </div>\n              <div className=\"time-meta\">\n                <div className=\"time\">11:30 AM</div>\n                <div className=\"date\">12 Dec 2022</div>\n              </div>\n              <div className=\"perf-meta\">\n                <div className=\"points\">373 pts</div>\n                <div className=\"end\">True End</div>\n              </div>\n              <div className=\"replay-btn\">Play Again</div>\n            </div>\n            <div className=\"game-history\">\n              <div className=\"his-cover-container\"></div>\n              <div className=\"story-meta\">\n                <div className=\"name\">The Child</div>\n                <div className=\"desc\">\n                  Children in your village do not go to school, for most of…\n                </div>\n              </div>\n              <div className=\"time-meta\">\n                <div className=\"time\">11:30 AM</div>\n                <div className=\"date\">12 Dec 2022</div>\n              </div>\n              <div className=\"perf-meta\">\n                <div className=\"points\">373 pts</div>\n                <div className=\"end\">True End</div>\n              </div>\n              <div className=\"replay-btn\">Play Again</div>\n            </div>\n          </div>\n          <div className=\"subject-block\">\n            <h3>Physics</h3>\n            <div className=\"game-history\">\n              <div className=\"his-cover-container\"></div>\n              <div className=\"story-meta\">\n                <div className=\"name\">The Child</div>\n                <div className=\"desc\">\n                  Children in your village do not go to school, for most of…\n                </div>\n              </div>\n              <div className=\"time-meta\">\n                <div className=\"time\">11:30 AM</div>\n                <div className=\"date\">12 Dec 2022</div>\n              </div>\n              <div className=\"perf-meta\">\n                <div className=\"points\">373 pts</div>\n                <div className=\"end\">True End</div>\n              </div>\n              <div className=\"replay-btn\">Play Again</div>\n            </div>\n            <div className=\"game-history\">\n              <div className=\"his-cover-container\"></div>\n              <div className=\"story-meta\">\n                <div className=\"name\">The Child</div>\n                <div className=\"desc\">\n                  Children in your village do not go to school, for most of…\n                </div>\n              </div>\n              <div className=\"time-meta\">\n                <div className=\"time\">11:30 AM</div>\n                <div className=\"date\">12 Dec 2022</div>\n              </div>\n              <div className=\"perf-meta\">\n                <div className=\"points\">373 pts</div>\n                <div className=\"end\">True End</div>\n              </div>\n              <div className=\"replay-btn\">Play Again</div>\n            </div>\n          </div> */}\n        </div>\n        {records.length != 0 && (\n          <div\n            className=\"view-all-btn\"\n            onClick={() => navigate(\"/user/history\")}\n          >\n            View More <img src={arrowIco} />\n          </div>\n        )}\n        <div className=\"bg-overlay\" />\n      </section>\n    </>\n  );\n}\nexport default UserHome;\n","/Users/celia/Projects/Merakey/client/src/components/utilities/logInUser.js",["341","342","343","344","345","346","347","348"],[],"/Users/celia/Projects/Merakey/client/src/components/utilities/loginStatus.js",[],[],"/Users/celia/Projects/Merakey/client/src/components/user/secondSide.js",["349","350","351","352","353","354","355","356","357","358","359","360"],[],"import IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport SideMenu from \"./sideMenu\";\nimport { useNavigate } from \"react-router-dom\";\n\n// icons\nimport opMail from \"./icons/op-mail.svg\";\nimport opSet from \"./icons/op-settings.svg\";\nimport opLogOut from \"./icons/op-log-out.svg\";\nimport infoUser from \"./icons/info-user.svg\";\nimport infoHash from \"./icons/info-hash.svg\";\nimport infoMail from \"./icons/info-mail.svg\";\n\nfunction UnChangedSide() {\n  const navigate = useNavigate();\n\n  const [status, setStatus] = React.useState(\"offline\");\n  const [name, setName] = React.useState(\"\");\n  const [avatar, setAvatar] = React.useState(\n    \"https://cdn.jsdelivr.net/gh/liangchuxin/blog-imgs/img/202209210118002.png\"\n  );\n  const getUser = async (userId) => {\n    await fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setAvatar(data.avatar);\n        setName(data.displayName);\n        setStatus(data.status);\n      });\n  };\n  React.useEffect(() => {\n    getUser(id);\n  }, []);\n  if (getCurrentUser) {\n    // console.log(getCurrentUser);\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n  }\n  return (\n    <>\n      <div\n        onClick={() => navigate(\"/user/settings\")}\n        className={`avatar-container ${status}`}\n      >\n        <div className=\"avatar-overlay\">\n          EDIT\n          <br />\n          PROFILE\n        </div>\n        {/* <span className={`user-status ${status}`} /> */}\n        <img src={avatar} />\n      </div>\n      <div className=\"user-name\">\n        @{name}\n        <span className={`user-status ${status}`} />\n      </div>\n      <div className=\"operations\">\n        <div className=\"op-btn\">\n          <img src={opMail} />\n        </div>\n        <div className=\"op-btn\" onClick={() => navigate(\"/user/settings\")}>\n          <img src={opSet} />\n        </div>\n        <div className=\"op-btn\" title=\"log out\" onClick={() => logout()}>\n          <img src={opLogOut} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction SecondSide() {\n  var username = getCurrentUser.username;\n  var email = getCurrentUser.email;\n  if (getCurrentUser) {\n    // console.log(getCurrentUser);\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n  }\n  const unchanged = React.useMemo(() => <UnChangedSide />, []);\n  return (\n    <aside>\n      <div className=\"user-sidebar\">\n        {unchanged}\n        <div className=\"user-info\">\n          <div className=\"divider top\" />\n          <div className=\"account\">\n            <img src={infoUser} />\n            <span>{username.toLowerCase()}</span>\n          </div>\n          <div className=\"uid\">\n            <img src={infoHash} />\n            <span>{id.toString().padStart(7, \"0\")}</span>\n          </div>\n          <div className=\"mail\">\n            <img src={infoMail} />\n            <span>{email}</span>\n          </div>\n          <div className=\"badges\">\n            {roles.map((role) => (\n              <div className={`badge ${role}`} title={role}>\n                <span className=\"color-container\"></span>\n                <span>{role.charAt(0).toUpperCase() + role.slice(1)}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"divider bottom\" />\n        </div>\n        <SideMenu />\n      </div>\n    </aside>\n  );\n}\nexport default SecondSide;\n","/Users/celia/Projects/Merakey/client/src/components/user/pastProblems.js",["361","362","363","364","365","366","367","368","369","370","371","372","373","374"],[],"import SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport { useNavigate } from \"react-router-dom\";\nimport fileIco from \"../../images/file-text.svg\";\n\nfunction PastProblems() {\n  const navigate = useNavigate();\n  const [tab, setTab] = React.useState(\"all\");\n  const [comments, setComments] = React.useState([]);\n  const getComments = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setComments(data.comments);\n      });\n  };\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  React.useEffect(() => {\n    getComments(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  const formatTime = (t) => {\n    let time = new Date(t);\n    var hr = time.getHours();\n    var min = time.getMinutes();\n    var sc = time.getSeconds();\n    return (\n      <>\n        {time.toISOString().split(\"T\")[0]}&nbsp;&nbsp;{hr}:{min}:{sc}\n      </>\n    );\n  };\n  function Row({ width, name, arrow = false }) {\n    return (\n      <div colSpan=\"1\" style={{ flex: `${width} 0 auto`, width: `${width}px` }}>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"overflow-hidden text-ellipsis\">{name}</div>\n        </div>\n      </div>\n    );\n  }\n  function ArrowIco() {\n    return (\n      <span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"1em\"\n          height=\"1em\"\n          fill=\"currentColor\"\n        >\n          <path d=\"M18.695 9.378L12.83 3.769a1.137 1.137 0 00-.06-.054c-.489-.404-1.249-.377-1.7.06L5.303 9.381a.51.51 0 00-.16.366c0 .297.27.539.602.539h12.512a.64.64 0 00.411-.146.501.501 0 00.028-.762zM12.77 20.285c.021-.017.042-.035.062-.054l5.863-5.609a.5.5 0 00-.028-.762.64.64 0 00-.41-.146H5.743c-.332 0-.601.242-.601.54a.51.51 0 00.16.365l5.769 5.606c.45.437 1.21.464 1.698.06z\"></path>\n        </svg>\n      </span>\n    );\n  }\n  const wrongQs = [\n    {\n      qs: \"What is the gradient of y = x?\",\n      wrong: \"3\",\n      correct: \"1\",\n      exp: \", gradient is the number before 'x'\",\n      freq: \"15\",\n      topicId: \"C1\",\n      topic: \"Number\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Work out: 3 + 18 ÷ 3 – 2\",\n      wrong: \"24\",\n      correct: \"22.5\",\n      exp: \"\",\n      freq: \"2\",\n      topicId: \"C1\",\n      topic: \"Number\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Factorise 6p^3 + 2pq\",\n      wrong: \"54\",\n      correct: \"2p(3p^2+q)\",\n      exp: \"\",\n      freq: \"1\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Write down the smallest number which is a multiple of both 25 and 15.\",\n      wrong: \"5\",\n      correct: \"75\",\n      exp: \"\",\n      freq: \"1\",\n      topicId: \"C1\",\n      topic: \"Number\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Simplify: 3a^2 x 8a^4\",\n      subject: \"Maths\",\n      correct: \"24a^6\",\n      wrong: \"24\",\n      freq: \"1\",\n      exp: \", multiply the coefficients and add the powers.\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n    },\n    {\n      qs: \"The area of a semi-circle is 119.2 cm^2. Calculate the radius of the circle in 2 digital places.\",\n      subject: \"Maths\",\n      correct: \"8.71\",\n      wrong: \"24\",\n      freq: \"5\",\n      exp: \", A=πr^2/2, 119x2/π=75.88507, √75.88507=8.71\",\n      topicId: \"C7\",\n      topic: \"Geometry\",\n    },\n    {\n      qs: \"The length of a rectangle is 5 cm, the width is 10 cm. Both measurements are to the nearest cm. (a) Write down the upper bound for the length of the rectangle; (b) Write down the lower bound for the width of the rectangle. (without units as decimals)\",\n      subject: \"Maths\",\n      correct: \"5.5, 9.5\",\n      wrong: \"6\",\n      freq: \"1\",\n      exp: \"\",\n      topicId: \"C9\",\n      topic: \"Mensuration\",\n    },\n    {\n      qs: \"A girl travels 3 miles to visit her friend, completing the journey in 1 hour. She finds her friend is not at home, and immediately makes the return journey at 2 miles per hour. Calculate how long the return journey took in hours.\",\n      subject: \"Maths\",\n      wrong: \"3\",\n      correct: \"1.5\",\n      exp: \", 3 / 2 = 1.5 hours\",\n      freq: \"1\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n    },\n    {\n      qs: \"Simplify completely 5(3x-y)-7(8x-5y)\",\n      subject: \"Maths\",\n      correct: \"-41x+30y\",\n      wrong: \"x+y\",\n      freq: \"10\",\n      exp: \", =15x-5y-56x+35y, =-41x+30y\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n    },\n    {\n      qs: \"What is the gradient of y = x?\",\n      wrong: \"3\",\n      correct: \"1\",\n      exp: \", gradient is the number before 'x'\",\n      freq: \"15\",\n      topicId: \"C1\",\n      topic: \"Number\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Work out: 3 + 18 ÷ 3 – 2\",\n      wrong: \"24\",\n      correct: \"22.5\",\n      exp: \"\",\n      freq: \"2\",\n      topicId: \"C1\",\n      topic: \"Number\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Factorise 6p^3 + 2pq\",\n      wrong: \"54\",\n      correct: \"2p(3p^2+q)\",\n      exp: \"\",\n      freq: \"1\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Write down the smallest number which is a multiple of both 25 and 15.\",\n      wrong: \"5\",\n      correct: \"75\",\n      exp: \"\",\n      freq: \"1\",\n      topicId: \"C1\",\n      topic: \"Number\",\n      subject: \"Maths\",\n    },\n    {\n      qs: \"Simplify: 3a^2 x 8a^4\",\n      subject: \"Maths\",\n      correct: \"24a^6\",\n      wrong: \"24\",\n      freq: \"1\",\n      exp: \", multiply the coefficients and add the powers.\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n    },\n    {\n      qs: \"The area of a semi-circle is 119.2 cm^2. Calculate the radius of the circle in 2 digital places.\",\n      subject: \"Maths\",\n      correct: \"8.71\",\n      wrong: \"24\",\n      freq: \"5\",\n      exp: \", A=πr^2/2, 119x2/π=75.88507, √75.88507=8.71\",\n      topicId: \"C7\",\n      topic: \"Geometry\",\n    },\n    {\n      qs: \"The length of a rectangle is 5 cm, the width is 10 cm. Both measurements are to the nearest cm. (a) Write down the upper bound for the length of the rectangle; (b) Write down the lower bound for the width of the rectangle. (without units as decimals)\",\n      subject: \"Maths\",\n      correct: \"5.5, 9.5\",\n      wrong: \"6\",\n      freq: \"1\",\n      exp: \"\",\n      topicId: \"C9\",\n      topic: \"Mensuration\",\n    },\n    {\n      qs: \"A girl travels 3 miles to visit her friend, completing the journey in 1 hour. She finds her friend is not at home, and immediately makes the return journey at 2 miles per hour. Calculate how long the return journey took in hours.\",\n      subject: \"Maths\",\n      wrong: \"3\",\n      correct: \"1.5\",\n      exp: \", 3 / 2 = 1.5 hours\",\n      freq: \"1\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n    },\n    {\n      qs: \"Simplify completely 5(3x-y)-7(8x-5y)\",\n      subject: \"Maths\",\n      correct: \"-41x+30y\",\n      wrong: \"x+y\",\n      freq: \"10\",\n      exp: \", =15x-5y-56x+35y, =-41x+30y\",\n      topicId: \"C3\",\n      topic: \"Algebra and graphs\",\n    },\n  ];\n\n  return (\n    <>\n      <SecondSide />\n      <section\n        className=\"user-main past-problems\"\n        style={{ margin: `0 -30px 0 240px` }}\n      >\n        <div>\n          <h2>\n            <img src={fileIco} />\n            <span>Past Problems</span>\n          </h2>\n          <div>\n            <ul className=\"tabs\">\n              <li\n                onClick={() => setTab(\"all\")}\n                class={tab == \"all\" && `active`}\n              >\n                All\n              </li>\n              <li\n                onClick={() => setTab(\"maths\")}\n                class={tab == \"maths\" && `active`}\n              >\n                Maths\n              </li>\n              <li\n                onClick={() => setTab(\"physics\")}\n                class={tab == \"physics\" && `active`}\n              >\n                Physics\n              </li>\n            </ul>\n          </div>\n          <div className=\"inline-block\">\n            <div>\n              <div className=\"title-row\">\n                <Row width=\"225\" name=\"Questions\" />\n                <Row width=\"100\" name=\"Your Ans\" />\n                <Row width=\"250\" name=\"Solution\" />\n                <div\n                  colSpan=\"1\"\n                  style={{\n                    flex: `100 0 auto`,\n                    width: `100px`,\n                    cursor: `pointer`,\n                  }}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"overflow-hidden text-ellipsis\">Freq</div>\n                    <ArrowIco />\n                  </div>\n                </div>\n                <Row width=\"90\" name=\"Topic\" />\n                <Row width=\"90\" name=\"Subject\" />\n              </div>\n              {wrongQs.map((wrongQ) => (\n                <div className=\"row\">\n                  <Row width=\"225\" name={wrongQ.qs} />\n                  <Row width=\"100\" name={wrongQ.wrong} />\n                  <Row width=\"250\" name={wrongQ.correct + wrongQ.exp} />\n                  <Row width=\"100\" name={wrongQ.freq} />\n                  <Row width=\"90\" name={wrongQ.topicId + \" \" + wrongQ.topic} />\n                  <Row width=\"90\" name={wrongQ.subject} />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-overlay\" />\n      </section>\n    </>\n  );\n}\nexport default PastProblems;\n","/Users/celia/Projects/Merakey/client/src/components/user/userComments.js",["375","376","377","378","379","380","381","382","383"],[],"import SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport \"./styles/userComments.scss\";\nimport { useNavigate } from \"react-router-dom\";\n// icons\nimport messageIco from \"./icons/message-square.svg\";\n\nfunction UserComments() {\n  const navigate = useNavigate();\n  const [comments, setComments] = React.useState([]);\n  const getComments = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setComments(data.comments);\n      });\n  };\n  if (getCurrentUser) {\n    // console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n  }\n  React.useEffect(() => {\n    getComments(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  const formatTime = (t) => {\n    let time = new Date(t);\n    var hr = time.getHours();\n    var min = time.getMinutes();\n    var sc = time.getSeconds();\n    return (\n      <>\n        {time.toISOString().split(\"T\")[0]}&nbsp;&nbsp;{hr}:{min}:{sc}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <SecondSide />\n      <section class=\"user-main comments\" style={{ margin: `0 -30px 0 240px` }}>\n        <div>\n          <h2>\n            <img src={messageIco} />\n            <span>Comment Management</span>\n          </h2>\n          {comments.length != 0 ? (\n            <table>\n              <tr style={{ backgroundColor: `#4b494921`, fontWeight: `900` }}>\n                <td>id</td>\n                <td style={{ width: `130px` }}>Parent id</td>\n                <td style={{ width: `450px` }}>Content</td>\n                <td>Game</td>\n                <td style={{ width: `200px` }}>Date</td>\n                <td style={{ width: `100px` }}>Actions</td>\n              </tr>\n              {comments.map((comment) => (\n                <tr\n                  onClick={() => navigate(`/games/${comment.gameId}`)}\n                  style={{ cursor: `pointer` }}\n                >\n                  <td>{comment.id}</td>\n                  <td>{comment.parentId !== null && comment.parentId}</td>\n                  <td>{comment.text}</td>\n                  <td>{comment.gameId}</td>\n                  <td>{formatTime(Date.parse(comment.createdAt))}</td>\n                  <td>View</td>\n                </tr>\n              ))}\n            </table>\n          ) : (\n            <div\n              style={{\n                color: `#626262`,\n                textAlign: `left`,\n                fontFamily: `poppins`,\n                marginTop: `35px`,\n              }}\n            >\n              You do not have any comments!\n            </div>\n          )}\n        </div>\n        <div className=\"bg-overlay\" />\n      </section>\n    </>\n  );\n}\nexport default UserComments;\n","/Users/celia/Projects/Merakey/client/src/components/user/addStory.js",["384","385","386","387","388","389","390","391","392","393","394"],[],"import IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport SecondSide from \"./secondSide\";\nimport axios from \"axios\";\nimport React, { useEffect, useRef } from \"react\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/addStory.scss\";\n\nfunction AddStory() {\n  function RecommendedTag({ tagName }) {\n    var tagBox = document.getElementById(\"game-tags\");\n    const addTag = (tagName) => {\n      var tagBox = document.getElementById(\"game-tags\");\n      tagBox.value += `${tagName}, `;\n    };\n    return <span onClick={() => addTag(tagName)}>{tagName}</span>;\n  }\n  const addGame = (game) => {\n    axios\n      .post(\"http://localhost:8080/api/games/\", game)\n      .then((response) => {\n        console.log(response);\n        toast.success(\"Game is created successfully\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          onClose: () =>\n            (window.location.href = \"http://localhost:8000/user/games\"),\n        });\n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  };\n\n  function CheckImage(url, fieldName) {\n    return new Promise((resolve, reject) => {\n      var image = new Image();\n      image.onload = function () {\n        if (this.width > 0) {\n          // console.log(\"image exists\");\n          resolve(true);\n        }\n      };\n      image.onerror = function () {\n        // console.log(\"image doesn't exist\");\n        toast.error(fieldName + \" URL is invalid!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n        resolve(false);\n      };\n      image.src = url;\n    });\n  }\n  const [type, setType] = React.useState(null);\n  const [jsonStatus, setJsonStatus] = React.useState(null);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  const [playTime, setPlayTime] = React.useState(null);\n  const submitJSON = () => {\n    var jsonText = document.getElementById(\"jsonText\").value;\n    try {\n      var parsedJSON = eval(\"(\" + jsonText + \")\");\n      setPlayTime(Object.keys(parsedJSON).length * 10);\n      setJsonStatus(true);\n    } catch (SyntaxError) {\n      toast.error(\"The JSON submitted is invalid!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      setJsonStatus(false);\n      return false;\n    }\n  };\n  const submitGame = async (published) => {\n    if (jsonStatus) {\n      var title = document.getElementById(\"game-title\").value;\n      if (title) {\n        var coverHome = document.getElementById(\"home-cover\").value;\n        CheckImage(coverHome, \"Home cover\").then(async (exists) => {\n          if (exists) {\n            console.log(\"success\");\n            var coverWide = document.getElementById(\"wide-cover\").value;\n            CheckImage(coverWide, \"Wide cover\").then(async (exists) => {\n              if (exists) {\n                if (!type) {\n                  toast.error(\"Type of game not chosen!\", {\n                    position: toast.POSITION.BOTTOM_RIGHT,\n                  });\n                }\n                if (type == \"other\") {\n                  if (!document.getElementById(\"source-url\").value) {\n                    toast.error(\"Source not inputted!\", {\n                      position: toast.POSITION.BOTTOM_RIGHT,\n                    });\n                  }\n                }\n                var tags = document.getElementById(\"game-tags\").value;\n                var jsonText = document.getElementById(\"jsonText\").value;\n                var parsedJSON = eval(\"(\" + jsonText + \")\");\n                var description =\n                  document.getElementById(\"source-url\").value +\n                  \"\\n-\\n\" +\n                  document.getElementById(\"game-desc\").value;\n                var game = {\n                  name: title,\n                  coverR: coverHome,\n                  coverW: coverWide,\n                  published: published,\n                  tags: tags,\n                  description: description,\n                  plot: JSON.stringify(parsedJSON),\n                  authorId: id,\n                };\n                console.log(game);\n                console.log(parsedJSON);\n                addGame(game);\n              }\n            });\n          }\n        });\n      } else {\n        toast.error(\"Please input a title!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n      }\n    } else {\n      toast.error(\"Valid JSON not submitted!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n    }\n  };\n\n  const secToMin = (sec) => {\n    return Math.round((sec / 60) * 10) / 10;\n  };\n  const clickTag = (e) => {};\n  return (\n    <>\n      <SecondSide />\n      <section class=\"user-main\">\n        <div className=\"addStory\">\n          <ToastContainer autoClose={1000} theme=\"dark\" transition={Slide} />\n          <h2>\n            <img />\n            Add a Game\n          </h2>\n          <textarea\n            id=\"jsonText\"\n            placeholder=\"Please input json…\"\n            rows=\"15\"\n            spellcheck=\"false\"\n          ></textarea>\n          <div className=\"submit-container\">\n            <div className=\"submit-btn\" onClick={() => submitJSON()}>\n              Submit JSON\n            </div>\n            <p className=\"time-message\">\n              Estimated maximum play time:{\" \"}\n              {playTime !== null ? `${secToMin(playTime)} minutes` : `N/A`}\n            </p>\n          </div>\n          <div className=\"game-attributes\">\n            <h3>Game Settings</h3>\n            <div className=\"attribute-single title-set\">\n              <div>\n                <div className=\"h4-set\">\n                  <h4>Title*</h4>\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    id=\"game-title\"\n                    className=\"setting-field\"\n                    placeholder=\"Please input the name of the game…\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"attribute-single cover-set\">\n              <div>\n                <div className=\"h4-set\">\n                  <h4>Cover*</h4>\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    id=\"home-cover\"\n                    className=\"setting-field\"\n                    placeholder=\"Please input url for game cover (for homepage)…\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"attribute-single cover-set\">\n              <div>\n                <div className=\"h4-set\">\n                  <h4>Wide Cover</h4>\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    id=\"wide-cover\"\n                    className=\"setting-field\"\n                    placeholder=\"Please input url for game cover (for details page)…\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"attribute-single\">\n              <div>\n                <div className=\"h4-set\">\n                  <h4>Type*</h4>\n                </div>\n                <div className=\"input-container\">\n                  <select\n                    id=\"type\"\n                    name=\"status\"\n                    onChange={() =>\n                      setType(document.getElementById(\"type\").value)\n                    }\n                  >\n                    <option value=\"none\">== Choose Type ==</option>\n                    <option value=\"self\">{`🙋 Self-made`}</option>\n                    <option value=\"other\">{`🔗 Other sources`}</option>\n                  </select>\n                  {type == \"other\" && (\n                    <input\n                      id=\"source-url\"\n                      className=\"setting-field\"\n                      placeholder=\"Please input url for the original source of the game\"\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"attribute-single tags-set\">\n              <div>\n                <div className=\"h4-set\">\n                  <h4>Tags</h4>\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    className=\"setting-field\"\n                    id=\"game-tags\"\n                    placeholder=\"Please input tags for game (separated with English comma)\"\n                  />\n                </div>\n              </div>\n              <div>\n                <p>\n                  Recommended tags: <RecommendedTag tagName=\"humor\" />\n                  <RecommendedTag tagName=\"horror\" />\n                  <RecommendedTag tagName=\"romance\" />\n                  <RecommendedTag tagName=\"fantasy\" />\n                  <RecommendedTag tagName=\"random\" />\n                </p>\n              </div>\n            </div>\n            <div className=\"attribute-single desc-set\">\n              <div>\n                <div className=\"h4-set\">\n                  <h4>Description</h4>\n                </div>\n                <div className=\"input-container\">\n                  <textarea\n                    id=\"game-desc\"\n                    rows=\"8\"\n                    className=\"setting-field\"\n                    placeholder=\"This will be the best game on Merakey ever…\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"btn-container\">\n            <div class=\"submit-btn\" onClick={() => submitGame(false)}>\n              Save as Draft\n            </div>\n            {roles.includes(\"moderator\") ? (\n              <div\n                class=\"submit-btn submit-game\"\n                onClick={() => submitGame(true)}\n              >\n                Submit Game Now\n              </div>\n            ) : roles.includes(\"admin\") ? (\n              <div\n                class=\"submit-btn submit-game\"\n                onClick={() => submitGame(true)}\n              >\n                Submit Game Now\n              </div>\n            ) : (\n              <div class=\"submit-btn submit-game\">Submit Game for Review</div>\n            )}\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\nexport default AddStory;\n","/Users/celia/Projects/Merakey/client/src/components/user/gameHistory.js",["395","396","397","398","399","400","401","402","403","404","405","406","407","408","409"],[],"import SecondSide from \"./secondSide\";\nimport h2Clock from \"./icons/h2-clock.svg\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// icons\nimport refreshIco from \"./icons/refresh-cw.svg\";\n\nfunction GameHistory() {\n  const navigate = useNavigate();\n  const [records, setRecords] = React.useState([]);\n  const [recordNum, setRecordNum] = React.useState(5);\n\n  function GetGame(id, field) {\n    const response = fetch(`http://localhost:8080/api/games/meta/${id}`)\n      .then((res) => {\n        if (res.status === 404) {\n          return {\n            name: \"Unavailable\",\n            description: \"N/A\",\n            coverR:\n              \"https://m.media-amazon.com/images/I/11f6LubgRmL._SY498_BO1,204,203,200_.jpg\",\n            createdAt: \"0000-00-00T03:05:06.000Z\",\n            playTime: 180,\n          };\n        }\n        return res.json();\n      })\n      .then((data) => {\n        // console.log(\"data of user \" + uid + \": \" + JSON.stringify(data.avatar));\n        switch (field) {\n          case \"cover\":\n            return JSON.stringify(data.coverR);\n          case \"name\":\n            return data.name;\n          case \"desc\":\n            return data.description;\n        }\n      });\n    return response;\n  }\n  const convertEnd = (end) => {\n    switch (end) {\n      case \"not done\":\n        return end.charAt(0).toUpperCase() + end.slice(1);\n      case \"happy\":\n        return \"Happy End\";\n      case \"bad\":\n        return \"Bad End\";\n      case \"true\":\n        return \"True End\";\n      default:\n        return \"undentified\";\n    }\n  };\n\n  const getDate = (d, type) => {\n    // sqlDate = Date.parse(sqlDate);\n    let jsDate = new Date(d);\n    var months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    var month = months[jsDate.getMonth()];\n    var hr = jsDate.getHours();\n    var min = jsDate.getMinutes();\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n    var ampm = \"AM\";\n    if (hr > 12) {\n      hr -= 12;\n      ampm = \"PM\";\n    }\n    var date = jsDate.getDate();\n    var year = jsDate.getFullYear();\n    if (type == \"date\") {\n      return `${date} ${month} ${year}`;\n    } else if (type == \"time\") {\n      return `${hr}:${min} ${ampm}`;\n    } else {\n      return \"Wrong type.\";\n    }\n  };\n\n  function GetTopic(topicId) {\n    const response = fetch(`http://localhost:8080/api/topics/id/${topicId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        return data.code + \" \" + data.name;\n      });\n    return response;\n  }\n  function GetSubject(topicId) {\n    const response = fetch(`http://localhost:8080/api/topics/id/${topicId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        return data.subject;\n      });\n    return response;\n  }\n\n  const getRecords = async (userId, num) => {\n    fetch(`http://localhost:8080/api/records/${userId}/${num}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then(async (data) => {\n        var records = data;\n        for (let index = 0; index < records.length; index++) {\n          var game = records[index].gameId;\n          records[index].cover = await GetGame(game, \"cover\");\n          records[index].gameName = await GetGame(game, \"name\");\n          records[index].gameDesc = await GetGame(game, \"desc\");\n          records[index].topicName = await GetTopic(data[index].topicId);\n          records[index].subject = await GetSubject(data[index].topicId);\n        }\n        setRecords(records);\n      });\n  };\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  React.useEffect(() => {\n    getRecords(id, recordNum);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <>\n      <SecondSide />\n      <section className=\"user-main\">\n        <h2>\n          <img src={h2Clock} />\n          <span>Game History</span>\n        </h2>\n        <div className=\"subject-block\">\n          <div className=\"history-wrapper\">\n            {records.length != 0 ? (\n              records.map((record) => (\n                <div className=\"game-history\">\n                  <div\n                    className=\"his-cover-container\"\n                    onClick={() => navigate(`/games/${record.gameId}`)}\n                  >\n                    <img src={JSON.parse(record.cover)} />\n                  </div>\n                  <div\n                    className=\"story-meta\"\n                    onClick={() => navigate(`/games/${record.gameId}`)}\n                  >\n                    <div className=\"name\">{record.gameName}</div>\n                    <div className=\"desc\">{record.gameDesc}</div>\n                  </div>\n                  <div className=\"qs-meta\">\n                    <div className=\"time\">{record.subject.toUpperCase()}</div>\n                    {/* <div className=\"date\">12 Dec 2022</div> */}\n                    <div className=\"date\">{record.topicName}</div>\n                  </div>\n                  <div className=\"time-meta\">\n                    <div className=\"time\">\n                      {getDate(Date.parse(record.createdAt), \"time\")}\n                    </div>\n                    {/* <div className=\"date\">12 Dec 2022</div> */}\n                    <div className=\"date\">\n                      {getDate(Date.parse(record.createdAt), \"date\")}\n                    </div>\n                  </div>\n                  <div className=\"perf-meta\">\n                    <div className=\"points\">{record.score} pts</div>\n                    {/* <div className=\"end\">True End</div> */}\n                    <div className=\"end\">{convertEnd(record.end)}</div>\n                  </div>\n                  <div\n                    className=\"replay-btn\"\n                    onClick={() => navigate(`/games/${record.gameId}`)}\n                  >\n                    Play Again\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div\n                style={{\n                  color: `#626262`,\n                  marginBottom: `29px`,\n                  fontFamily: `poppins`,\n                }}\n              >\n                Σ( ° △ °|||)︴ You don't have gaming records!\n              </div>\n            )}\n          </div>\n        </div>\n        {records.length != 0 && (\n          <div\n            className=\"view-all-btn\"\n            onClick={() => {\n              getRecords(id, recordNum + 5);\n              setRecordNum(recordNum + 5);\n            }}\n          >\n            View More\n            <img\n              style={{ height: `15px`, verticalAlign: `sub` }}\n              src={refreshIco}\n            />\n          </div>\n        )}\n        <div className=\"bg-overlay\" />\n      </section>\n    </>\n  );\n}\nexport default GameHistory;\n","/Users/celia/Projects/Merakey/client/src/components/user/sideMenu.js",["410","411","412","413","414","415","416","417","418","419"],[],"import { useNavigate } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\n\n// icons\nimport menuDash from \"./icons/menu-dash.svg\";\nimport menuDashActive from \"./icons/menu-dash-active.svg\";\nimport menuEdit from \"./icons/menu-edit-2.svg\";\nimport menuEditActive from \"./icons/menu-edit-2-active.svg\";\nimport menuCross from \"./icons/menu-crosshair.svg\";\nimport menuCrossActive from \"./icons/menu-crosshair-active.svg\";\nimport menuClock from \"./icons/menu-clock.svg\";\nimport menuClockActive from \"./icons/menu-clock-active.svg\";\nimport menuFile from \"./icons/menu-file-text.svg\";\nimport menuFileActive from \"./icons/menu-file-text-active.svg\";\nimport menuCmt from \"./icons/menu-message-square.svg\";\nimport menuCmtActive from \"./icons/menu-message-square-active.svg\";\n\nfunction SideMenu() {\n  const navigate = useNavigate();\n  const [sideState, setSideState] = React.useState(\"dash\");\n\n  const path = window.location.pathname;\n\n  return (\n    <div className=\"main-menu\">\n      <div\n        className={`menu-block ${path === \"/user\" ? `active` : ``} `}\n        onClick={() => {\n          navigate(\"/user\");\n        }}\n      >\n        <img src={path === \"/user\" ? menuDashActive : menuDash} />\n        <span>Dashboard</span>\n      </div>\n      <div\n        className={`menu-block ${\n          path === \"/user/past-problems\" ? `active` : ``\n        } `}\n        onClick={() => {\n          navigate(\"/user/past-problems\");\n        }}\n      >\n        <img src={path === \"/user/past-problems\" ? menuFileActive : menuFile} />\n        <span>Past Problems</span>\n      </div>\n      <div\n        className={`menu-block ${path === \"/user/comments\" ? `active` : ``} `}\n        onClick={() => {\n          navigate(\"/user/comments\");\n        }}\n      >\n        <img src={path === \"/user/comments\" ? menuCmtActive : menuCmt} />\n        <span>Comments</span>\n      </div>\n      <div\n        className={`menu-block ${path === \"/user/add\" ? `active` : ``} `}\n        onClick={() => {\n          navigate(\"/user/add\");\n        }}\n      >\n        <img src={path === \"/user/add\" ? menuEditActive : menuEdit} />\n        <span>Add a Game</span>\n      </div>\n      <div\n        className={`menu-block ${path === \"/user/games\" ? `active` : ``} `}\n        onClick={() => {\n          navigate(\"/user/games\");\n        }}\n      >\n        <img src={path === \"/user/games\" ? menuCrossActive : menuCross} />\n        <span>Your Games</span>\n      </div>\n      <div\n        className={`menu-block ${path === \"/user/history\" ? `active` : ``} `}\n        onClick={() => {\n          navigate(\"/user/history\");\n        }}\n      >\n        <img src={path === \"/user/history\" ? menuClockActive : menuClock} />\n        <span>Game History</span>\n      </div>\n    </div>\n  );\n}\nexport default SideMenu;\n","/Users/celia/Projects/Merakey/client/src/components/user/userSettings.js",["420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439"],[],"import SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/userSettings.scss\";\n// icons\nimport settingsIco from \"./icons/settings.svg\";\n\nfunction UserSettings() {\n  const [name, setName] = React.useState(\"\");\n  const [avatar, setAvatar] = React.useState(\"\");\n  const [status, setStatus] = React.useState(\"\");\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var uid = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n  }\n  const updateProfile = (avatar, name, status) => {\n    const data = { id: uid, avatar: avatar, displayName: name, status: status };\n    fetch(`http://localhost:8080/api/profiles`, {\n      method: \"PUT\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        // alert(\"Profile is updated successfully.\");\n        toast.success(\"Profile is updated successfully.\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          className: \"foo-bar\",\n          onClose: () => document.location.reload(),\n        });\n        // document.location.reload();\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  const getUser = (userId, field) => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setAvatar(data.avatar);\n        setName(data.displayName);\n        setStatus(data.status);\n      });\n  };\n\n  React.useEffect(() => {\n    getUser(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handleSubmit = () => {\n    var avatar = document.getElementById(\"avatar\").value;\n    var name = document.getElementById(\"name\").value;\n    var status = document.getElementById(\"status\").value;\n    if (validate(avatar, name, status)) {\n      console.log(avatar, name, status);\n      updateProfile(avatar, name, status);\n    }\n  };\n  const validate = (avatar, name, status) => {\n    if (!existCheck(avatar, name, status)) {\n      toast.error(\"Fields cannot be empty!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return false;\n    } else if (!specialCharacterCheck(name)) {\n      toast.error(\"No special characters allowed.\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return false;\n    } else if (!lengthCheck(name)) {\n      toast.error(\"Name is too long!\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const existCheck = (name, avatar, status) => {\n    if (name == \"\" || avatar == \"\" || status == \"none\") {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const specialCharacterCheck = (name) => {\n    var stringWithout = name.replace(\n      /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/,\n      \"\"\n    );\n    if (stringWithout != name) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const lengthCheck = (name) => {\n    if (name.length >= 25) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  return (\n    <>\n      <SecondSide />\n      <section className=\"user-main\" style={{ color: `white` }}>\n        <div className=\"main-container\">\n          <ToastContainer autoClose={2000} theme=\"dark\" transition={Slide} />\n          <h2>\n            <img src={settingsIco} />\n            <span>User Settings</span>\n          </h2>\n          <h3 style={{ margin: `50px auto 15px`, textAlign: `center` }}>\n            <span>User Profiles</span>\n          </h3>\n          <input\n            className=\"setting-field\"\n            id=\"name\"\n            placeholder=\"Please input display name…\"\n            defaultValue={name}\n          />\n          <input\n            className=\"setting-field\"\n            id=\"avatar\"\n            placeholder=\"Please input your avatar link…\"\n            defaultValue={avatar}\n          />\n          <br />\n          <select id=\"status\" name=\"status\">\n            <option value=\"none\">== Choose Status ==</option>\n            <option\n              selected={status == \"gaming\"}\n              value=\"gaming\"\n            >{`-> 🎮 Gaming`}</option>\n            <option\n              selected={status == \"offline\"}\n              value=\"offline\"\n            >{`-> 🤕 Offline`}</option>\n            <option\n              selected={status == \"secret\"}\n              value=\"secret\"\n            >{`-> 🤫 Secret`}</option>\n          </select>\n\n          <div className=\"submit-btn\" onClick={() => handleSubmit()}>\n            UPDATE SETTINGS\n          </div>\n        </div>\n        <div className=\"bg-overlay\" />\n      </section>\n    </>\n  );\n}\nexport default UserSettings;\n","/Users/celia/Projects/Merakey/client/src/components/utilities/addGame.js",[],[],"/Users/celia/Projects/Merakey/client/src/components/topicsPage.js",["440","441","442"],[],"import \"../styles/subjectsPage.scss\";\nimport \"../styles/topicsPage.scss\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nfunction TopicsPage() {\n  const { subject } = useParams();\n  const [topics, setTopics] = React.useState([]);\n  const getTopics = (subject) => {\n    fetch(`http://localhost:8080/api/topics/subject/${subject}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setTopics(data);\n      });\n  };\n  React.useEffect(() => {\n    getTopics(subject);\n  }, []);\n  return (\n    <>\n      <div className=\"topics-page-container\">\n        <div className=\"topics-container\" style={{ padding: `100px` }}>\n          {topics.map((topic) => (\n            <h2>\n              {topic.code}&nbsp;{topic.name}\n            </h2>\n          ))}\n        </div>\n      </div>\n      <div className=\"topics-overlay\" />\n    </>\n  );\n}\nexport default TopicsPage;\n","/Users/celia/Projects/Merakey/client/src/components/zzz/donaldDuck.js",[],[],"/Users/celia/Projects/Merakey/client/src/components/user/yourGames.js",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465"],[],"import SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport clockIco from \"../../images/clock.svg\";\nimport playIco from \"../../images/play-circle.svg\";\nimport dotsIco from \"../../images/vertical-dots.svg\";\nimport \"./styles/yourGames.scss\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\n\nfunction YourGames() {\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n    getGames(id);\n  }, []);\n  if (getCurrentUser) {\n    // console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    // console.log(roles);\n  }\n\n  function copyLink(text) {\n    navigator.clipboard\n      .writeText(text)\n      .then(() => console.log(\"Copied to clipboard\"))\n      .catch((error) => console.error(\"Error copying to clipboard: \", error));\n  }\n  const closeMenu = () => {\n    const cardMenu = document.getElementsByClassName(\"menu-placeholder\")[0];\n    ReactDOM.unmountComponentAtNode(cardMenu);\n    document.body.style.overflow = \"auto\";\n  };\n  const revertToDraft = (id) => {\n    const data = { published: false };\n    fetch(`http://localhost:8080/api/games/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        toast.success(\"Game reverted to draft.\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          onClose: () => document.location.reload(),\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n      });\n  };\n  const publishGame = (id) => {\n    const data = { published: true };\n    fetch(`http://localhost:8080/api/games/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n        toast.success(\"Your game is published!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n          onClose: () => document.location.reload(),\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        toast.error(error, {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n      });\n  };\n  const deleteGame = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this game?\")) {\n      // User clicked OK\n      // Execute your delete code here\n      fetch(`http://localhost:8080/api/games/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Success:\", data);\n          toast.success(\"Your game is deleted!\", {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            onClose: () => document.location.reload(),\n          });\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n          toast.error(error, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        });\n    }\n    closeMenu();\n  };\n  function useOutsideAlerter(ref) {\n    React.useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          closeMenu();\n        }\n      }\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  const [games, setGames] = React.useState([]);\n  const [tabState, setTabState] = React.useState(\"all\");\n  const getGames = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/games/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setGames(data.games);\n      });\n  };\n\n  const showMenu = (event, game) => {\n    var { clientX, clientY } = event;\n    console.log(\"X: \", clientX, \"Y: \", clientY);\n    document.body.style.overflow = \"hidden\";\n    if (clientY + 180 > window.innerHeight) {\n      clientY = window.innerHeight - 120 - 60;\n    }\n    if (clientX + 15 + 170 > window.innerWidth) {\n      clientX = window.innerWidth - 145;\n    }\n    console.log(\"Y: \", clientY);\n    ReactDOM.render(\n      <div\n        className=\"card-menu\"\n        ref={wrapperRef}\n        style={{ top: clientY + 15, left: clientX - 30 }}\n      >\n        <a\n          onClick={() => {\n            navigate(\"/user/edit/\" + game.id);\n            closeMenu();\n          }}\n        >\n          Edit game\n        </a>\n        {game.published && (\n          <a onClick={() => revertToDraft(game.id)}>Revert to draft</a>\n        )}\n        {!game.published && (\n          <a onClick={() => publishGame(game.id)}>Publish game</a>\n        )}\n        <a onClick={() => deleteGame(game.id)}>Delete game</a>\n        <a\n          onClick={() => {\n            copyLink(\"http://localhost:8000/games/\" + game.id);\n            closeMenu();\n            toast.success(\"URL is copied to clipboard!\", {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            });\n          }}\n        >\n          Share game\n        </a>\n      </div>,\n      document.getElementsByClassName(\"menu-placeholder\")[0]\n    );\n  };\n  function renderGameCard(game) {\n    return (\n      <div className=\"game-card\" key={game.id}>\n        <div className=\"cover\" onClick={() => navigate(`/games/${game.id}`)}>\n          <img src={game.coverR} />\n        </div>\n        <div className=\"card-descriptions\">\n          <div\n            className=\"menu-container\"\n            onClick={function (event) {\n              showMenu(event, game);\n            }}\n          >\n            <img src={dotsIco} />\n          </div>\n          <div className=\"menu-placeholder\"></div>\n          <span onClick={() => navigate(`/games/${game.id}`)}>\n            {!game.published && \"[draft] \"}\n            {game.name}\n          </span>\n\n          <div\n            className=\"meta-data\"\n            onClick={() => navigate(`/games/${game.id}`)}\n          >\n            <p className=\"views\">\n              <img src={playIco} />\n              {game.views}\n            </p>\n            <p className=\"time\">\n              <img src={clockIco} />\n              {game.createdAt.split(\"T\")[0]}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <>\n      <SecondSide />\n      <section className=\"user-main\">\n        <ToastContainer autoClose={2000} theme=\"dark\" transition={Slide} />\n        <div className=\"title-container\">\n          <h2>Your Games ({games.length})</h2>\n          <div className=\"menu\">\n            <ul>\n              <li\n                className={`tab ${tabState == \"all\" && \"active\"}`}\n                onClick={() => setTabState(\"all\")}\n              >\n                All\n              </li>\n              <li\n                className={`tab ${tabState == \"published\" && \"active\"}`}\n                onClick={() => setTabState(\"published\")}\n              >\n                Published\n              </li>\n              <li\n                className={`tab ${tabState == \"drafts\" && \"active\"}`}\n                onClick={() => setTabState(\"drafts\")}\n              >\n                Drafts\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"games-container\">\n          {games.map((game) =>\n            tabState == \"published\"\n              ? game.published == true && renderGameCard(game)\n              : tabState == \"drafts\"\n              ? game.published == false && renderGameCard(game)\n              : renderGameCard(game)\n          )}\n        </div>\n      </section>\n    </>\n  );\n}\nexport default YourGames;\n","/Users/celia/Projects/Merakey/client/src/components/zzz/plot.js",[],[],"/Users/celia/Projects/Merakey/client/src/components/user/editStory.js",["466","467","468","469","470","471","472","473","474","475","476","477","478","479"],[],"import IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport { useParams } from \"react-router-dom\";\nimport SecondSide from \"./secondSide\";\nimport axios from \"axios\";\nimport React, { useEffect, useRef } from \"react\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles/addStory.scss\";\n\nfunction EditStory() {\n  const [games, setGames] = React.useState([]);\n  const { gameid } = useParams();\n  const [type, setType] = React.useState(null);\n  const [playTime, setPlayTime] = React.useState(null);\n  const [jsonStatus, setJsonStatus] = React.useState(null);\n  const [published, setPublished] = React.useState(false);\n\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n    getGames(id);\n  }, []);\n  const getGames = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/games/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setGames(data.games);\n      });\n  };\n  console.log(games);\n  const authorized = () => {\n    for (var i = 0; i < games.length; i++) {\n      if (games[i].id == gameid) {\n        console.log(\"authorized\");\n        return true;\n      }\n    }\n    return false;\n  };\n  if (getCurrentUser) {\n    //   console.log(getCurrentUser);\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  if (authorized()) {\n    var dataFetched = false;\n    function RecommendedTag({ tagName }) {\n      var tagBox = document.getElementById(\"game-tags\");\n      const addTag = (tagName) => {\n        var tagBox = document.getElementById(\"game-tags\");\n        tagBox.value += `${tagName}, `;\n      };\n      return <span onClick={() => addTag(tagName)}>{tagName}</span>;\n    }\n    const updateGame = (game) => {\n      fetch(`http://localhost:8080/api/games/${gameid}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(game),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Success:\", data);\n          toast.success(\"Game is updated!\", {\n            position: toast.POSITION.BOTTOM_RIGHT,\n            onClose: () =>\n              (window.location.href = \"http://localhost:8000/user/games\"),\n          });\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n          toast.error(error, {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        });\n    };\n    const getData = () => {\n      fetch(`http://localhost:8080/api/games/${gameid}`)\n        .then((res) => res.json())\n        .then(async (data) => {\n          document.getElementById(\"game-title\").value = data.name;\n          document.getElementById(\"jsonText\").value = JSON.stringify(\n            eval(\"(\" + data.plot + \")\"),\n            null,\n            2\n          );\n          document.getElementById(\"wide-cover\").value = data.coverW;\n          document.getElementById(\"home-cover\").value = data.coverR;\n          document.getElementById(\"game-desc\").value = data.description;\n          document.getElementById(\"game-tags\").value = data.tags;\n          setPublished(data.published);\n        });\n    };\n    if (!dataFetched) {\n      getData();\n    }\n\n    function CheckImage(url, fieldName) {\n      return new Promise((resolve, reject) => {\n        var image = new Image();\n        image.onload = function () {\n          if (this.width > 0) {\n            // console.log(\"image exists\");\n            resolve(true);\n          }\n        };\n        image.onerror = function () {\n          // console.log(\"image doesn't exist\");\n          toast.error(fieldName + \" URL is invalid!\", {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n          resolve(false);\n        };\n        image.src = url;\n      });\n    }\n\n    const submitJSON = () => {\n      var jsonText = document.getElementById(\"jsonText\").value;\n      try {\n        var parsedJSON = eval(\"(\" + jsonText + \")\");\n        setPlayTime(Object.keys(parsedJSON).length * 10);\n        setJsonStatus(true);\n      } catch (SyntaxError) {\n        toast.error(\"The JSON submitted is invalid!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n        setJsonStatus(false);\n        return false;\n      }\n    };\n    const submitGame = async (published) => {\n      if (jsonStatus) {\n        var title = document.getElementById(\"game-title\").value;\n        if (title) {\n          var coverHome = document.getElementById(\"home-cover\").value;\n          CheckImage(coverHome, \"Home cover\").then(async (exists) => {\n            if (exists) {\n              console.log(\"success\");\n              var coverWide = document.getElementById(\"wide-cover\").value;\n              CheckImage(coverWide, \"Wide cover\").then(async (exists) => {\n                if (exists) {\n                  if (!type) {\n                    toast.error(\"Type of game not chosen!\", {\n                      position: toast.POSITION.BOTTOM_RIGHT,\n                    });\n                  }\n                  if (type == \"other\") {\n                    if (!document.getElementById(\"source-url\").value) {\n                      toast.error(\"Source not inputted!\", {\n                        position: toast.POSITION.BOTTOM_RIGHT,\n                      });\n                    }\n                  }\n                  var tags = document.getElementById(\"game-tags\").value;\n                  var jsonText = document.getElementById(\"jsonText\").value;\n                  var parsedJSON = eval(\"(\" + jsonText + \")\");\n                  var description =\n                    document.getElementById(\"source-url\").value +\n                    \"\\n-\\n\" +\n                    document.getElementById(\"game-desc\").value;\n                  var game = {\n                    name: title,\n                    coverR: coverHome,\n                    coverW: coverWide,\n                    published: published,\n                    tags: tags,\n                    description: description,\n                    plot: JSON.stringify(parsedJSON),\n                  };\n                  console.log(game);\n                  console.log(parsedJSON);\n                  updateGame(game);\n                }\n              });\n            }\n          });\n        } else {\n          toast.error(\"Please input a title!\", {\n            position: toast.POSITION.BOTTOM_RIGHT,\n          });\n        }\n      } else {\n        toast.error(\"Valid JSON not submitted!\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n      }\n    };\n\n    const secToMin = (sec) => {\n      return Math.round((sec / 60) * 10) / 10;\n    };\n    return (\n      <>\n        <SecondSide />\n        <section className=\"user-main\">\n          <div className=\"addStory\">\n            <ToastContainer autoClose={1000} theme=\"dark\" transition={Slide} />\n            <h2>\n              <img />\n              Edit Game\n            </h2>\n            <textarea\n              id=\"jsonText\"\n              placeholder=\"Please input json…\"\n              rows=\"15\"\n              spellCheck=\"false\"\n            ></textarea>\n            <div className=\"submit-container\">\n              <div className=\"submit-btn\" onClick={() => submitJSON()}>\n                Submit JSON\n              </div>\n              <p className=\"time-message\">\n                Estimated maximum play time:{\" \"}\n                {playTime !== null ? `${secToMin(playTime)} minutes` : `N/A`}\n              </p>\n            </div>\n            <div className=\"game-attributes\">\n              <h3>Game Settings</h3>\n              <div className=\"attribute-single title-set\">\n                <div>\n                  <div className=\"h4-set\">\n                    <h4>Title*</h4>\n                  </div>\n                  <div className=\"input-container\">\n                    <input\n                      id=\"game-title\"\n                      className=\"setting-field\"\n                      placeholder=\"Please input the name of the game…\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"attribute-single cover-set\">\n                <div>\n                  <div className=\"h4-set\">\n                    <h4>Cover*</h4>\n                  </div>\n                  <div className=\"input-container\">\n                    <input\n                      id=\"home-cover\"\n                      className=\"setting-field\"\n                      placeholder=\"Please input url for game cover (for homepage)…\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"attribute-single cover-set\">\n                <div>\n                  <div className=\"h4-set\">\n                    <h4>Wide Cover</h4>\n                  </div>\n                  <div className=\"input-container\">\n                    <input\n                      id=\"wide-cover\"\n                      className=\"setting-field\"\n                      placeholder=\"Please input url for game cover (for details page)…\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"attribute-single\">\n                <div>\n                  <div className=\"h4-set\">\n                    <h4>Type*</h4>\n                  </div>\n                  <div className=\"input-container\">\n                    <select\n                      id=\"type\"\n                      name=\"status\"\n                      onChange={() =>\n                        setType(document.getElementById(\"type\").value)\n                      }\n                    >\n                      <option value=\"none\">== Choose Type ==</option>\n                      <option value=\"self\">{`🙋 Self-made`}</option>\n                      <option value=\"other\">{`🔗 Other sources`}</option>\n                    </select>\n                    {type == \"other\" && (\n                      <input\n                        id=\"source-url\"\n                        className=\"setting-field\"\n                        placeholder=\"Please input url for the original source of the game\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"attribute-single tags-set\">\n                <div>\n                  <div className=\"h4-set\">\n                    <h4>Tags</h4>\n                  </div>\n                  <div className=\"input-container\">\n                    <input\n                      className=\"setting-field\"\n                      id=\"game-tags\"\n                      placeholder=\"Please input tags for game (separated with English comma)\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <p>\n                    Recommended tags: <RecommendedTag tagName=\"humor\" />\n                    <RecommendedTag tagName=\"horror\" />\n                    <RecommendedTag tagName=\"romance\" />\n                    <RecommendedTag tagName=\"fantasy\" />\n                    <RecommendedTag tagName=\"random\" />\n                  </p>\n                </div>\n              </div>\n              <div className=\"attribute-single desc-set\">\n                <div>\n                  <div className=\"h4-set\">\n                    <h4>Description</h4>\n                  </div>\n                  <div className=\"input-container\">\n                    <textarea\n                      id=\"game-desc\"\n                      rows=\"8\"\n                      className=\"setting-field\"\n                      placeholder=\"This will be the best game on Merakey ever…\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"btn-container\">\n              {console.log(published)}\n              {published && (\n                <>\n                  <div className=\"submit-btn\" onClick={() => submitGame(false)}>\n                    Revert to Draft\n                  </div>\n                  {roles.includes(\"moderator\") || roles.includes(\"admin\") ? (\n                    <div\n                      className=\"submit-btn submit-game\"\n                      onClick={() => submitGame(true)}\n                    >\n                      Update Game Now\n                    </div>\n                  ) : (\n                    <div\n                      className=\"submit-btn submit-game\"\n                      onClick={() => submitGame(true)}\n                    >\n                      Update After Review\n                    </div>\n                  )}\n                </>\n              )}\n              {!published && (\n                <>\n                  <div className=\"submit-btn\" onClick={() => submitGame(false)}>\n                    Save as Draft\n                  </div>\n                  {roles.includes(\"moderator\") || roles.includes(\"admin\") ? (\n                    <div\n                      className=\"submit-btn submit-game\"\n                      onClick={() => submitGame(true)}\n                    >\n                      Publish Game Now\n                    </div>\n                  ) : (\n                    <div\n                      className=\"submit-btn submit-game\"\n                      onClick={() => submitGame(true)}\n                    >\n                      Publish After Review\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  } else {\n    return <h2 style={{ color: `white` }}>Unauthorised access</h2>;\n  }\n}\nexport default EditStory;\n",{"ruleId":"480","severity":1,"message":"481","line":1,"column":17,"nodeType":"482","messageId":"483","endLine":1,"endColumn":25},{"ruleId":"480","severity":1,"message":"484","line":11,"column":10,"nodeType":"482","messageId":"483","endLine":11,"endColumn":19},{"ruleId":"480","severity":1,"message":"485","line":13,"column":8,"nodeType":"482","messageId":"483","endLine":13,"endColumn":12},{"ruleId":"480","severity":1,"message":"486","line":38,"column":9,"nodeType":"482","messageId":"483","endLine":38,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":39,"column":9,"nodeType":"482","messageId":"483","endLine":39,"endColumn":14},{"ruleId":"480","severity":1,"message":"488","line":40,"column":9,"nodeType":"482","messageId":"483","endLine":40,"endColumn":11},{"ruleId":"480","severity":1,"message":"489","line":6,"column":22,"nodeType":"482","messageId":"483","endLine":6,"endColumn":28},{"ruleId":"480","severity":1,"message":"490","line":8,"column":8,"nodeType":"482","messageId":"483","endLine":8,"endColumn":16},{"ruleId":"491","severity":1,"message":"492","line":45,"column":6,"nodeType":"493","endLine":45,"endColumn":8,"suggestions":"494"},{"ruleId":"480","severity":1,"message":"495","line":78,"column":11,"nodeType":"482","messageId":"483","endLine":78,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":84,"column":26,"nodeType":"498","messageId":"499","endLine":84,"endColumn":28},{"ruleId":"491","severity":1,"message":"500","line":102,"column":6,"nodeType":"493","endLine":102,"endColumn":17,"suggestions":"501"},{"ruleId":"480","severity":1,"message":"502","line":208,"column":9,"nodeType":"482","messageId":"483","endLine":208,"endColumn":22},{"ruleId":"480","severity":1,"message":"486","line":228,"column":11,"nodeType":"482","messageId":"483","endLine":228,"endColumn":19},{"ruleId":"480","severity":1,"message":"487","line":229,"column":9,"nodeType":"482","messageId":"483","endLine":229,"endColumn":14},{"ruleId":"496","severity":1,"message":"497","line":261,"column":31,"nodeType":"498","messageId":"499","endLine":261,"endColumn":33},{"ruleId":"496","severity":1,"message":"497","line":267,"column":38,"nodeType":"498","messageId":"499","endLine":267,"endColumn":40},{"ruleId":"496","severity":1,"message":"497","line":270,"column":63,"nodeType":"498","messageId":"499","endLine":270,"endColumn":65},{"ruleId":"496","severity":1,"message":"497","line":276,"column":38,"nodeType":"498","messageId":"499","endLine":276,"endColumn":40},{"ruleId":"496","severity":1,"message":"497","line":279,"column":50,"nodeType":"498","messageId":"499","endLine":279,"endColumn":52},{"ruleId":"496","severity":1,"message":"497","line":299,"column":31,"nodeType":"498","messageId":"499","endLine":299,"endColumn":33},{"ruleId":"496","severity":1,"message":"497","line":308,"column":38,"nodeType":"498","messageId":"499","endLine":308,"endColumn":40},{"ruleId":"496","severity":1,"message":"497","line":318,"column":38,"nodeType":"498","messageId":"499","endLine":318,"endColumn":40},{"ruleId":"496","severity":1,"message":"497","line":326,"column":38,"nodeType":"498","messageId":"499","endLine":326,"endColumn":40},{"ruleId":"496","severity":1,"message":"497","line":355,"column":13,"nodeType":"498","messageId":"499","endLine":355,"endColumn":15},{"ruleId":"503","severity":1,"message":"504","line":409,"column":7,"nodeType":"505","messageId":"506","endLine":422,"endColumn":8},{"ruleId":"480","severity":1,"message":"507","line":444,"column":9,"nodeType":"482","messageId":"483","endLine":444,"endColumn":19},{"ruleId":"508","severity":1,"message":"509","line":492,"column":27,"nodeType":"510","endLine":492,"endColumn":64},{"ruleId":"496","severity":1,"message":"497","line":538,"column":33,"nodeType":"498","messageId":"499","endLine":538,"endColumn":35},{"ruleId":"508","severity":1,"message":"509","line":560,"column":13,"nodeType":"510","endLine":560,"endColumn":35},{"ruleId":"511","severity":1,"message":"512","line":563,"column":40,"nodeType":"513","messageId":"514","endLine":563,"endColumn":42},{"ruleId":"496","severity":1,"message":"497","line":564,"column":33,"nodeType":"498","messageId":"499","endLine":564,"endColumn":35},{"ruleId":"480","severity":1,"message":"515","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":19},{"ruleId":"480","severity":1,"message":"484","line":5,"column":17,"nodeType":"482","messageId":"483","endLine":5,"endColumn":26},{"ruleId":"480","severity":1,"message":"516","line":5,"column":28,"nodeType":"482","messageId":"483","endLine":5,"endColumn":39},{"ruleId":"480","severity":1,"message":"517","line":5,"column":41,"nodeType":"482","messageId":"483","endLine":5,"endColumn":48},{"ruleId":"491","severity":1,"message":"518","line":79,"column":6,"nodeType":"493","endLine":79,"endColumn":8,"suggestions":"519"},{"ruleId":"480","severity":1,"message":"520","line":138,"column":7,"nodeType":"482","messageId":"483","endLine":138,"endColumn":14},{"ruleId":"496","severity":1,"message":"497","line":177,"column":30,"nodeType":"498","messageId":"499","endLine":177,"endColumn":32},{"ruleId":"508","severity":1,"message":"509","line":178,"column":27,"nodeType":"510","endLine":178,"endColumn":69},{"ruleId":"496","severity":1,"message":"497","line":180,"column":30,"nodeType":"498","messageId":"499","endLine":180,"endColumn":32},{"ruleId":"508","severity":1,"message":"509","line":181,"column":27,"nodeType":"510","endLine":181,"endColumn":71},{"ruleId":"496","severity":1,"message":"497","line":183,"column":30,"nodeType":"498","messageId":"499","endLine":183,"endColumn":32},{"ruleId":"508","severity":1,"message":"509","line":184,"column":27,"nodeType":"510","endLine":184,"endColumn":71},{"ruleId":"508","severity":1,"message":"509","line":234,"column":17,"nodeType":"510","endLine":234,"endColumn":37},{"ruleId":"508","severity":1,"message":"509","line":241,"column":9,"nodeType":"510","endLine":241,"endColumn":32},{"ruleId":"480","severity":1,"message":"484","line":5,"column":17,"nodeType":"482","messageId":"483","endLine":5,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":5,"column":28,"nodeType":"482","messageId":"483","endLine":5,"endColumn":34},{"ruleId":"480","severity":1,"message":"489","line":9,"column":22,"nodeType":"482","messageId":"483","endLine":9,"endColumn":28},{"ruleId":"480","severity":1,"message":"522","line":51,"column":10,"nodeType":"482","messageId":"483","endLine":51,"endColumn":17},{"ruleId":"480","severity":1,"message":"523","line":51,"column":19,"nodeType":"482","messageId":"483","endLine":51,"endColumn":29},{"ruleId":"503","severity":1,"message":"504","line":65,"column":9,"nodeType":"505","messageId":"506","endLine":73,"endColumn":10},{"ruleId":"480","severity":1,"message":"486","line":121,"column":9,"nodeType":"482","messageId":"483","endLine":121,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":122,"column":9,"nodeType":"482","messageId":"483","endLine":122,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":134,"column":11,"nodeType":"482","messageId":"526","endLine":134,"endColumn":16},{"ruleId":"480","severity":1,"message":"527","line":136,"column":9,"nodeType":"482","messageId":"483","endLine":136,"endColumn":13},{"ruleId":"480","severity":1,"message":"528","line":141,"column":9,"nodeType":"482","messageId":"483","endLine":141,"endColumn":15},{"ruleId":"496","severity":1,"message":"497","line":146,"column":15,"nodeType":"498","messageId":"499","endLine":146,"endColumn":17},{"ruleId":"508","severity":1,"message":"509","line":153,"column":15,"nodeType":"510","endLine":153,"endColumn":53},{"ruleId":"508","severity":1,"message":"509","line":195,"column":15,"nodeType":"510","endLine":195,"endColumn":53},{"ruleId":"491","severity":1,"message":"529","line":247,"column":6,"nodeType":"493","endLine":247,"endColumn":8,"suggestions":"530"},{"ruleId":"496","severity":1,"message":"497","line":252,"column":18,"nodeType":"498","messageId":"499","endLine":252,"endColumn":20},{"ruleId":"491","severity":1,"message":"531","line":308,"column":6,"nodeType":"493","endLine":308,"endColumn":13,"suggestions":"532"},{"ruleId":"496","severity":1,"message":"497","line":353,"column":17,"nodeType":"498","messageId":"499","endLine":353,"endColumn":19},{"ruleId":"508","severity":1,"message":"509","line":392,"column":11,"nodeType":"510","endLine":392,"endColumn":34},{"ruleId":"508","severity":1,"message":"509","line":408,"column":13,"nodeType":"510","endLine":408,"endColumn":35},{"ruleId":"508","severity":1,"message":"509","line":416,"column":13,"nodeType":"510","endLine":416,"endColumn":59},{"ruleId":"508","severity":1,"message":"509","line":423,"column":17,"nodeType":"510","endLine":423,"endColumn":37},{"ruleId":"496","severity":1,"message":"497","line":430,"column":44,"nodeType":"498","messageId":"499","endLine":430,"endColumn":46},{"ruleId":"496","severity":1,"message":"497","line":432,"column":31,"nodeType":"498","messageId":"499","endLine":432,"endColumn":33},{"ruleId":"496","severity":1,"message":"497","line":445,"column":55,"nodeType":"498","messageId":"499","endLine":445,"endColumn":57},{"ruleId":"496","severity":1,"message":"497","line":448,"column":57,"nodeType":"498","messageId":"499","endLine":448,"endColumn":59},{"ruleId":"508","severity":1,"message":"509","line":513,"column":11,"nodeType":"510","endLine":513,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":31,"column":15,"nodeType":"510","endLine":31,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":36,"column":17,"nodeType":"510","endLine":36,"endColumn":38},{"ruleId":"508","severity":1,"message":"509","line":51,"column":15,"nodeType":"510","endLine":51,"endColumn":39},{"ruleId":"508","severity":1,"message":"509","line":56,"column":17,"nodeType":"510","endLine":56,"endColumn":38},{"ruleId":"480","severity":1,"message":"533","line":8,"column":9,"nodeType":"482","messageId":"483","endLine":8,"endColumn":17},{"ruleId":"508","severity":1,"message":"509","line":50,"column":9,"nodeType":"510","endLine":50,"endColumn":83},{"ruleId":"480","severity":1,"message":"484","line":3,"column":17,"nodeType":"482","messageId":"483","endLine":3,"endColumn":26},{"ruleId":"480","severity":1,"message":"481","line":3,"column":28,"nodeType":"482","messageId":"483","endLine":3,"endColumn":36},{"ruleId":"480","severity":1,"message":"534","line":4,"column":23,"nodeType":"482","messageId":"483","endLine":4,"endColumn":34},{"ruleId":"480","severity":1,"message":"535","line":7,"column":22,"nodeType":"482","messageId":"483","endLine":7,"endColumn":28},{"ruleId":"480","severity":1,"message":"486","line":30,"column":9,"nodeType":"482","messageId":"483","endLine":30,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":31,"column":9,"nodeType":"482","messageId":"483","endLine":31,"endColumn":14},{"ruleId":"491","severity":1,"message":"536","line":56,"column":6,"nodeType":"493","endLine":56,"endColumn":8,"suggestions":"537"},{"ruleId":"508","severity":1,"message":"509","line":61,"column":11,"nodeType":"510","endLine":61,"endColumn":46},{"ruleId":"508","severity":1,"message":"509","line":72,"column":15,"nodeType":"510","endLine":72,"endColumn":50},{"ruleId":"538","severity":1,"message":"539","line":77,"column":19,"nodeType":"510","endLine":77,"endColumn":52},{"ruleId":"538","severity":1,"message":"539","line":80,"column":19,"nodeType":"510","endLine":80,"endColumn":57},{"ruleId":"538","severity":1,"message":"539","line":83,"column":19,"nodeType":"510","endLine":83,"endColumn":60},{"ruleId":"538","severity":1,"message":"540","line":86,"column":19,"nodeType":"510","endLine":91,"endColumn":20},{"ruleId":"538","severity":1,"message":"539","line":96,"column":19,"nodeType":"510","endLine":96,"endColumn":57},{"ruleId":"508","severity":1,"message":"509","line":97,"column":21,"nodeType":"510","endLine":97,"endColumn":44},{"ruleId":"538","severity":1,"message":"539","line":102,"column":21,"nodeType":"510","endLine":102,"endColumn":79},{"ruleId":"538","severity":1,"message":"539","line":110,"column":19,"nodeType":"510","endLine":110,"endColumn":56},{"ruleId":"508","severity":1,"message":"509","line":112,"column":23,"nodeType":"510","endLine":112,"endColumn":43},{"ruleId":"480","severity":1,"message":"541","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":13},{"ruleId":"480","severity":1,"message":"542","line":2,"column":10,"nodeType":"482","messageId":"483","endLine":2,"endColumn":24},{"ruleId":"480","severity":1,"message":"543","line":2,"column":33,"nodeType":"482","messageId":"483","endLine":2,"endColumn":38},{"ruleId":"511","severity":1,"message":"544","line":18,"column":25,"nodeType":"513","messageId":"545","endLine":18,"endColumn":27},{"ruleId":"496","severity":1,"message":"497","line":19,"column":25,"nodeType":"498","messageId":"499","endLine":19,"endColumn":27},{"ruleId":"496","severity":1,"message":"497","line":24,"column":22,"nodeType":"498","messageId":"499","endLine":24,"endColumn":24},{"ruleId":"511","severity":1,"message":"544","line":32,"column":32,"nodeType":"513","messageId":"545","endLine":32,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":33,"column":27,"nodeType":"498","messageId":"499","endLine":33,"endColumn":29},{"ruleId":"480","severity":1,"message":"546","line":58,"column":9,"nodeType":"482","messageId":"483","endLine":58,"endColumn":20},{"ruleId":"508","severity":1,"message":"509","line":89,"column":17,"nodeType":"510","endLine":89,"endColumn":64},{"ruleId":"491","severity":1,"message":"547","line":38,"column":6,"nodeType":"493","endLine":38,"endColumn":13,"suggestions":"548"},{"ruleId":"491","severity":1,"message":"549","line":49,"column":6,"nodeType":"493","endLine":49,"endColumn":12,"suggestions":"550"},{"ruleId":"508","severity":1,"message":"509","line":96,"column":13,"nodeType":"510","endLine":96,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":128,"column":13,"nodeType":"510","endLine":128,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":246,"column":13,"nodeType":"510","endLine":246,"endColumn":37},{"ruleId":"508","severity":1,"message":"509","line":255,"column":13,"nodeType":"510","endLine":255,"endColumn":39},{"ruleId":"511","severity":1,"message":"512","line":263,"column":29,"nodeType":"513","messageId":"514","endLine":263,"endColumn":31},{"ruleId":"508","severity":1,"message":"509","line":273,"column":21,"nodeType":"510","endLine":273,"endColumn":44},{"ruleId":"508","severity":1,"message":"509","line":279,"column":25,"nodeType":"510","endLine":279,"endColumn":46},{"ruleId":"508","severity":1,"message":"509","line":283,"column":25,"nodeType":"510","endLine":283,"endColumn":47},{"ruleId":"508","severity":1,"message":"509","line":289,"column":25,"nodeType":"510","endLine":289,"endColumn":46},{"ruleId":"480","severity":1,"message":"551","line":3,"column":23,"nodeType":"482","messageId":"483","endLine":3,"endColumn":31},{"ruleId":"480","severity":1,"message":"552","line":8,"column":8,"nodeType":"482","messageId":"483","endLine":8,"endColumn":18},{"ruleId":"480","severity":1,"message":"535","line":8,"column":22,"nodeType":"482","messageId":"483","endLine":8,"endColumn":28},{"ruleId":"480","severity":1,"message":"553","line":8,"column":30,"nodeType":"482","messageId":"483","endLine":8,"endColumn":44},{"ruleId":"480","severity":1,"message":"554","line":17,"column":10,"nodeType":"482","messageId":"483","endLine":17,"endColumn":17},{"ruleId":"480","severity":1,"message":"555","line":17,"column":19,"nodeType":"482","messageId":"483","endLine":17,"endColumn":29},{"ruleId":"496","severity":1,"message":"497","line":65,"column":14,"nodeType":"498","messageId":"499","endLine":65,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":65,"column":28,"nodeType":"498","messageId":"499","endLine":65,"endColumn":30},{"ruleId":"508","severity":1,"message":"509","line":99,"column":13,"nodeType":"510","endLine":99,"endColumn":35},{"ruleId":"496","severity":1,"message":"497","line":34,"column":15,"nodeType":"498","messageId":"499","endLine":34,"endColumn":17},{"ruleId":"496","severity":1,"message":"497","line":34,"column":29,"nodeType":"498","messageId":"499","endLine":34,"endColumn":31},{"ruleId":"496","severity":1,"message":"497","line":34,"column":43,"nodeType":"498","messageId":"499","endLine":34,"endColumn":45},{"ruleId":"496","severity":1,"message":"497","line":34,"column":58,"nodeType":"498","messageId":"499","endLine":34,"endColumn":60},{"ruleId":"496","severity":1,"message":"556","line":43,"column":14,"nodeType":"498","messageId":"499","endLine":43,"endColumn":16},{"ruleId":"508","severity":1,"message":"509","line":110,"column":17,"nodeType":"510","endLine":110,"endColumn":39},{"ruleId":"480","severity":1,"message":"557","line":1,"column":10,"nodeType":"482","messageId":"483","endLine":1,"endColumn":21},{"ruleId":"480","severity":1,"message":"541","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":13},{"ruleId":"480","severity":1,"message":"542","line":3,"column":10,"nodeType":"482","messageId":"483","endLine":3,"endColumn":24},{"ruleId":"480","severity":1,"message":"543","line":3,"column":33,"nodeType":"482","messageId":"483","endLine":3,"endColumn":38},{"ruleId":"480","severity":1,"message":"552","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":1,"column":22,"nodeType":"482","messageId":"483","endLine":1,"endColumn":28},{"ruleId":"480","severity":1,"message":"484","line":4,"column":17,"nodeType":"482","messageId":"483","endLine":4,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":4,"column":28,"nodeType":"482","messageId":"483","endLine":4,"endColumn":34},{"ruleId":"503","severity":1,"message":"504","line":79,"column":9,"nodeType":"505","messageId":"506","endLine":86,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":152,"column":14,"nodeType":"498","messageId":"499","endLine":152,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":154,"column":21,"nodeType":"498","messageId":"499","endLine":154,"endColumn":23},{"ruleId":"480","severity":1,"message":"486","line":184,"column":9,"nodeType":"482","messageId":"483","endLine":184,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":185,"column":9,"nodeType":"482","messageId":"483","endLine":185,"endColumn":14},{"ruleId":"491","severity":1,"message":"558","line":196,"column":6,"nodeType":"493","endLine":196,"endColumn":8,"suggestions":"559"},{"ruleId":"480","severity":1,"message":"560","line":202,"column":9,"nodeType":"482","messageId":"483","endLine":202,"endColumn":14},{"ruleId":"480","severity":1,"message":"561","line":203,"column":9,"nodeType":"482","messageId":"483","endLine":203,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":216,"column":15,"nodeType":"510","endLine":216,"endColumn":55},{"ruleId":"508","severity":1,"message":"509","line":219,"column":15,"nodeType":"510","endLine":219,"endColumn":54},{"ruleId":"508","severity":1,"message":"509","line":222,"column":15,"nodeType":"510","endLine":222,"endColumn":55},{"ruleId":"508","severity":1,"message":"509","line":225,"column":15,"nodeType":"510","endLine":225,"endColumn":54},{"ruleId":"508","severity":1,"message":"509","line":228,"column":15,"nodeType":"510","endLine":228,"endColumn":56},{"ruleId":"508","severity":1,"message":"509","line":231,"column":15,"nodeType":"510","endLine":231,"endColumn":55},{"ruleId":"508","severity":1,"message":"509","line":235,"column":13,"nodeType":"510","endLine":235,"endColumn":34},{"ruleId":"496","severity":1,"message":"556","line":239,"column":29,"nodeType":"498","messageId":"499","endLine":239,"endColumn":31},{"ruleId":"508","severity":1,"message":"509","line":246,"column":21,"nodeType":"510","endLine":246,"endColumn":59},{"ruleId":"496","severity":1,"message":"556","line":373,"column":25,"nodeType":"498","messageId":"499","endLine":373,"endColumn":27},{"ruleId":"508","severity":1,"message":"509","line":378,"column":23,"nodeType":"510","endLine":378,"endColumn":45},{"ruleId":"480","severity":1,"message":"557","line":1,"column":10,"nodeType":"482","messageId":"483","endLine":1,"endColumn":21},{"ruleId":"480","severity":1,"message":"541","line":2,"column":8,"nodeType":"482","messageId":"483","endLine":2,"endColumn":13},{"ruleId":"480","severity":1,"message":"562","line":4,"column":3,"nodeType":"482","messageId":"483","endLine":4,"endColumn":16},{"ruleId":"480","severity":1,"message":"563","line":5,"column":20,"nodeType":"482","messageId":"483","endLine":5,"endColumn":26},{"ruleId":"480","severity":1,"message":"564","line":6,"column":3,"nodeType":"482","messageId":"483","endLine":6,"endColumn":11},{"ruleId":"480","severity":1,"message":"565","line":7,"column":3,"nodeType":"482","messageId":"483","endLine":7,"endColumn":9},{"ruleId":"480","severity":1,"message":"566","line":8,"column":3,"nodeType":"482","messageId":"483","endLine":8,"endColumn":8},{"ruleId":"480","severity":1,"message":"567","line":9,"column":3,"nodeType":"482","messageId":"483","endLine":9,"endColumn":7},{"ruleId":"480","severity":1,"message":"552","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":18},{"ruleId":"480","severity":1,"message":"484","line":2,"column":17,"nodeType":"482","messageId":"483","endLine":2,"endColumn":26},{"ruleId":"480","severity":1,"message":"481","line":2,"column":28,"nodeType":"482","messageId":"483","endLine":2,"endColumn":36},{"ruleId":"480","severity":1,"message":"517","line":2,"column":38,"nodeType":"482","messageId":"483","endLine":2,"endColumn":45},{"ruleId":"491","severity":1,"message":"536","line":38,"column":6,"nodeType":"493","endLine":38,"endColumn":8,"suggestions":"568"},{"ruleId":"508","severity":1,"message":"509","line":59,"column":9,"nodeType":"510","endLine":59,"endColumn":29},{"ruleId":"508","severity":1,"message":"509","line":67,"column":11,"nodeType":"510","endLine":67,"endColumn":31},{"ruleId":"508","severity":1,"message":"509","line":70,"column":11,"nodeType":"510","endLine":70,"endColumn":30},{"ruleId":"508","severity":1,"message":"509","line":73,"column":11,"nodeType":"510","endLine":73,"endColumn":33},{"ruleId":"508","severity":1,"message":"509","line":99,"column":13,"nodeType":"510","endLine":99,"endColumn":35},{"ruleId":"508","severity":1,"message":"509","line":103,"column":13,"nodeType":"510","endLine":103,"endColumn":35},{"ruleId":"508","severity":1,"message":"509","line":107,"column":13,"nodeType":"510","endLine":107,"endColumn":35},{"ruleId":"480","severity":1,"message":"484","line":2,"column":17,"nodeType":"482","messageId":"483","endLine":2,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":2,"column":28,"nodeType":"482","messageId":"483","endLine":2,"endColumn":34},{"ruleId":"480","severity":1,"message":"552","line":3,"column":8,"nodeType":"482","messageId":"483","endLine":3,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":3,"column":22,"nodeType":"482","messageId":"483","endLine":3,"endColumn":28},{"ruleId":"480","severity":1,"message":"533","line":8,"column":9,"nodeType":"482","messageId":"483","endLine":8,"endColumn":17},{"ruleId":"480","severity":1,"message":"569","line":10,"column":10,"nodeType":"482","messageId":"483","endLine":10,"endColumn":18},{"ruleId":"480","severity":1,"message":"486","line":25,"column":9,"nodeType":"482","messageId":"483","endLine":25,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":26,"column":9,"nodeType":"482","messageId":"483","endLine":26,"endColumn":14},{"ruleId":"491","severity":1,"message":"536","line":36,"column":6,"nodeType":"493","endLine":36,"endColumn":8,"suggestions":"570"},{"ruleId":"480","severity":1,"message":"571","line":41,"column":9,"nodeType":"482","messageId":"483","endLine":41,"endColumn":19},{"ruleId":"508","severity":1,"message":"509","line":268,"column":13,"nodeType":"510","endLine":268,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":275,"column":28,"nodeType":"498","messageId":"499","endLine":275,"endColumn":30},{"ruleId":"496","severity":1,"message":"497","line":281,"column":28,"nodeType":"498","messageId":"499","endLine":281,"endColumn":30},{"ruleId":"496","severity":1,"message":"497","line":287,"column":28,"nodeType":"498","messageId":"499","endLine":287,"endColumn":30},{"ruleId":"480","severity":1,"message":"484","line":2,"column":17,"nodeType":"482","messageId":"483","endLine":2,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":2,"column":28,"nodeType":"482","messageId":"483","endLine":2,"endColumn":34},{"ruleId":"480","severity":1,"message":"552","line":3,"column":8,"nodeType":"482","messageId":"483","endLine":3,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":3,"column":22,"nodeType":"482","messageId":"483","endLine":3,"endColumn":28},{"ruleId":"480","severity":1,"message":"486","line":26,"column":9,"nodeType":"482","messageId":"483","endLine":26,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":27,"column":9,"nodeType":"482","messageId":"483","endLine":27,"endColumn":14},{"ruleId":"491","severity":1,"message":"536","line":36,"column":6,"nodeType":"493","endLine":36,"endColumn":8,"suggestions":"572"},{"ruleId":"508","severity":1,"message":"509","line":59,"column":13,"nodeType":"510","endLine":59,"endColumn":37},{"ruleId":"496","severity":1,"message":"556","line":62,"column":28,"nodeType":"498","messageId":"499","endLine":62,"endColumn":30},{"ruleId":"480","severity":1,"message":"552","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":1,"column":22,"nodeType":"482","messageId":"483","endLine":1,"endColumn":28},{"ruleId":"480","severity":1,"message":"484","line":4,"column":17,"nodeType":"482","messageId":"483","endLine":4,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":4,"column":28,"nodeType":"482","messageId":"483","endLine":4,"endColumn":34},{"ruleId":"480","severity":1,"message":"573","line":11,"column":9,"nodeType":"482","messageId":"483","endLine":11,"endColumn":15},{"ruleId":"574","severity":1,"message":"575","line":72,"column":24,"nodeType":"576","messageId":"499","endLine":72,"endColumn":28},{"ruleId":"496","severity":1,"message":"497","line":99,"column":26,"nodeType":"498","messageId":"499","endLine":99,"endColumn":28},{"ruleId":"574","severity":1,"message":"575","line":108,"column":34,"nodeType":"576","messageId":"499","endLine":108,"endColumn":38},{"ruleId":"480","severity":1,"message":"577","line":145,"column":9,"nodeType":"482","messageId":"483","endLine":145,"endColumn":17},{"ruleId":"508","severity":1,"message":"509","line":153,"column":13,"nodeType":"510","endLine":153,"endColumn":20},{"ruleId":"496","severity":1,"message":"497","line":232,"column":25,"nodeType":"498","messageId":"499","endLine":232,"endColumn":27},{"ruleId":"480","severity":1,"message":"552","line":3,"column":8,"nodeType":"482","messageId":"483","endLine":3,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":3,"column":22,"nodeType":"482","messageId":"483","endLine":3,"endColumn":28},{"ruleId":"480","severity":1,"message":"484","line":4,"column":17,"nodeType":"482","messageId":"483","endLine":4,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":4,"column":28,"nodeType":"482","messageId":"483","endLine":4,"endColumn":34},{"ruleId":"503","severity":1,"message":"504","line":31,"column":9,"nodeType":"505","messageId":"506","endLine":38,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":87,"column":14,"nodeType":"498","messageId":"499","endLine":87,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":89,"column":21,"nodeType":"498","messageId":"499","endLine":89,"endColumn":23},{"ruleId":"480","severity":1,"message":"486","line":136,"column":9,"nodeType":"482","messageId":"483","endLine":136,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":137,"column":9,"nodeType":"482","messageId":"483","endLine":137,"endColumn":14},{"ruleId":"491","severity":1,"message":"578","line":147,"column":6,"nodeType":"493","endLine":147,"endColumn":8,"suggestions":"579"},{"ruleId":"508","severity":1,"message":"509","line":157,"column":11,"nodeType":"510","endLine":157,"endColumn":32},{"ruleId":"496","severity":1,"message":"556","line":162,"column":29,"nodeType":"498","messageId":"499","endLine":162,"endColumn":31},{"ruleId":"508","severity":1,"message":"509","line":169,"column":21,"nodeType":"510","endLine":169,"endColumn":59},{"ruleId":"496","severity":1,"message":"556","line":218,"column":25,"nodeType":"498","messageId":"499","endLine":218,"endColumn":27},{"ruleId":"508","severity":1,"message":"509","line":227,"column":13,"nodeType":"510","endLine":230,"endColumn":15},{"ruleId":"480","severity":1,"message":"484","line":2,"column":17,"nodeType":"482","messageId":"483","endLine":2,"endColumn":26},{"ruleId":"480","severity":1,"message":"481","line":2,"column":28,"nodeType":"482","messageId":"483","endLine":2,"endColumn":36},{"ruleId":"480","severity":1,"message":"580","line":20,"column":10,"nodeType":"482","messageId":"483","endLine":20,"endColumn":19},{"ruleId":"480","severity":1,"message":"581","line":20,"column":21,"nodeType":"482","messageId":"483","endLine":20,"endColumn":33},{"ruleId":"508","severity":1,"message":"509","line":32,"column":9,"nodeType":"510","endLine":32,"endColumn":67},{"ruleId":"508","severity":1,"message":"509","line":43,"column":9,"nodeType":"510","endLine":43,"endColumn":81},{"ruleId":"508","severity":1,"message":"509","line":52,"column":9,"nodeType":"510","endLine":52,"endColumn":74},{"ruleId":"508","severity":1,"message":"509","line":61,"column":9,"nodeType":"510","endLine":61,"endColumn":71},{"ruleId":"508","severity":1,"message":"509","line":70,"column":9,"nodeType":"510","endLine":70,"endColumn":75},{"ruleId":"508","severity":1,"message":"509","line":79,"column":9,"nodeType":"510","endLine":79,"endColumn":77},{"ruleId":"480","severity":1,"message":"484","line":2,"column":17,"nodeType":"482","messageId":"483","endLine":2,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":2,"column":28,"nodeType":"482","messageId":"483","endLine":2,"endColumn":34},{"ruleId":"480","severity":1,"message":"552","line":3,"column":8,"nodeType":"482","messageId":"483","endLine":3,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":3,"column":22,"nodeType":"482","messageId":"483","endLine":3,"endColumn":28},{"ruleId":"524","severity":1,"message":"582","line":50,"column":9,"nodeType":"482","messageId":"526","endLine":50,"endColumn":17},{"ruleId":"480","severity":1,"message":"486","line":50,"column":9,"nodeType":"482","messageId":"483","endLine":50,"endColumn":17},{"ruleId":"524","severity":1,"message":"583","line":51,"column":9,"nodeType":"482","messageId":"526","endLine":51,"endColumn":14},{"ruleId":"480","severity":1,"message":"487","line":51,"column":9,"nodeType":"482","messageId":"483","endLine":51,"endColumn":14},{"ruleId":"524","severity":1,"message":"584","line":53,"column":9,"nodeType":"482","messageId":"526","endLine":53,"endColumn":14},{"ruleId":"491","severity":1,"message":"536","line":76,"column":6,"nodeType":"493","endLine":76,"endColumn":8,"suggestions":"585"},{"ruleId":"496","severity":1,"message":"497","line":112,"column":14,"nodeType":"498","messageId":"499","endLine":112,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":112,"column":30,"nodeType":"498","messageId":"499","endLine":112,"endColumn":32},{"ruleId":"496","severity":1,"message":"497","line":112,"column":46,"nodeType":"498","messageId":"499","endLine":112,"endColumn":48},{"ruleId":"586","severity":1,"message":"587","line":120,"column":25,"nodeType":"588","messageId":"589","endLine":120,"endColumn":26,"suggestions":"590"},{"ruleId":"586","severity":1,"message":"591","line":120,"column":42,"nodeType":"588","messageId":"589","endLine":120,"endColumn":43,"suggestions":"592"},{"ruleId":"496","severity":1,"message":"556","line":123,"column":23,"nodeType":"498","messageId":"499","endLine":123,"endColumn":25},{"ruleId":"508","severity":1,"message":"509","line":143,"column":13,"nodeType":"510","endLine":143,"endColumn":38},{"ruleId":"496","severity":1,"message":"497","line":165,"column":32,"nodeType":"498","messageId":"499","endLine":165,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":169,"column":32,"nodeType":"498","messageId":"499","endLine":169,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":173,"column":32,"nodeType":"498","messageId":"499","endLine":173,"endColumn":34},{"ruleId":"480","severity":1,"message":"484","line":3,"column":17,"nodeType":"482","messageId":"483","endLine":3,"endColumn":26},{"ruleId":"480","severity":1,"message":"557","line":4,"column":10,"nodeType":"482","messageId":"483","endLine":4,"endColumn":21},{"ruleId":"491","severity":1,"message":"593","line":18,"column":6,"nodeType":"493","endLine":18,"endColumn":8,"suggestions":"594"},{"ruleId":"480","severity":1,"message":"484","line":2,"column":17,"nodeType":"482","messageId":"483","endLine":2,"endColumn":26},{"ruleId":"480","severity":1,"message":"552","line":4,"column":8,"nodeType":"482","messageId":"483","endLine":4,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":4,"column":22,"nodeType":"482","messageId":"483","endLine":4,"endColumn":28},{"ruleId":"480","severity":1,"message":"595","line":5,"column":23,"nodeType":"482","messageId":"483","endLine":5,"endColumn":32},{"ruleId":"491","severity":1,"message":"536","line":18,"column":6,"nodeType":"493","endLine":18,"endColumn":8,"suggestions":"596"},{"ruleId":"480","severity":1,"message":"486","line":21,"column":9,"nodeType":"482","messageId":"483","endLine":21,"endColumn":17},{"ruleId":"480","severity":1,"message":"487","line":22,"column":9,"nodeType":"482","messageId":"483","endLine":22,"endColumn":14},{"ruleId":"538","severity":1,"message":"539","line":164,"column":9,"nodeType":"510","endLine":169,"endColumn":10},{"ruleId":"538","severity":1,"message":"539","line":173,"column":11,"nodeType":"510","endLine":173,"endColumn":53},{"ruleId":"538","severity":1,"message":"539","line":176,"column":11,"nodeType":"510","endLine":176,"endColumn":51},{"ruleId":"538","severity":1,"message":"539","line":178,"column":9,"nodeType":"510","endLine":178,"endColumn":48},{"ruleId":"538","severity":1,"message":"539","line":179,"column":9,"nodeType":"510","endLine":187,"endColumn":10},{"ruleId":"508","severity":1,"message":"509","line":198,"column":11,"nodeType":"510","endLine":198,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":207,"column":13,"nodeType":"510","endLine":207,"endColumn":34},{"ruleId":"508","severity":1,"message":"509","line":220,"column":15,"nodeType":"510","endLine":220,"endColumn":36},{"ruleId":"508","severity":1,"message":"509","line":224,"column":15,"nodeType":"510","endLine":224,"endColumn":37},{"ruleId":"496","severity":1,"message":"497","line":242,"column":44,"nodeType":"498","messageId":"499","endLine":242,"endColumn":46},{"ruleId":"496","severity":1,"message":"497","line":248,"column":44,"nodeType":"498","messageId":"499","endLine":248,"endColumn":46},{"ruleId":"496","severity":1,"message":"497","line":254,"column":44,"nodeType":"498","messageId":"499","endLine":254,"endColumn":46},{"ruleId":"496","severity":1,"message":"497","line":264,"column":22,"nodeType":"498","messageId":"499","endLine":264,"endColumn":24},{"ruleId":"496","severity":1,"message":"497","line":265,"column":32,"nodeType":"498","messageId":"499","endLine":265,"endColumn":34},{"ruleId":"496","severity":1,"message":"497","line":266,"column":26,"nodeType":"498","messageId":"499","endLine":266,"endColumn":28},{"ruleId":"496","severity":1,"message":"497","line":267,"column":32,"nodeType":"498","messageId":"499","endLine":267,"endColumn":34},{"ruleId":"480","severity":1,"message":"552","line":1,"column":8,"nodeType":"482","messageId":"483","endLine":1,"endColumn":18},{"ruleId":"480","severity":1,"message":"489","line":1,"column":22,"nodeType":"482","messageId":"483","endLine":1,"endColumn":28},{"ruleId":"480","severity":1,"message":"597","line":4,"column":8,"nodeType":"482","messageId":"483","endLine":4,"endColumn":13},{"ruleId":"480","severity":1,"message":"484","line":5,"column":17,"nodeType":"482","messageId":"483","endLine":5,"endColumn":26},{"ruleId":"480","severity":1,"message":"521","line":5,"column":28,"nodeType":"482","messageId":"483","endLine":5,"endColumn":34},{"ruleId":"491","severity":1,"message":"536","line":22,"column":6,"nodeType":"493","endLine":22,"endColumn":8,"suggestions":"598"},{"ruleId":"496","severity":1,"message":"497","line":38,"column":23,"nodeType":"498","messageId":"499","endLine":38,"endColumn":25},{"ruleId":"480","severity":1,"message":"573","line":57,"column":11,"nodeType":"482","messageId":"483","endLine":57,"endColumn":17},{"ruleId":"574","severity":1,"message":"575","line":94,"column":13,"nodeType":"576","messageId":"499","endLine":94,"endColumn":17},{"ruleId":"574","severity":1,"message":"575","line":132,"column":26,"nodeType":"576","messageId":"499","endLine":132,"endColumn":30},{"ruleId":"496","severity":1,"message":"497","line":159,"column":28,"nodeType":"498","messageId":"499","endLine":159,"endColumn":30},{"ruleId":"574","severity":1,"message":"575","line":168,"column":36,"nodeType":"576","messageId":"499","endLine":168,"endColumn":40},{"ruleId":"508","severity":1,"message":"509","line":211,"column":15,"nodeType":"510","endLine":211,"endColumn":22},{"ruleId":"496","severity":1,"message":"497","line":290,"column":27,"nodeType":"498","messageId":"499","endLine":290,"endColumn":29},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'logo' is defined but never used.","'username' is assigned a value but never used.","'email' is assigned a value but never used.","'id' is assigned a value but never used.","'logout' is defined but never used.","'progress' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'getQuestions', 'getTopicName', 'id', and 'topic'. Either include them or remove the dependency array.","ArrayExpression",["599"],"'count' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'plot'. Either include it or remove the dependency array.",["600"],"'contentScroll' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'newAddress' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'leaderboard' is defined but never used.","'useCallback' is defined but never used.","'useMemo' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getLeaderboard'. Either include it or remove the dependency array.",["601"],"'cardIds' is assigned a value but never used.","'useRef' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","no-redeclare","'level' is already defined.","redeclared","'user' is assigned a value but never used.","'avatar' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'refreshPage'. Either include it or remove the dependency array.",["602"],"React Hook React.useEffect has a missing dependency: 'addView'. Either include it or remove the dependency array.",["603"],"'navigate' is assigned a value but never used.","'useLocation' is defined but never used.","'logOut' is defined but never used.","React Hook React.useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["604"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'React' is defined but never used.","'ToastContainer' is defined but never used.","'Slide' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'handleClick' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getAllGames' and 'searchGames'. Either include them or remove the dependency array.",["605"],"React Hook React.useEffect has missing dependencies: 'getAllGames', 'query', 'queryMain', and 'searchGames'. Either include them or remove the dependency array.",["606"],"'Navigate' is defined but never used.","'IsLoggedIn' is defined but never used.","'getCurrentUser' is defined but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useNavigate' is defined but never used.","React Hook React.useEffect has missing dependencies: 'getRecords' and 'id'. Either include them or remove the dependency array.",["607"],"'month' is assigned a value but never used.","'year' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.",["608"],"'comments' is assigned a value but never used.",["609"],"'formatTime' is assigned a value but never used.",["610"],"'tagBox' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","'clickTag' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getRecords', 'id', and 'recordNum'. Either include them or remove the dependency array.",["611"],"'sideState' is assigned a value but never used.","'setSideState' is assigned a value but never used.","'username' is already defined.","'email' is already defined.","'roles' is already defined.",["612"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["613","614"],"Unnecessary escape character: \\/.",["615","616"],"React Hook React.useEffect has a missing dependency: 'subject'. Either include it or remove the dependency array.",["617"],"'useParams' is defined but never used.",["618"],"'axios' is defined but never used.",["619"],{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"630","fix":"638"},{"desc":"630","fix":"639"},{"desc":"630","fix":"640"},{"desc":"641","fix":"642"},{"desc":"630","fix":"643"},{"messageId":"644","fix":"645","desc":"646"},{"messageId":"647","fix":"648","desc":"649"},{"messageId":"644","fix":"650","desc":"646"},{"messageId":"647","fix":"651","desc":"649"},{"desc":"652","fix":"653"},{"desc":"630","fix":"654"},{"desc":"630","fix":"655"},"Update the dependencies array to be: [getQuestions, getTopicName, id, topic]",{"range":"656","text":"657"},"Update the dependencies array to be: [plot, questions]",{"range":"658","text":"659"},"Update the dependencies array to be: [getLeaderboard]",{"range":"660","text":"661"},"Update the dependencies array to be: [refreshPage]",{"range":"662","text":"663"},"Update the dependencies array to be: [addView, views]",{"range":"664","text":"665"},"Update the dependencies array to be: [id]",{"range":"666","text":"667"},"Update the dependencies array to be: [getAllGames, query, searchGames]",{"range":"668","text":"669"},"Update the dependencies array to be: [getAllGames, query, queryMain, rank, searchGames]",{"range":"670","text":"671"},"Update the dependencies array to be: [getRecords, id]",{"range":"672","text":"673"},{"range":"674","text":"667"},{"range":"675","text":"667"},{"range":"676","text":"667"},"Update the dependencies array to be: [getRecords, id, recordNum]",{"range":"677","text":"678"},{"range":"679","text":"667"},"removeEscape",{"range":"680","text":"681"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"682","text":"683"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"684","text":"681"},{"range":"685","text":"683"},"Update the dependencies array to be: [subject]",{"range":"686","text":"687"},{"range":"688","text":"667"},{"range":"689","text":"667"},[1843,1845],"[getQuestions, getTopicName, id, topic]",[3611,3622],"[plot, questions]",[2594,2596],"[getLeaderboard]",[9069,9071],"[refreshPage]",[10952,10959],"[addView, views]",[1675,1677],"[id]",[1358,1365],"[getAllGames, query, searchGames]",[1609,1615],"[getAllGames, query, queryMain, rank, searchGames]",[5370,5372],"[getRecords, id]",[1223,1225],[1094,1096],[1075,1077],[4109,4111],"[getRecords, id, recordNum]",[2386,2388],[3682,3683],"",[3682,3682],"\\",[3699,3700],[3699,3699],[537,539],"[subject]",[666,668],[812,814]]