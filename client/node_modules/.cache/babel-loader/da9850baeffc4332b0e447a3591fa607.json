{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport \"../styles/search.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Search() {\n  _s();\n\n  const [searchState, setSearchState] = React.useState(false);\n\n  const closeSearch = () => {\n    setSearchState(false);\n  };\n\n  const openSearch = () => {\n    setSearchState(true);\n  };\n\n  React.useEffect(() => {\n    if (searchState === true) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else if (searchState === false) {\n      return null;\n    }\n  });\n}\n\n_s(Search, \"mC4+RduIIKGoWm+uJjOORsJPc6o=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","Search","searchState","setSearchState","closeSearch","openSearch"],"sources":["/Users/celia/Projects/Merakey/client/src/components/search.js"],"sourcesContent":["import \"../styles/search.scss\";\nimport React, { useEffect, useState } from \"react\";\n\nexport function Search() {\n  const [searchState, setSearchState] = React.useState(false);\n  const closeSearch = () => {\n    setSearchState(false);\n  };\n  const openSearch = () => {\n    setSearchState(true);\n  };\n  React.useEffect(() => {\n    if (searchState === true) {\n      return <></>;\n    } else if (searchState === false) {\n      return null;\n    }\n  });\n}\n"],"mappings":";;AAAA,OAAO,uBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,OAAO,SAASC,MAAT,GAAkB;EAAA;;EACvB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,KAAK,CAACE,QAAN,CAAe,KAAf,CAAtC;;EACA,MAAMI,WAAW,GAAG,MAAM;IACxBD,cAAc,CAAC,KAAD,CAAd;EACD,CAFD;;EAGA,MAAME,UAAU,GAAG,MAAM;IACvBF,cAAc,CAAC,IAAD,CAAd;EACD,CAFD;;EAGAL,KAAK,CAACC,SAAN,CAAgB,MAAM;IACpB,IAAIG,WAAW,KAAK,IAApB,EAA0B;MACxB,oBAAO,qCAAP;IACD,CAFD,MAEO,IAAIA,WAAW,KAAK,KAApB,EAA2B;MAChC,OAAO,IAAP;IACD;EACF,CAND;AAOD;;GAfeD,M;;KAAAA,M"},"metadata":{},"sourceType":"module"}