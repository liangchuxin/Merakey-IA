{"ast":null,"code":"var _jsxFileName = \"/Users/celia/Projects/Merakey/client/src/components/user/userComments.js\",\n    _s = $RefreshSig$();\n\nimport SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport \"./styles/userComments.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserComments() {\n  _s();\n\n  const [comments, setComments] = React.useState([]);\n\n  const getComments = userId => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      setComments(data.comments);\n    });\n  };\n\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) => roles.push(x.slice(5).toLowerCase()));\n    console.log(roles);\n  }\n\n  React.useEffect(() => {\n    getComments(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SecondSide, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"user-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: `100px`\n            },\n            children: \"Parent id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: `450px`\n            },\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.parentId !== null && comment.parentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.gameId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: comment.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserComments, \"Gb0IamD7JIldgnM2007Mizf1VNM=\");\n\n_c = UserComments;\nexport default UserComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserComments\");","map":{"version":3,"names":["SecondSide","React","useEffect","useRef","IsLoggedIn","logout","getCurrentUser","UserComments","comments","setComments","useState","getComments","userId","fetch","method","headers","then","res","json","data","console","log","username","email","id","roles","forEach","x","i","push","slice","toLowerCase","window","scrollTo","width","map","comment","parentId","text","gameId","createdAt"],"sources":["/Users/celia/Projects/Merakey/client/src/components/user/userComments.js"],"sourcesContent":["import SecondSide from \"./secondSide\";\nimport React, { useEffect, useRef } from \"react\";\nimport IsLoggedIn, { logout, getCurrentUser } from \"../utilities/loginStatus\";\nimport \"./styles/userComments.scss\";\n\nfunction UserComments() {\n  const [comments, setComments] = React.useState([]);\n  const getComments = (userId) => {\n    fetch(`http://localhost:8080/api/profiles/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setComments(data.comments);\n      });\n  };\n  if (getCurrentUser) {\n    console.log(getCurrentUser);\n    var username = getCurrentUser.username;\n    var email = getCurrentUser.email;\n    var id = getCurrentUser.id;\n    var roles = [];\n    getCurrentUser.roles.forEach((x, i) =>\n      roles.push(x.slice(5).toLowerCase())\n    );\n    console.log(roles);\n  }\n  React.useEffect(() => {\n    getComments(id);\n  }, []);\n  React.useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <>\n      <SecondSide />\n      <section class=\"user-main\">\n        <table>\n          <tr>\n            <td>id</td>\n            <td style={{ width: `100px` }}>Parent id</td>\n            <td style={{ width: `450px` }}>Content</td>\n            <td>Game</td>\n            <td>Date</td>\n            <td>Actions</td>\n          </tr>\n          {comments.map((comment) => (\n            <tr>\n              <td>{comment.id}</td>\n              <td>{comment.parentId !== null && comment.parentId}</td>{\" \"}\n              <td>{comment.text}</td>\n              <td>{comment.gameId}</td>\n              <td>{comment.createdAt}</td>\n              <td>Edit</td>\n            </tr>\n          ))}\n        </table>\n        <div className=\"bg-overlay\" />\n      </section>\n    </>\n  );\n}\nexport default UserComments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}